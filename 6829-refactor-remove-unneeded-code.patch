From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Emerson Pinter <e@pinter.dev>
Date: Mon, 19 Aug 2024 12:47:35 -0300
Subject: [PATCH] 6829: refactor: remove unneeded code

---
 .../classrecovery/RecoveredClass.java              | 14 +++-----------
 .../classrecovery/RecoveredClassHelper.java        | 11 +++--------
 2 files changed, 6 insertions(+), 19 deletions(-)

diff --git a/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClass.java b/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClass.java
index 2e02d61544..9676e704c0 100644
--- a/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClass.java
+++ b/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClass.java
@@ -321,9 +321,7 @@ public class RecoveredClass {
 	}
 
 	public void removeFromConstructorDestructorList(Function function) {
-		if (constructorAndDestructorList.contains(function)) {
-			constructorAndDestructorList.remove(function);
-		}
+		constructorAndDestructorList.remove(function);
 	}
 
 	public void addConstructor(Function function) {
@@ -368,10 +366,7 @@ public class RecoveredClass {
 	}
 
 	public void removeIndeterminateInline(Function function) {
-		if (indeterminateInlineList.contains(function)) {
-			indeterminateInlineList.remove(function);
-		}
-		return;
+		indeterminateInlineList.remove(function);
 	}
 
 	public void addIndeterminateConstructorOrDestructorList(List<Function> list) {
@@ -386,10 +381,7 @@ public class RecoveredClass {
 	}
 
 	public void removeIndeterminateConstructorOrDestructor(Function function) {
-		if (indeterminateList.contains(function)) {
-			indeterminateList.remove(function);
-		}
-		return;
+		indeterminateList.remove(function);
 	}
 
 	public List<Function> getConstructorOrDestructorFunctions() {
diff --git a/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClassHelper.java b/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClassHelper.java
index 23019b6e1b..af332080fc 100644
--- a/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClassHelper.java
+++ b/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClassHelper.java
@@ -888,9 +888,7 @@ public class RecoveredClassHelper {
 			return null;
 		}
 
-		if (classList.contains(recoveredClass)) {
-			classList.remove(recoveredClass);
-		}
+		classList.remove(recoveredClass);
 
 		if (classList.size() == 0) {
 			return null;
@@ -5345,8 +5343,8 @@ public class RecoveredClassHelper {
 	 * @throws CancelledException if cancelled
 	 */
 	public List<Function> getVfunctions(Address vftableAddress) throws CancelledException {
+		List<Function> virtualFunctionList = new ArrayList<>();
 
-		Set<Function> vfunctionSet = new HashSet<Function>();
 		Data vftableData = program.getListing().getDefinedDataAt(vftableAddress);
 
 		// now make sure the array or the structure is all pointers
@@ -5369,13 +5367,10 @@ public class RecoveredClassHelper {
 			Function function = extendedFlatAPI.getReferencedFunction(functionPointerAddress);
 
 			if (function != null) {
-				vfunctionSet.add(function);
+				virtualFunctionList.add(function);
 			}
-
 		}
-		List<Function> virtualFunctionList = new ArrayList<Function>(vfunctionSet);
 		return virtualFunctionList;
-
 	}
 
 	/**
-- 
2.45.1

