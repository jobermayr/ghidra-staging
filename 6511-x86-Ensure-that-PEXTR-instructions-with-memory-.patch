From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Sleigh-InSPECtor <sleighinspector@outlook.com>
Date: Wed, 15 May 2024 16:46:25 +0930
Subject: [PATCH] 6511: x86: Ensure that PEXTR instructions with memory
 destinations write to memory

x86: Ensure that PEXTR instructions with memory destinations write to memory.
---
 Ghidra/Processors/x86/data/languages/ia.sinc | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/Ghidra/Processors/x86/data/languages/ia.sinc b/Ghidra/Processors/x86/data/languages/ia.sinc
index 7f1ae5583d..f96d51fe47 100644
--- a/Ghidra/Processors/x86/data/languages/ia.sinc
+++ b/Ghidra/Processors/x86/data/languages/ia.sinc
@@ -8879,7 +8879,7 @@ define pcodeop extractps;
     local low:1 = shift < 64:1;
     local temp:8;
     conditionalAssign(temp,low,XmmReg[0,64] >> shift,XmmReg[64,64] >> (shift - 64));
-    Mem = temp:1;
+    *Mem = temp:1;
 }
 
 :PEXTRD Rmr32, XmmReg, imm8     is vexMode=0 & $(PRE_66) & byte=0x0F; byte=0x3A; byte=0x16; mod=3 & XmmReg & Rmr32 & check_Rmr32_dest; imm8 
@@ -8898,7 +8898,7 @@ define pcodeop extractps;
     local low:1 = shift < 64:1;
     local temp:8;
     conditionalAssign(temp,low,XmmReg[0,64] >> shift,XmmReg[64,64] >> (shift - 64));
-    Mem = temp:4;
+    *Mem = temp:4;
 }
 
 @ifdef IA64
@@ -8911,7 +8911,9 @@ define pcodeop extractps;
 :PEXTRQ Mem, XmmReg, imm8     is $(LONGMODE_ON) & vexMode=0 & bit64=1 & $(PRE_66) & $(REX_W) & byte=0x0F; byte=0x3A; byte=0x16; XmmReg ... & Mem; imm8 
 { 
     local high:1 = imm8 & 0x1;
-    conditionalAssign(Mem,high,XmmReg[64,64],XmmReg[0,64]);
+    local temp:8;
+    conditionalAssign(temp,high,XmmReg[64,64],XmmReg[0,64]);
+    *Mem = temp;
 }
 @endif
 
-- 
2.45.1

