From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andrew Strelsky <ajs222@njit.edu>
Date: Fri, 23 Jun 2023 08:43:47 -0400
Subject: [PATCH] 5481: #5475 and #5480 convert to class action

---
 .../actions/ConvertToClassAction.java         | 21 ++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/symboltree/actions/ConvertToClassAction.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/symboltree/actions/ConvertToClassAction.java
index 40dec28590..4e92c20934 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/symboltree/actions/ConvertToClassAction.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/symboltree/actions/ConvertToClassAction.java
@@ -22,7 +22,12 @@ import docking.widgets.tree.GTreeNode;
 import ghidra.app.plugin.core.symboltree.*;
 import ghidra.app.plugin.core.symboltree.nodes.SymbolNode;
 import ghidra.app.util.NamespaceUtils;
+import ghidra.program.model.data.DataType;
+import ghidra.program.model.data.DataTypeConflictHandler;
+import ghidra.program.model.data.DataTypeManager;
+import ghidra.program.model.listing.GhidraClass;
 import ghidra.program.model.listing.Program;
+import ghidra.program.model.listing.VariableUtilities;
 import ghidra.program.model.symbol.*;
 import ghidra.util.Msg;
 import ghidra.util.exception.AssertException;
@@ -78,7 +83,10 @@ public class ConvertToClassAction extends SymbolTreeContextAction {
 
 			GTreeNode classesNode = root.getChild(SymbolCategory.CLASS_CATEGORY.getName());
 			if (classesNode != null) {
-				context.getSymbolTree().startEditing(classesNode, name);
+				GTreeNode parent = node.getParent();
+				parent.removeNode(node);
+				program.flushEvents();
+				context.getSymbolTree().setSelectedNode(parent.getChild(name));
 			}
 			else {
 				Msg.showInfo(this, null, "Classes Filtered Out of View",
@@ -91,8 +99,15 @@ public class ConvertToClassAction extends SymbolTreeContextAction {
 		int id = program.startTransaction(NAME);
 		boolean success = false;
 		try {
-			NamespaceUtils.convertNamespaceToClass(ns);
-			success = true;
+			GhidraClass gc = NamespaceUtils.convertNamespaceToClass(ns);
+
+			// ensure a DataType exists for the this parameter
+			DataTypeManager dtm = program.getDataTypeManager();
+			DataType dt = VariableUtilities.findOrCreateClassStruct(gc, dtm);
+			if (dt != null) {
+				dtm.resolve(dt, DataTypeConflictHandler.REPLACE_HANDLER);
+				success = true;
+			}
 		}
 		catch (InvalidInputException e) {
 			// This is thrown when the provided namespace is a function
-- 
2.45.1

