From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Johannes Obermayr <johannesobermayr@gmx.de>
Date: Tue, 10 Oct 2023 19:05:17 +0200
Subject: [PATCH] 5872: x86: Simplify MOVSB.REP to memcpy in decompiler

---
 Ghidra/Processors/x86/data/languages/ia.sinc | 36 ++++++++++++++++++--
 1 file changed, 34 insertions(+), 2 deletions(-)

diff --git a/Ghidra/Processors/x86/data/languages/ia.sinc b/Ghidra/Processors/x86/data/languages/ia.sinc
index 387227e733..22cabaa8f7 100644
--- a/Ghidra/Processors/x86/data/languages/ia.sinc
+++ b/Ghidra/Processors/x86/data/languages/ia.sinc
@@ -1464,6 +1464,7 @@ rep: ".REP" is ((repprefx=1 & repneprefx=0)|(repprefx=0 & repneprefx=1)) & addrs
 rep: ".REP" is ((repprefx=1 & repneprefx=0)|(repprefx=0 & repneprefx=1)) & addrsize=2  { if (RCX==0) goto inst_next; RCX=RCX-1; }
 @endif
 rep:        is repprefx=0 & repneprefx=0			{ }
+repx: ".REP" is ((repprefx=1 & repneprefx=0)|(repprefx=0 & repneprefx=1)) { }
 
 reptail:	is ((repprefx=1 & repneprefx=0)|(repprefx=0 & repneprefx=1))			{ goto inst_start; }
 reptail:	is repprefx=0 & repneprefx=0			{ }
@@ -3977,7 +3978,23 @@ define pcodeop swap_bytes;
 :MOVNTI Mem,Reg64       is $(LONGMODE_ON) & vexMode=0 & opsize = 2; byte=0xf; byte=0xc3; Mem & Reg64 ...     { *Mem = Reg64; }
 @endif
 
-:MOVSB^rep^reptail eseDI1,dseSI1    is vexMode=0 & rep & reptail & byte=0xa4 & eseDI1 & dseSI1          { build rep; build eseDI1; build dseSI1; eseDI1 = dseSI1; build reptail; }
+:MOVSB^rep^reptail eseDI1,dseSI1    is vexMode=0 & rep & reptail & repprefx=0 & byte=0xa4 & eseDI1 & dseSI1          { build rep; build eseDI1; build dseSI1; eseDI1 = dseSI1; build reptail; }
+define pcodeop memcpy;
+:MOVSB^repx DI,SI	is vexMode=0 & addrsize=0 & repx & repprefx=1 & byte=0xa4 & DI & SI
+{
+  memcpy(DI, SI, CX);
+}
+:MOVSB^repx EDI,ESI      is vexMode=0 & addrsize=1 & repx & repprefx=1 & byte=0xa4 & EDI & ESI
+{
+  memcpy(EDI, ESI, ECX);
+}
+@ifdef IA64
+:MOVSB^repx RDI,RSI	is vexMode=0 & addrsize=2 & repx & repprefx=1 & byte=0xa4 & RDI & RSI
+{
+  memcpy(RDI, RSI, ECX);
+}
+@endif
+
 :MOVSW^rep^reptail eseDI2,dseSI2    is vexMode=0 & rep & reptail & opsize=0 & byte=0xa5 & eseDI2 & dseSI2   { build rep; build eseDI2; build dseSI2; eseDI2 = dseSI2; build reptail; }
 :MOVSD^rep^reptail eseDI4,dseSI4    is vexMode=0 & rep & reptail & opsize=1 & byte=0xa5 & eseDI4 & dseSI4   { build rep; build eseDI4; build dseSI4; eseDI4 = dseSI4; build reptail; }
 @ifdef IA64
@@ -4642,7 +4659,22 @@ define pcodeop stac;
 
 :STMXCSR m32        is vexMode=0 & byte=0xf; byte=0xae; ( mod != 0b11 & reg_opcode=3 ) ... & m32 { m32 = MXCSR; }
 
-:STOSB^rep^reptail eseDI1   is vexMode=0 & rep & reptail & byte=0xaa & eseDI1           { build rep; build eseDI1; eseDI1=AL; build reptail; }
+:STOSB^rep^reptail eseDI1   is vexMode=0 & rep & reptail & repprefx=0 & byte=0xaa & eseDI1           { build rep; build eseDI1; eseDI1=AL; build reptail; }
+define pcodeop memset;
+:STOSB^repx DI,AX   is vexMode=0 & addrsize=0 & repx & repprefx=1 & byte=0xaa & DI & AX
+{
+  memset(DI, AX, CX);
+}
+:STOSB^repx EDI,EAX   is vexMode=0 & addrsize=1 & repx & repprefx=1 & byte=0xaa & EDI & EAX
+{
+  memset(EDI, EAX, ECX);
+}
+@ifdef IA64
+:STOSB^repx RDI,RAX   is vexMode=0 & addrsize=2 & repx & repprefx=1 & byte=0xaa & RDI & RAX
+{
+  memset(RDI, RAX, ECX);
+}
+@endif
 :STOSW^rep^reptail eseDI2   is vexMode=0 & rep & reptail & opsize=0 & byte=0xab & eseDI2    { build rep; build eseDI2; eseDI2=AX; build reptail; }
 :STOSD^rep^reptail eseDI4   is vexMode=0 & rep & reptail & opsize=1 & byte=0xab & eseDI4    { build rep; build eseDI4; eseDI4=EAX; build reptail; }
 @ifdef IA64
-- 
2.45.1

