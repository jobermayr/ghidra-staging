From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Gregory Morse <gregory.morse@live.com>
Date: Sat, 20 Jul 2019 11:57:46 +0200
Subject: [PATCH] 0816: Potentially ambiguous macro operator names used

4 operators are emitted in finally C code: ZEXT, SEXT, CONCAT, SUB
Although generally the sizes are just one character (from 1 to 8) potentially numeric values can be 16 bytes long.
The suffix 112 to any of these for example.  Could be 1 byte and 12 bytes.  Or 11 bytes and 2 bytes.  Obviously the naming convention here is poorly chosen.

However that being said, this behavior could be deliberately depended upon in other areas though AFAIK only custom tools would do so.  It is better to change it earlier than later partly for that reason as tools could learn to depend on the behavior as opposed to doing what I have done and choosing to fix the ambiguity in the C source to begin with.
---
 Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc
index 611d0a9ea0..24fd237b29 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/typeop.cc
@@ -1058,7 +1058,7 @@ string TypeOpIntZext::getOperatorName(const PcodeOp *op) const
 {
   ostringstream s;
   
-  s << name << dec << op->getIn(0)->getSize() << op->getOut()->getSize();
+  s << name << dec << op->getIn(0)->getSize() << "_" << op->getOut()->getSize();
   return s.str();
 }
 
@@ -1084,7 +1084,7 @@ string TypeOpIntSext::getOperatorName(const PcodeOp *op) const
 {
   ostringstream s;
   
-  s << name << dec << op->getIn(0)->getSize() << op->getOut()->getSize();
+  s << name << dec << op->getIn(0)->getSize() << "_" << op->getOut()->getSize();
   return s.str();
 }
 
@@ -1916,7 +1916,7 @@ string TypeOpPiece::getOperatorName(const PcodeOp *op) const
 {
   ostringstream s;
 
-  s << name << dec << op->getIn(0)->getSize() << op->getIn(1)->getSize();
+  s << name << dec << op->getIn(0)->getSize() << "_" << op->getIn(1)->getSize();
   return s.str();
 }
 
@@ -1995,7 +1995,7 @@ string TypeOpSubpiece::getOperatorName(const PcodeOp *op) const
 {
   ostringstream s;
 
-  s << name << dec << op->getIn(0)->getSize() << op->getOut()->getSize();
+  s << name << dec << op->getIn(0)->getSize() << "_" << op->getOut()->getSize();
   return s.str();
 }
 
-- 
2.45.0

