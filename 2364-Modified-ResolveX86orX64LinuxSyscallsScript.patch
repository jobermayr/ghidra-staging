From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: astrelsky <ajs222@njit.edu>
Date: Tue, 13 Oct 2020 18:54:20 -0400
Subject: [PATCH] 2364: Modified ResolveX86orX64LinuxSyscallsScript

This modification allows the script to set the function name
in case the syscall list has been updated or corrected.
---
 .../ghidra_scripts/ResolveX86orX64LinuxSyscallsScript.java    | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/Ghidra/Features/Base/ghidra_scripts/ResolveX86orX64LinuxSyscallsScript.java b/Ghidra/Features/Base/ghidra_scripts/ResolveX86orX64LinuxSyscallsScript.java
index 9fee16e16c..3ffff1c25e 100644
--- a/Ghidra/Features/Base/ghidra_scripts/ResolveX86orX64LinuxSyscallsScript.java
+++ b/Ghidra/Features/Base/ghidra_scripts/ResolveX86orX64LinuxSyscallsScript.java
@@ -180,7 +180,7 @@ public class ResolveX86orX64LinuxSyscallsScript extends GhidraScript {
 			Function callee = currentProgram.getFunctionManager().getFunctionAt(callTarget);
 			if (callee == null) {
 				String funcName = "syscall_" + String.format("%08X", offset);
-				if (syscallNumbersToNames.get(offset) != null) {
+				if (syscallNumbersToNames.containsKey(offset)) {
 					funcName = syscallNumbersToNames.get(offset);
 				}
 				callee = createFunction(callTarget, funcName);
@@ -190,6 +190,8 @@ public class ResolveX86orX64LinuxSyscallsScript extends GhidraScript {
 				if (noreturnSyscalls.contains(funcName)) {
 					callee.setNoReturn(true);
 				}
+			} else if (syscallNumbersToNames.containsKey(offset)) {
+				callee.setName(syscallNumbersToNames.get(offset), SourceType.USER_DEFINED);
 			}
 			Reference ref = currentProgram.getReferenceManager()
 					.addMemoryReference(callSite, callTarget, overrideType, SourceType.USER_DEFINED,
-- 
2.45.0

