From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Simon Abler <simon.abler@ematric.com>
Date: Wed, 18 Jun 2025 11:50:44 +0200
Subject: [PATCH] 8270: Fix PIC18 RLNCF and RRNCF instructions to use rotate
 instead of shift

Fix #8269 PIC18 RLNCF and RRNCF instructions to use rotate
 instead of shift

The RLNCF and RRNCF instructions were previously implemented as logical
shifts (`<<` and `>>`), which is incorrect according to the Microchip
PIC18 instruction set specification.

This commit replaces the incorrect shift logic with proper byte rotation:
- RRNCF now rotates right: `srcREG >> 1 | srcREG << 7`
- RLNCF now rotates left:  `srcREG << 1 | srcREG >> 7`

This ensures correct analysis and decompilation output in Ghidra for
these instructions.

Modified:
- Ghidra/Processors/PIC/data/languages/pic18_instructions.sinc
---
 Ghidra/Processors/PIC/data/languages/pic18_instructions.sinc | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/Ghidra/Processors/PIC/data/languages/pic18_instructions.sinc b/Ghidra/Processors/PIC/data/languages/pic18_instructions.sinc
index eb7f414c83..0548be181b 100644
--- a/Ghidra/Processors/PIC/data/languages/pic18_instructions.sinc
+++ b/Ghidra/Processors/PIC/data/languages/pic18_instructions.sinc
@@ -1004,7 +1004,7 @@ A: "BANKED"			is a=1										{ }
 	#  0100 0111 0000 0000  ->	RLNCF REG0x0, f, BANKED
 	#  0100 0110 1101 1000  ->	RLNCF STATUS, f, ACCESS
 	#  0100 0111 1101 1000  ->	RLNCF REG0xD8, f, BANKED
-	tmp:1 = srcREG << 1;
+	tmp:1 = srcREG << 1 | srcREG >> 7;
 	destREG = tmp;
 	setResultFlags(tmp);
 }
@@ -1037,7 +1037,7 @@ A: "BANKED"			is a=1										{ }
 	#  0100 0011 0000 0000  ->	RRNCF REG0x0, f, BANKED
 	#  0100 0010 1101 1000  ->	RRNCF STATUS, f, ACCESS
 	#  0100 0011 1101 1000  ->	RRNCF REG0xD8, f, BANKED
-	tmp:1 = srcREG >> 1;
+	tmp:1 = srcREG >> 1 | srcREG << 7;
 	destREG = tmp;
 	setResultFlags(tmp);
 }
-- 
2.45.1

