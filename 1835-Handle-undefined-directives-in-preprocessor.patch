From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: mumbel <22204578+mumbel@users.noreply.github.com>
Date: Sun, 3 May 2020 19:05:13 -0500
Subject: [PATCH] 1835: Handle undefined directives in preprocessor

Tokenizing undefined directives currently generates an error as
the lookup fails.  Using undefined directives should be valid
code as directives are meant to be defined or undefined.

Added input and output for SleighPreprocessorTest
---
 .../SoftwareModeling/certification.manifest   |  2 ++
 .../sleigh/grammar/SleighPreprocessor.java    |  3 ++
 .../src/test/resources/ifdef.input            | 29 +++++++++++++++++++
 .../src/test/resources/ifdef.output           | 29 +++++++++++++++++++
 4 files changed, 63 insertions(+)
 create mode 100644 Ghidra/Framework/SoftwareModeling/src/test/resources/ifdef.input
 create mode 100644 Ghidra/Framework/SoftwareModeling/src/test/resources/ifdef.output

diff --git a/Ghidra/Framework/SoftwareModeling/certification.manifest b/Ghidra/Framework/SoftwareModeling/certification.manifest
index ada6acd606..1677646407 100644
--- a/Ghidra/Framework/SoftwareModeling/certification.manifest
+++ b/Ghidra/Framework/SoftwareModeling/certification.manifest
@@ -49,6 +49,8 @@ src/test/resources/empty.input||GHIDRA||reviewed||END|
 src/test/resources/empty.output||GHIDRA||reviewed||END|
 src/test/resources/expression.input||GHIDRA||reviewed||END|
 src/test/resources/expression.output||GHIDRA||reviewed||END|
+src/test/resources/ifdef.input||GHIDRA||||END|
+src/test/resources/ifdef.output||GHIDRA||||END|
 src/test/resources/include.input||GHIDRA||reviewed||END|
 src/test/resources/include.output||GHIDRA||reviewed||END|
 src/test/resources/includes/actual.inc||GHIDRA||||END|
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/sleigh/grammar/SleighPreprocessor.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/sleigh/grammar/SleighPreprocessor.java
index f0ca7bc98f..980d02eb35 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/sleigh/grammar/SleighPreprocessor.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/sleigh/grammar/SleighPreprocessor.java
@@ -411,6 +411,9 @@ public class SleighPreprocessor implements ExpressionEnvironment {
 
 	@Override
 	public void reportError(String msg) {
+		if (isInif()) {
+			return;
+		}
 		errorCount += 1;
 		Location location = new Location(file.getName(),lineno);
 		Msg.error(this, location + ": " + msg);
diff --git a/Ghidra/Framework/SoftwareModeling/src/test/resources/ifdef.input b/Ghidra/Framework/SoftwareModeling/src/test/resources/ifdef.input
new file mode 100644
index 0000000000..921ae750cd
--- /dev/null
+++ b/Ghidra/Framework/SoftwareModeling/src/test/resources/ifdef.input
@@ -0,0 +1,29 @@
+@ifdef FOO
+@if FOO == "foo"
+true
+@endif
+@endif
+@ifndef FOO
+false
+@else
+@if FOO == "foo"
+true
+@endif
+@endif
+@ifndef FOO
+false
+@elif FOO == "foo"
+true
+@endif
+@if (defined(FOO) && FOO == "foo")
+true
+@endif
+@if FOO == "foo"
+true
+@endif
+@if FOO == "foo" && BAR == "bar"
+true
+@endif
+@if !(FOO == "bar" || BAR != "bar")
+true
+@endif
diff --git a/Ghidra/Framework/SoftwareModeling/src/test/resources/ifdef.output b/Ghidra/Framework/SoftwareModeling/src/test/resources/ifdef.output
new file mode 100644
index 0000000000..d78c712cfd
--- /dev/null
+++ b/Ghidra/Framework/SoftwareModeling/src/test/resources/ifdef.output
@@ -0,0 +1,29 @@
+ifdef.input###1#@ifdef FOO
+#@if FOO == "foo"
+#true
+#@endif
+#@endif
+#@ifndef FOO
+false
+#@else
+#@if FOO == "foo"
+#true
+#@endif
+#@endif
+#@ifndef FOO
+false
+#@elif FOO == "foo"
+#true
+#@endif
+#@if (defined(FOO) && FOO == "foo")
+#true
+#@endif
+#@if FOO == "foo"
+#true
+#@endif
+#@if FOO == "foo" && BAR == "bar"
+#true
+#@endif
+#@if !(FOO == "bar" || BAR != "bar")
+#true
+#@endif
-- 
2.45.1

