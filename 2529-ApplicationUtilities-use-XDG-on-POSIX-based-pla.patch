From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Gauvain 'GovanifY' Roussel-Tarbouriech <gauvain@govanify.com>
Date: Fri, 27 Nov 2020 18:16:36 +0100
Subject: [PATCH] 2529: ApplicationUtilities: use XDG on POSIX based platforms

---
 .../application/ApplicationUtilities.java     | 42 ++++++++++++++++++-
 1 file changed, 40 insertions(+), 2 deletions(-)

diff --git a/Ghidra/Framework/Utility/src/main/java/utility/application/ApplicationUtilities.java b/Ghidra/Framework/Utility/src/main/java/utility/application/ApplicationUtilities.java
index ea12a661f..47a50b13d 100644
--- a/Ghidra/Framework/Utility/src/main/java/utility/application/ApplicationUtilities.java
+++ b/Ghidra/Framework/Utility/src/main/java/utility/application/ApplicationUtilities.java
@@ -16,6 +16,7 @@
 package utility.application;
 
 import java.io.*;
+import java.nio.file.FileSystems;
 import java.util.ArrayList;
 import java.util.Collection;
 
@@ -191,6 +192,25 @@ public class ApplicationUtilities {
 			}
 		}
 
+        // We will use the XDG base specification on POSIX based platforms
+        boolean isPosix =
+                FileSystems.getDefault().supportedFileAttributeViews().contains("posix");
+
+        if (isPosix) {
+            String xdgCache = System.getenv("XDG_CACHE_HOME");
+            if (xdgCache == null) {
+                // $HOME/.cache by default
+                String homedir = System.getProperty("user.home");
+                if (homedir == null || homedir.isEmpty()) {
+                    throw new FileNotFoundException("System property \"user.home\" is not set!");
+                }
+                return new File(homedir, "/.cache/" + applicationProperties.getApplicationName());
+            }
+            else {
+                return new File(xdgCache, applicationProperties.getApplicationName());
+            }
+        }
+
 		// Use user temp directory if platform specific scheme does not exist above or it failed
 		return getDefaultUserTempDir(applicationProperties);
 	}
@@ -214,10 +234,28 @@ public class ApplicationUtilities {
 		ApplicationIdentifier applicationIdentifier =
 			new ApplicationIdentifier(applicationProperties);
 
+		// We will use the XDG base specification on POSIX based platforms
+		boolean isPosix =
+		        FileSystems.getDefault().supportedFileAttributeViews().contains("posix");
+
+		// When we default to XDG we don't need to use a home dotfile anymore
+		String dot = ".";
+
+		if (isPosix) {
+		    dot = "";
+		    String xdgConfig = System.getenv("XDG_CONFIG_HOME");
+		    if (xdgConfig == null) {
+		        homedir += "/.config/";
+		    }
+		    else {
+		        homedir = xdgConfig;
+		    }
+		}
+
 		File userSettingsParentDir =
-			new File(homedir, "." + applicationIdentifier.getApplicationName());
+			new File(homedir, dot + applicationIdentifier.getApplicationName());
 
-		String userSettingsDirName = "." + applicationIdentifier;
+		String userSettingsDirName = dot + applicationIdentifier;
 
 		if (SystemUtilities.isInDevelopmentMode()) {
 			// Add the application's installation directory name to this variable, so that each 
-- 
2.43.0

