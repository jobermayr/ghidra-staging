From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: RootCubed <liam@rootcubed.dev>
Date: Sun, 12 Jun 2022 20:53:51 +0200
Subject: [PATCH] 4339: Reorder comparision with constant

---
 .../Features/Decompiler/src/decompile/cpp/printc.cc   |  6 ++++++
 .../Decompiler/src/decompile/cpp/printlanguage.cc     | 11 +++++++++--
 .../Decompiler/src/decompile/cpp/printlanguage.hh     |  1 +
 3 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/printc.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/printc.cc
index a85a79d15e..50fff099f7 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/printc.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/printc.cc
@@ -137,6 +137,12 @@ PrintC::PrintC(Architecture *g,const string &nm) : PrintLanguage(g,nm)
   equal.negate = &not_equal;
   not_equal.negate = &equal;
 
+  // Set the swap tokens
+  less_than.lrswap = &greater_than;
+  less_equal.lrswap = &greater_equal;
+  greater_than.lrswap = &less_than;
+  greater_equal.lrswap = &less_equal;
+
   castStrategy = new CastStrategyC();
   resetDefaultsPrintC();
 }
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.cc
index 53f35c6c19..f0aff52945 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.cc
@@ -569,11 +569,18 @@ void PrintLanguage::opBinary(const OpToken *tok,const PcodeOp *op)
     if (tok == (const OpToken *)0)
       throw LowlevelError("Could not find fliptoken");
   }
+  const Varnode *lhs = op->getIn(0);
+  const Varnode *rhs = op->getIn(1);
+  if (op->getIn(0)->isConstant() && tok->lrswap != (const OpToken *)0) {
+    tok = tok->lrswap;
+    lhs = op->getIn(1);
+    rhs = op->getIn(0);
+  }
   pushOp(tok,op);		// Push on reverse polish notation
   // implied vn's pushed on in reverse order for efficiency
   // see PrintLanguage::pushVnImplied
-  pushVn(op->getIn(1),op,mods);
-  pushVn(op->getIn(0),op,mods);
+  pushVn(rhs,op,mods);
+  pushVn(lhs,op,mods);
 }
 
 /// Push an operator onto the stack that has a normal unary format.
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.hh
index 580e3632f0..04e835f957 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/printlanguage.hh
@@ -102,6 +102,7 @@ public:
   int4 spacing;			///< Spaces to print around operator
   int4 bump;			///< Spaces to indent if we break here
   OpToken *negate;		///< The token representing the negation of this token
+  OpToken *lrswap;		///< The token representing the token used if the left-hand and right-hand sides are swapped
 };
 
 /// \brief The base class API for emitting a high-level language
-- 
2.43.0

