From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Sleigh-InSPECtor <sleighinspector@outlook.com>
Date: Thu, 23 May 2024 11:17:08 +0930
Subject: [PATCH] 6566: x86: Add missing reg_opcode constraint to lockable INC

---
 Ghidra/Processors/x86/data/languages/lockable.sinc | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/Ghidra/Processors/x86/data/languages/lockable.sinc b/Ghidra/Processors/x86/data/languages/lockable.sinc
index 6e1843fa62..87a1e54262 100644
--- a/Ghidra/Processors/x86/data/languages/lockable.sinc
+++ b/Ghidra/Processors/x86/data/languages/lockable.sinc
@@ -688,7 +688,7 @@ define pcodeop InterlockedDecrement64;
 
 define pcodeop InterlockedIncrement;
 define pcodeop InterlockedIncrement16;
-:INC^lockx_ Mem	is vexMode=0 & lockx_ & lockprefx & byte=0xfe; Mem ...
+:INC^lockx_ Mem	is vexMode=0 & lockx_ & lockprefx & byte=0xfe; Mem & reg_opcode=0 ...
 {
     tmp:1 = lockprefx;
     if (tmp == 1) goto <interlocked>;
@@ -699,7 +699,7 @@ define pcodeop InterlockedIncrement16;
 <end>
 }
 
-:INC^lockx_ Mem	is vexMode=0 & lockx_ & lockprefx & opsize=0 & byte=0xff; Mem ...
+:INC^lockx_ Mem	is vexMode=0 & lockx_ & lockprefx & opsize=0 & byte=0xff; Mem & reg_opcode=0 ...
 {
     tmp:1 = lockprefx;
     if (tmp == 1) goto <interlocked>;
@@ -710,7 +710,7 @@ define pcodeop InterlockedIncrement16;
 <end>
 }
 
-:INC^lockx_ Mem	is vexMode=0 & lockx_ & lockprefx & opsize=1 & byte=0xff; Mem ...
+:INC^lockx_ Mem	is vexMode=0 & lockx_ & lockprefx & opsize=1 & byte=0xff; Mem & reg_opcode=0 ...
 {
     tmp:1 = lockprefx;
     if (tmp == 1) goto <interlocked>;
@@ -723,7 +723,7 @@ define pcodeop InterlockedIncrement16;
 
 @ifdef IA64
 define pcodeop InterlockedIncrement64;
-:INC^lockx_ Mem	is $(LONGMODE_ON) & vexMode=0 & lockx_ & lockprefx & opsize=2 & byte=0xff; Mem ...
+:INC^lockx_ Mem	is $(LONGMODE_ON) & vexMode=0 & lockx_ & lockprefx & opsize=2 & byte=0xff; Mem & reg_opcode=0 ...
 {
     tmp:1 = lockprefx;
     if (tmp == 1) goto <interlocked>;
-- 
2.45.1

