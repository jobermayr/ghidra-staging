From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: nicolodev <seekbytes@protonmail.com>
Date: Thu, 25 Jan 2024 16:14:50 +0100
Subject: [PATCH] 6157: Add golang register info for arm64 and apple silicon

added golang ABI for aarch64

Added second part

Update noReturnFunctionConstraints.xml

fixed naming convention of registers
---
 .../Base/data/noReturnFunctionConstraints.xml |   3 +
 .../Processors/AARCH64/certification.manifest |   2 +
 .../data/languages/AARCH64-golang.cspec       | 202 ++++++++++++++++++
 .../AARCH64/data/languages/AARCH64.ldefs      |   8 +
 .../languages/AARCH64_golang.register.info    |  10 +
 .../AARCH64/data/languages/AppleSilicon.ldefs |   2 +
 6 files changed, 227 insertions(+)
 create mode 100644 Ghidra/Processors/AARCH64/data/languages/AARCH64-golang.cspec
 create mode 100644 Ghidra/Processors/AARCH64/data/languages/AARCH64_golang.register.info

diff --git a/Ghidra/Features/Base/data/noReturnFunctionConstraints.xml b/Ghidra/Features/Base/data/noReturnFunctionConstraints.xml
index c4e7bfc079..db72bb26cc 100644
--- a/Ghidra/Features/Base/data/noReturnFunctionConstraints.xml
+++ b/Ghidra/Features/Base/data/noReturnFunctionConstraints.xml
@@ -9,6 +9,9 @@
     <functionNamesFile>ElfFunctionsThatDoNotReturn</functionNamesFile>
   </executable_format>
   <executable_format name="Mac OS X Mach-O">
+    <compiler id="golang">
+      <functionNamesFile>GolangFunctionsThatDoNotReturn</functionNamesFile>
+	</compiler>
     <functionNamesFile>MachOFunctionsThatDoNotReturn</functionNamesFile>
   </executable_format>
   <executable_format name="DYLD Cache">
diff --git a/Ghidra/Processors/AARCH64/certification.manifest b/Ghidra/Processors/AARCH64/certification.manifest
index 864d98b74b..63cf8c8f66 100644
--- a/Ghidra/Processors/AARCH64/certification.manifest
+++ b/Ghidra/Processors/AARCH64/certification.manifest
@@ -11,9 +11,11 @@ data/languages/AARCH64BE.slaspec||GHIDRA||||END|
 data/languages/AARCH64_AMXext.sinc||GHIDRA||||END|
 data/languages/AARCH64_AppleSilicon.slaspec||GHIDRA||||END|
 data/languages/AARCH64_base_PACoptions.sinc||GHIDRA||||END|
+data/languages/AARCH64_golang.register.info||GHIDRA||||END|
 data/languages/AARCH64_ilp32.cspec||GHIDRA||||END|
 data/languages/AARCH64_swift.cspec||GHIDRA||||END|
 data/languages/AARCH64_win.cspec||GHIDRA||||END|
+data/languages/AARCH64-golang.cspec||GHIDRA||||END|
 data/languages/AARCH64base.sinc||GHIDRA||||END|
 data/languages/AARCH64instructions.sinc||GHIDRA||||END|
 data/languages/AARCH64ldst.sinc||GHIDRA||||END|
diff --git a/Ghidra/Processors/AARCH64/data/languages/AARCH64-golang.cspec b/Ghidra/Processors/AARCH64/data/languages/AARCH64-golang.cspec
new file mode 100644
index 0000000000..2870819591
--- /dev/null
+++ b/Ghidra/Processors/AARCH64/data/languages/AARCH64-golang.cspec
@@ -0,0 +1,202 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<compiler_spec>
+	<data_organization>
+		<absolute_max_alignment value="0" />
+		<machine_alignment value="2" />
+		<default_alignment value="1" />
+		<default_pointer_alignment value="8" />
+		<pointer_size value="8" />
+		<wchar_size value="4" /> <!-- matches go's 'rune' -->
+		<short_size value="2" />
+		<integer_size value="8" />
+		<long_size value="8" />
+		<long_long_size value="8" />
+		<float_size value="4" />
+		<double_size value="8" />
+		<long_double_size value="16" />
+		<size_alignment_map>
+				<entry size="1" alignment="1" />
+				<entry size="2" alignment="2" />
+				<entry size="4" alignment="4" />
+				<entry size="8" alignment="8" />
+		</size_alignment_map>
+	</data_organization>
+
+	<global>
+		<range space="ram"/>
+	</global>
+
+	<context_data>
+	</context_data>
+
+    <stackpointer register="RSP" space="ram"/>
+
+	<returnaddress>
+		<varnode space="stack" offset="0" size="8"/>
+	</returnaddress>
+
+    <default_proto>
+		<prototype name="abi-internal" extrapop="8" stackshift="8">
+			<input>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F0"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F1"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F2"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F3"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F4"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F5"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F6"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F7"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F8"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F9"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F10"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F11"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F12"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F13"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F14"/>
+				</pentry>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F15"/>
+				</pentry>
+
+				<pentry minsize="1" maxsize="8">
+					<register name="x0"/>
+				</pentry>
+				<pentry minsize="1" maxsize="8">
+					<register name="x1"/>
+				</pentry>
+				<pentry minsize="1" maxsize="8">
+					<register name="x2"/>
+				</pentry>
+				<pentry minsize="1" maxsize="8">
+					<register name="x3"/>
+				</pentry>
+				<pentry minsize="1" maxsize="8">
+					<register name="x4"/>
+				</pentry>
+				<pentry minsize="1" maxsize="8">
+					<register name="x5"/>
+				</pentry>
+				<pentry minsize="1" maxsize="8">
+					<register name="x6"/>
+				</pentry>
+				<pentry minsize="1" maxsize="8">
+					<register name="x7"/>
+				</pentry>
+				<pentry minsize="1" maxsize="8">
+					<register name="x8"/>
+				</pentry>
+                <pentry minsize="1" maxsize="8">
+					<register name="x9"/>
+				</pentry>
+                <pentry minsize="1" maxsize="8">
+					<register name="x10"/>
+				</pentry>
+                <pentry minsize="1" maxsize="8">
+					<register name="x11"/>
+				</pentry>
+                <pentry minsize="1" maxsize="8">
+					<register name="x12"/>
+				</pentry>
+                <pentry minsize="1" maxsize="8">
+					<register name="x13"/>
+				</pentry>
+                <pentry minsize="1" maxsize="8">
+					<register name="x14"/>
+				</pentry>
+                <pentry minsize="1" maxsize="8">
+					<register name="x15"/>
+				</pentry>
+
+				<pentry minsize="1" maxsize="500" align="16">
+					<addr offset="8" space="stack"/>
+				</pentry>
+			</input>
+
+			<output>
+				<pentry minsize="4" maxsize="8" metatype="float">
+					<register name="F0"/>
+				</pentry>
+
+				<pentry minsize="1" maxsize="8">
+					<register name="x0"/>
+				</pentry>
+				<pentry minsize="9" maxsize="16">
+					<addr space="join" piece2="x0" piece1="x1"/>
+				</pentry>
+				<pentry minsize="17" maxsize="24">
+					<addr space="join" piece3="x0" piece2="x1" piece1="x2"/>
+				</pentry>
+				<pentry minsize="25" maxsize="32">
+					<addr space="join" piece4="x0" piece3="x1" piece2="x2" piece1="x3"/>
+				</pentry>
+				<pentry minsize="33" maxsize="40">
+					<addr space="join" piece5="x0" piece4="x1" piece3="x2" piece2="x3" piece1="x4"/>
+				</pentry>
+				<pentry minsize="41" maxsize="48">
+					<addr space="join" piece6="x0" piece5="x1" piece4="x2" piece3="x3" piece2="x4" piece1="x5"/>
+				</pentry>
+				<pentry minsize="49" maxsize="56">
+					<addr space="join" piece7="x0" piece6="x1" piece5="x2" piece4="x3" piece3="x4" piece2="x5" piece1="x6"/>
+				</pentry>
+				<pentry minsize="57" maxsize="64">
+					<addr space="join" piece8="x0" piece7="x1" piece6="x2" piece5="x3" piece4="x4" piece3="x5" piece2="x6" piece1="x7"/>
+				</pentry>
+				<pentry minsize="65" maxsize="72">
+					<addr space="join" piece9="x0" piece8="x1" piece7="x2" piece6="x3" piece5="x4" piece4="x5" piece3="x6" piece2="x7" piece1="x8"/>
+				</pentry>
+			</output>
+
+			<killedbycall>
+				<register name="x0"/>
+				<register name="x1"/>
+				<register name="x2"/>
+				<register name="x3"/>
+				<register name="x4"/>
+				<register name="x5"/>
+				<register name="x6"/>
+                <register name="x7"/>
+				<register name="x8"/>
+				<register name="x9"/>
+				<register name="x10"/>
+				<register name="x11"/>
+				<register name="x12"/>
+				<register name="x13"/>
+				<register name="x14"/>
+                <register name="x15"/>
+			</killedbycall>
+			<unaffected>
+				<register name="x16"/>
+				<register name="x17"/>
+			</unaffected>
+		</prototype>
+	</default_proto>
\ No newline at end of file
diff --git a/Ghidra/Processors/AARCH64/data/languages/AARCH64.ldefs b/Ghidra/Processors/AARCH64/data/languages/AARCH64.ldefs
index b0919cedec..9fa5c269f0 100644
--- a/Ghidra/Processors/AARCH64/data/languages/AARCH64.ldefs
+++ b/Ghidra/Processors/AARCH64/data/languages/AARCH64.ldefs
@@ -12,10 +12,12 @@
     <description>Generic ARM64 v8.5-A LE instructions, LE data, missing some 8.5 vector</description>
     <compiler name="default" spec="AARCH64.cspec" id="default"/>
     <compiler name="Visual Studio" spec="AARCH64_win.cspec" id="windows"/>
+    <compiler name="golang" spec="AARCH64-golang.cspec" id="golang"/>
     <external_name tool="IDA-PRO" name="arm"/>
     <external_name tool="gnu" name="aarch64"/>
     <external_name tool="DWARF.register.mapping.file" name="AARCH64.dwarf"/>
     <external_name tool="qemu" name="qemu-aarch64"/>
+    <external_name tool="Golang.register.info.file" name="AARCH64_golang.register.info"/>
   </language>
   <language processor="AARCH64"
             endian="big"
@@ -29,10 +31,12 @@
             id="AARCH64:BE:64:v8A">
     <description>Generic ARM64 v8.5-A LE instructions, BE data, missing some 8.5 vector</description>
     <compiler name="default" spec="AARCH64.cspec" id="default"/>
+    <compiler name="golang" spec="AARCH64-golang.cspec" id="golang"/>
     <external_name tool="IDA-PRO" name="armb"/>
     <external_name tool="gnu" name="aarch64"/>
     <external_name tool="DWARF.register.mapping.file" name="AARCH64.dwarf"/>
     <external_name tool="qemu" name="qemu-aarch64_be"/>
+    <external_name tool="Golang.register.info.file" name="AARCH64_golang.register.info"/>
   </language>
   <language processor="AARCH64"
             endian="little"
@@ -46,9 +50,11 @@
     <description>Generic ARM64 v8.5-A LE instructions, LE data, ilp32</description>
     <truncate_space space="ram" size="4"/>
     <compiler name="default" spec="AARCH64_ilp32.cspec" id="default"/>
+    <compiler name="golang" spec="AARCH64-golang.cspec" id="golang"/>
     <external_name tool="gnu" name="aarch64:ilp32"/>
     <external_name tool="DWARF.register.mapping.file" name="AARCH64.dwarf"/>
     <external_name tool="qemu" name="qemu-aarch64"/>
+    <external_name tool="Golang.register.info.file" name="AARCH64_golang.register.info"/>
   </language>
   <language processor="AARCH64"
             endian="big"
@@ -63,8 +69,10 @@
     <description>Generic ARM64 v8.5-A LE instructions, BE data, ilp32</description>
     <truncate_space space="ram" size="4"/>
     <compiler name="default" spec="AARCH64_ilp32.cspec" id="default"/>
+    <compiler name="golang" spec="AARCH64-golang.cspec" id="golang"/>
     <external_name tool="gnu" name="aarch64:ilp32"/>
     <external_name tool="DWARF.register.mapping.file" name="AARCH64.dwarf"/>
     <external_name tool="qemu" name="qemu-aarch64_be"/>
+    <external_name tool="Golang.register.info.file" name="AARCH64_golang.register.info"/>
   </language>
 </language_definitions>
diff --git a/Ghidra/Processors/AARCH64/data/languages/AARCH64_golang.register.info b/Ghidra/Processors/AARCH64/data/languages/AARCH64_golang.register.info
new file mode 100644
index 0000000000..1e1aeaedbc
--- /dev/null
+++ b/Ghidra/Processors/AARCH64/data/languages/AARCH64_golang.register.info
@@ -0,0 +1,10 @@
+<golang>
+	<!-- see https://github.com/golang/go/blob/master/src/internal/abi/abi_arm64.go -->
+	<register_info versions="V1_17,V1_18,V1_19,V1_20,V1_21"> <!-- "all", or comma list of: V1_2,V1_16,etc -->
+		<int_registers list="x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15"/>
+		<float_registers list="F0,F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11,F12,F13,F14,F15"/>
+		<stack initialoffset="8" maxalign="16"/>
+		<current_goroutine register="x28"/>
+		<zero_register register="ZR"/>
+	</register_info>
+</golang>
\ No newline at end of file
diff --git a/Ghidra/Processors/AARCH64/data/languages/AppleSilicon.ldefs b/Ghidra/Processors/AARCH64/data/languages/AppleSilicon.ldefs
index 8164e24320..3f09b06aea 100644
--- a/Ghidra/Processors/AARCH64/data/languages/AppleSilicon.ldefs
+++ b/Ghidra/Processors/AARCH64/data/languages/AppleSilicon.ldefs
@@ -12,8 +12,10 @@
     <description>AppleSilicon ARM v8.5-A LE instructions, LE data, AMX extensions</description>
     <compiler name="default" spec="AARCH64.cspec" id="default"/>
     <compiler name="Swift" spec="AARCH64_swift.cspec" id="swift"/>
+    <compiler name="golang" spec="AARCH64-golang.cspec" id="golang"/>
     <external_name tool="gnu" name="aarch64"/>
     <external_name tool="gnu" name="aarch64:ilp32"/>
     <external_name tool="DWARF.register.mapping.file" name="AARCH64.dwarf"/>
+    <external_name tool="Golang.register.info.file" name="AARCH64_golang.register.info"/>
   </language>
 </language_definitions>
-- 
2.44.0

