From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Anciety <anciety@starcross.tech>
Date: Thu, 22 Apr 2021 17:44:53 +0800
Subject: [PATCH] 2969: fix a data race in xml implementation

---
 Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc | 7 ++++++-
 Ghidra/Features/Decompiler/src/decompile/cpp/xml.y  | 7 ++++++-
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc
index 1ec60f8d3e..c7245b8f3b 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/xml.cc
@@ -95,6 +95,8 @@
 
 #include <iostream>
 #include <string>
+#include <mutex>
+#include <thread>
 
 namespace ghidra {
 
@@ -185,8 +187,9 @@ extern void print_content(const string &str);	///< Send character data to the Co
 extern int4 convertEntityRef(const string &ref);	///< Convert an XML entity to its equivalent character
 extern int4 convertCharRef(const string &ref);	///< Convert an XML character reference to its equivalent character
 static XmlScan *global_scan;					///< Global reference to the scanner
+static std::mutex global_scan_mutex;
 static ContentHandler *handler;					///< Global reference to the content handler
-
+static std::mutex handler_mutex;
 
 
 # ifndef YY_CAST
@@ -2185,6 +2188,8 @@ int4 xml_parse(istream &i,ContentHandler *hand,int4 dbg)
 #if YYDEBUG
   yydebug = dbg;
 #endif
+  std::lock_guard<std::mutex> global_scan_lock(global_scan_mutex);
+  std::lock_guard<std::mutex> handler_lock(handler_mutex);
   global_scan = new XmlScan(i);
   handler = hand;
   handler->startDocument();
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/xml.y b/Ghidra/Features/Decompiler/src/decompile/cpp/xml.y
index a91ad2d42c..73d6082ff4 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/xml.y
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/xml.y
@@ -34,6 +34,8 @@
 
 #include <iostream>
 #include <string>
+#include <mutex>
+#include <thread>
 
 namespace ghidra {
 
@@ -124,8 +126,9 @@ extern void print_content(const string &str);	///< Send character data to the Co
 extern int4 convertEntityRef(const string &ref);	///< Convert an XML entity to its equivalent character
 extern int4 convertCharRef(const string &ref);	///< Convert an XML character reference to its equivalent character
 static XmlScan *global_scan;					///< Global reference to the scanner
+static std::mutex global_scan_mutex;
 static ContentHandler *handler;					///< Global reference to the content handler
-
+static std::mutex handler_mutex;
 %}
 
 %union {
@@ -532,6 +535,8 @@ int4 xml_parse(istream &i,ContentHandler *hand,int4 dbg)
 #if YYDEBUG
   yydebug = dbg;
 #endif
+  std::lock_guard<std::mutex> global_scan_lock(global_scan_mutex);
+  std::lock_guard<std::mutex> handler_lock(handler_mutex);
   global_scan = new XmlScan(i);
   handler = hand;
   handler->startDocument();
-- 
2.43.0

