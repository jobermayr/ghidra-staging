From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Grouzy <riegls.123@gmail.com>
Date: Thu, 25 Jan 2024 19:01:16 +0200
Subject: [PATCH] 6156: x86 fix STR disassembly

fix STR

wrap required STR in ifdef
---
 Ghidra/Processors/x86/data/languages/ia.sinc | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/Ghidra/Processors/x86/data/languages/ia.sinc b/Ghidra/Processors/x86/data/languages/ia.sinc
index d79deed16..ed920853c 100644
--- a/Ghidra/Processors/x86/data/languages/ia.sinc
+++ b/Ghidra/Processors/x86/data/languages/ia.sinc
@@ -3856,7 +3856,11 @@ define pcodeop stac;
 :STOSQ^rep^reptail eseDI8   is $(LONGMODE_ON) & vexMode=0 & rep & reptail & opsize=2 & byte=0xab & eseDI8    { build rep; build eseDI8; eseDI8=RAX; build reptail; }
 @endif
 
-:STR rm16       is vexMode=0 & byte=0xf; byte=0x0; rm16 & reg_opcode=1 ... { rm16 = TaskRegister(); }
+:STR rm16       is vexMode=0 & opsize=0 & byte=0xf; byte=0x0; rm16 & reg_opcode=1 ... { rm16 = TaskRegister(); }
+:STR rm32       is vexMode=0 & opsize=1 & byte=0xf; byte=0x0; rm32 & reg_opcode=1 ... { rm32 = TaskRegister(); }
+@ifdef IA64
+:STR rm64       is $(LONGMODE_ON) & vexMode=0 & opsize=2 & byte=0xf; byte=0x0; rm64 & reg_opcode=1 ... { rm64 = TaskRegister(); }
+@endif
 
 # See 'lockable.sinc' for memory destination, lockable variants
 :SUB  AL,imm8      is vexMode=0 & byte=0x2c; AL & imm8                          { subflags(   AL,imm8 );    AL =    AL -  imm8; resultflags(   AL); }
-- 
2.43.0

