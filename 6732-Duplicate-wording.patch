From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: just-an-engineer <Julian.Beltz@zetier.com>
Date: Wed, 17 Jul 2024 10:53:51 -0400
Subject: [PATCH] 6732: Duplicate wording

Removed duplicate wordings from multiple (many) files, and
 made simple fixes where possible
---
 .../src/global/docs/ChangeHistory.html             |  2 +-
 .../ghidra_scripts/PopulateTraceLocal.java         |  2 +-
 .../ghidra_scripts/PopulateTraceRemote.java        |  2 +-
 .../manager/evt/GdbThreadGroupStartedEvent.java    |  2 +-
 .../agent/gdb/manager/impl/GdbManagerImpl.java     |  2 +-
 .../api/action/LocationTrackingSpecFactory.java    |  2 +-
 .../debug/api/breakpoint/LogicalBreakpoint.java    |  2 +-
 Ghidra/Debug/Debugger-rmi-trace/DEVNOTES.txt       |  2 +-
 .../src/main/py/src/ghidratrace/client.py          |  2 +-
 .../ghidra_scripts/ComputeUnwindInfoScript.java    |  2 +-
 .../Debugger/ghidra_scripts/PopulateDemoTrace.java |  2 +-
 .../debug/gui/console/DebuggerConsolePlugin.java   |  2 +-
 .../debug/gui/stack/vars/VariableValueRow.java     |  2 +-
 .../debug/disassemble/DebuggerDisassemblyTest.java |  6 +++---
 .../src/main/java/ghidra/async/AsyncLazyValue.java |  2 +-
 .../main/java/ghidra/async/AsyncPairingCache.java  |  4 ++--
 .../src/main/java/ghidra/async/AsyncUtils.java     |  2 +-
 .../target/schema/XmlTargetObjectSchemaTest.java   |  2 +-
 .../trace/database/program/DBTraceProgramView.java |  4 ++--
 .../trace/model/target/TraceObjectKeyPath.java     |  2 +-
 .../ghidra/trace/database/ToyDBTraceBuilder.java   |  2 +-
 .../ghidra/util/database/DBCachedObjectIndex.java  |  4 ++--
 .../SleighDevTools/pcodetest/c_src/builtin.c       |  2 +-
 .../main/help/help/topics/BSim/IngestProcess.html  |  2 +-
 .../bsim/query/client/ExecutableScorer.java        |  2 +-
 .../bsim/query/description/CategoryRecord.java     |  2 +-
 .../ghidra_scripts/ReportDisassemblyErrors.java    |  2 +-
 .../help/topics/CodeBrowserPlugin/CodeBrowser.htm  |  2 +-
 .../CodeBrowserPlugin/CodeBrowserOptions.htm       |  2 +-
 .../topics/DataTypeEditors/StructureEditor.htm     |  2 +-
 .../data_type_manager_description.htm              |  2 +-
 .../data_type_manager_window.html                  |  6 +++---
 .../help/help/topics/ExporterPlugin/exporter.htm   |  4 ++--
 .../FallThroughPlugin/Override_Fallthrough.htm     |  2 +-
 .../topics/FrontEndPlugin/Connecting_Tools.htm     |  4 ++--
 .../topics/FrontEndPlugin/Ghidra_Front_end.htm     |  2 +-
 .../help/help/topics/ImporterPlugin/importer.htm   |  4 ++--
 .../topics/LanguageProviderPlugin/Languages.htm    |  2 +-
 .../help/help/topics/Navigation/Navigation.htm     |  2 +-
 .../topics/ReferencesPlugin/References_from.htm    |  4 ++--
 .../topics/Search/Search_for_AddressTables.htm     |  2 +-
 .../help/topics/SymbolTreePlugin/SymbolTree.htm    |  2 +-
 .../main/help/help/topics/Tool/Configure_Tool.htm  |  2 +-
 .../help/help/topics/Trees/GhidraTreeFilter.html   |  2 +-
 .../topics/VersionControl/project_repository.htm   |  4 ++--
 .../topics/ViewStringsPlugin/ViewStringsPlugin.htm |  2 +-
 .../app/cmd/memory/AddBitMappedMemoryBlockCmd.java |  2 +-
 .../cmd/memory/AddByteMappedMemoryBlockCmd.java    |  4 ++--
 .../app/cmd/memory/AddFileBytesMemoryBlockCmd.java |  2 +-
 .../cmd/memory/AddInitializedMemoryBlockCmd.java   |  2 +-
 .../cmd/memory/AddUninitializedMemoryBlockCmd.java |  2 +-
 .../app/merge/listing/AbstractFunctionMerger.java  |  2 +-
 .../propertylist/PropertyListMergeManager.java     |  2 +-
 .../app/merge/tree/ProgramTreeMergeManager.java    |  2 +-
 .../app/plugin/core/analysis/AnalysisPanel.java    |  4 ++--
 .../core/analysis/ConstantPropagationAnalyzer.java |  2 +-
 .../core/analysis/OperandReferenceAnalyzer.java    |  2 +-
 .../core/analysis/RegisterContextBuilder.java      |  2 +-
 .../analysis/rust/demangler/RustDemanglerV0.java   |  2 +-
 .../plugin/core/codebrowser/LayeredColorModel.java |  2 +-
 .../core/compositeeditor/CompEditorModel.java      |  2 +-
 .../actions/CreateEnumFromSelectionAction.java     |  2 +-
 .../core/datamgr/actions/associate/SyncAction.java |  2 +-
 .../core/datamgr/editor/DataTypeEditorManager.java |  2 +-
 .../AbstractProgramNameSwitchingAction.java        |  2 +-
 .../app/plugin/core/progmgr/ProgramLocator.java    |  4 ++--
 .../core/programtree/ProgramTreeActionManager.java |  2 +-
 .../plugin/core/searchmem/DecimalSearchFormat.java |  2 +-
 .../app/plugin/core/searchmem/MemSearchDialog.java |  2 +-
 .../core/searchtext/ListingDisplaySearcher.java    |  4 ++--
 .../plugin/core/table/TableComponentProvider.java  |  2 +-
 .../plugin/runtimeinfo/RuntimeInfoProvider.java    |  2 +-
 .../main/java/ghidra/app/script/GhidraScript.java  |  2 +-
 .../main/java/ghidra/app/script/ScriptMessage.java |  2 +-
 .../java/ghidra/app/services/MarkerDescriptor.java |  2 +-
 .../main/java/ghidra/app/services/MarkerSet.java   |  2 +-
 .../bin/format/dwarf/DWARFLocationListHeader.java  |  2 +-
 .../bin/format/dwarf/DWARFRangeListHeader.java     |  2 +-
 .../format/dwarf/DWARFStringOffsetTableHeader.java |  2 +-
 .../app/util/bin/format/dwarf/DWARFUtil.java       |  2 +-
 .../app/util/bin/format/dwarf/NameDeduper.java     |  2 +-
 .../dwarf/expression/DWARFExpressionEvaluator.java |  2 +-
 .../app/util/bin/format/elf/ElfLoadHelper.java     |  2 +-
 .../app/util/bin/format/elf/ElfRelocation.java     |  8 ++++----
 .../util/bin/format/golang/rtti/types/GoType.java  |  2 +-
 .../format/golang/structmapping/FieldMapping.java  |  2 +-
 .../format/macho/commands/LoadCommandTypes.java    |  2 +-
 .../format/macho/dyld/DyldCacheAccelerateInfo.java |  2 +-
 .../bin/format/macho/dyld/DyldCacheHeader.java     |  2 +-
 .../macho/dyld/DyldCacheSlideInfoCommon.java       |  2 +-
 .../bin/format/macho/dyld/LibObjcOptimization.java |  2 +-
 .../app/util/exporter/ReferenceLineDispenser.java  |  2 +-
 .../util/importer/LibrarySearchPathManager.java    |  2 +-
 .../app/util/opinion/AbstractProgramLoader.java    |  2 +-
 .../java/ghidra/app/util/opinion/LoadResults.java  |  2 +-
 .../java/ghidra/app/util/opinion/PeLoader.java     |  2 +-
 .../util/viewer/field/BrowserCodeUnitFormat.java   |  2 +-
 .../app/util/viewer/field/BytesFieldFactory.java   |  2 +-
 .../util/viewer/field/FunctionTagFieldFactory.java |  2 +-
 .../viewer/field/MemoryBlockStartFieldFactory.java |  2 +-
 .../listingpanel/ProgramBigListingModel.java       |  2 +-
 .../multilisting/MultiListingLayoutModel.java      |  2 +-
 .../app/util/viewer/util/AddressIndexMap.java      | 10 +++++-----
 .../java/ghidra/base/project/GhidraProject.java    |  2 +-
 .../codecompare/model/FunctionComparisonModel.java |  4 ++--
 .../ghidra/features/base/values/LanguageValue.java |  2 +-
 .../formats/gfilesystem/crypto/CryptoSession.java  |  2 +-
 .../crypto/PopupGUIPasswordProvider.java           |  2 +-
 .../main/java/ghidra/framework/main/InfoPanel.java |  2 +-
 .../ghidra/plugins/importer/batch/BatchInfo.java   |  4 ++--
 .../ghidra/program/flatapi/FlatProgramAPI.java     |  2 +-
 .../java/ghidra/program/util/ContextEvaluator.java |  2 +-
 .../program/util/GhidraProgramUtilities.java       |  2 +-
 .../ghidra/program/util/ProgramMemoryUtil.java     |  2 +-
 .../test/AbstractGhidraHeadedIntegrationTest.java  |  2 +-
 .../main/java/ghidra/util/GhidraJarBuilder.java    |  2 +-
 .../table/AbstractSelectionNavigationAction.java   |  2 +-
 .../util/table/ProgramLocationTableRowMapper.java  |  2 +-
 .../instructionsearch/InstructionSearchTest.java   |  2 +-
 .../LocationReferencesPlugin1Test.java             |  2 +-
 .../LocationReferencesPlugin3Test.java             |  4 ++--
 .../processors/ShowInstructionInfoPluginTest.java  |  2 +-
 .../core/programtree/ProgramTreePlugin2Test.java   |  2 +-
 .../core/searchtext/SearchTextPlugin1Test.java     |  2 +-
 .../core/symboltree/SymbolTreePlugin1Test.java     |  2 +-
 .../app/script/GhidraScriptAskMethodsTest.java     |  8 ++++----
 .../util/datatype/DataTypeSelectionDialogTest.java |  2 +-
 .../util/viewer/field/LabelFieldFactoryTest.java   |  2 +-
 .../ghidra/base/project/FakeSharedProject.java     |  2 +-
 .../java/ghidra/program/database/MergeProgram.java |  2 +-
 .../FunctionBitPatternsExplorerPlugin.htm          |  2 +-
 .../app/analyzers/FunctionStartFuncAnalyzer.java   |  2 +-
 .../bitpatterns/info/InstructionSequence.java      |  2 +-
 .../closedpatternmining/ProjectedSequenceInfo.java |  2 +-
 .../app/plugin/core/byteviewer/ByteField.java      |  2 +-
 .../core/byteviewer/ByteViewerComponent.java       |  4 ++--
 .../plugin/core/byteviewer/ByteViewerState.java    |  2 +-
 .../plugin/core/byteviewer/MemoryByteBlock.java    |  2 +-
 .../ghidra/app/plugin/core/format/ByteBlock.java   |  2 +-
 .../codecompare/graphanalysis/Pinning.java         |  2 +-
 .../classrecovery/RTTIGccClassRecoverer.java       |  2 +-
 .../classrecovery/RecoveredClassHelper.java        |  6 +++---
 .../Decompiler/src/decompile/cpp/architecture.cc   |  2 +-
 .../Features/Decompiler/src/decompile/cpp/block.cc |  4 ++--
 .../Decompiler/src/decompile/cpp/database.cc       |  2 +-
 .../src/decompile/cpp/funcdata_varnode.cc          |  2 +-
 .../Decompiler/src/decompile/cpp/heritage.cc       |  2 +-
 .../src/decompile/cpp/include/ghidra/action.hh     |  2 +-
 .../src/decompile/cpp/include/ghidra/address.hh    |  2 +-
 .../decompile/cpp/include/ghidra/blockaction.hh    |  2 +-
 .../src/decompile/cpp/include/ghidra/database.hh   |  2 +-
 .../decompile/cpp/include/ghidra/prettyprint.hh    |  2 +-
 .../src/decompile/cpp/include/ghidra/printc.hh     |  2 +-
 .../decompile/cpp/include/ghidra/stringmanage.hh   |  2 +-
 .../src/decompile/cpp/include/ghidra/type.hh       |  2 +-
 .../Features/Decompiler/src/decompile/cpp/merge.cc |  2 +-
 .../Decompiler/src/decompile/cpp/rangeutil.cc      |  4 ++--
 .../Decompiler/src/decompile/cpp/ruleaction.cc     |  2 +-
 .../Decompiler/src/decompile/cpp/subflow.cc        |  2 +-
 .../Decompiler/src/main/doc/decompileplugin.xml    |  4 ++--
 Ghidra/Features/Decompiler/src/main/doc/sleigh.xml |  2 +-
 .../topics/DecompilePlugin/DecompilerWindow.html   |  4 ++--
 .../ghidra/app/decompiler/DecompileOptions.java    |  2 +-
 .../app/decompiler/component/UserHighlights.java   |  2 +-
 .../formats/ios/dyldcache/DyldCacheFileSystem.java |  2 +-
 .../ios/prelink/MachoPrelinkFileSystem.java        |  2 +-
 .../sparseimage/SparseImageDecompressor.java       |  4 ++--
 .../topics/FunctionGraphPlugin/Function_Graph.html |  2 +-
 .../functiongraph/AbstractFunctionGraphTest.java   |  2 +-
 .../FunctionGraphGroupVertices1Test.java           | 10 +++++-----
 .../FunctionGraphGroupVertices2Test.java           |  6 +++---
 .../src/main/java/ghidra/feature/fid/db/FidDB.java |  2 +-
 .../feature/fid/hash/MessageDigestFidHasher.java   |  2 +-
 .../app/util/demangler/gnu/GnuDemanglerParser.java |  2 +-
 .../help/topics/GraphServices/GraphDisplay.htm     |  2 +-
 .../graph/visualization/DefaultGraphRenderer.java  |  2 +-
 .../ghidra/jython/JythonPluginInputThread.java     |  2 +-
 .../ghidra/app/cmd/data/TypeDescriptorModel.java   |  2 +-
 .../src/main/java/mdemangler/MDMang_README.txt     |  6 +++---
 .../src/main/java/mdemangler/MDParsableItem.java   |  2 +-
 .../datatype/modifier/MDArrayBasicType.java        |  2 +-
 .../datatype/modifier/MDBasedAttribute.java        |  2 +-
 .../modifier/MDDataRightReferenceType.java         |  2 +-
 .../datatype/modifier/MDModifierType.java          |  4 ++--
 .../datatype/modifier/MDPointerType.java           |  2 +-
 .../datatype/modifier/MDReferenceType.java         |  2 +-
 .../mdemangler/functiontype/MDFunctionType.java    |  2 +-
 .../main/java/mdemangler/object/MDObjectCPP.java   |  2 +-
 .../src/test/java/mdemangler/MDMangBaseTest.java   |  2 +-
 .../Features/PDB/src/global/docs/README_PDB.html   |  2 +-
 .../plugin/core/analysis/PdbUniversalAnalyzer.java |  2 +-
 .../util/bin/format/pdb/ApplyStackVariables.java   |  2 +-
 .../bin/format/pdb2/pdbreader/AbstractPdb.java     |  2 +-
 .../bin/format/pdb2/pdbreader/PdbDebugInfo.java    |  2 +-
 .../app/util/bin/format/pdb2/pdbreader/PdbLog.java |  2 +-
 .../format/pdb2/pdbreader/SymbolHashRecord.java    |  2 +-
 .../pdb2/pdbreader/TypeProgramInterfaceParser.java |  2 +-
 .../bin/format/pdb2/pdbreader/msf/AbstractMsf.java |  6 +++---
 .../util/bin/format/pdb2/pdbreader/msf/Msf.java    |  6 +++---
 .../format/pdb2/pdbreader/msf/MsfStreamTable.java  |  2 +-
 .../pdbreader/symbol/PublicSymbolInternals32.java  |  2 +-
 .../AbstractIndirectVirtualBaseClassMsType.java    |  2 +-
 .../type/AbstractVirtualBaseClassMsType.java       |  2 +-
 .../pdb2/pdbreader/type/ModifierExMsType.java      |  2 +-
 .../bin/format/pdb2/pdbreader/type/MsProperty.java |  2 +-
 .../format/pdb2/pdbreader/type/VtShapeMsType.java  |  4 ++--
 .../pdbapplicator/AbstractBlockContextApplier.java |  2 +-
 .../util/pdb/pdbapplicator/CppCompositeType.java   |  2 +-
 .../pdb/pdbapplicator/DefaultPdbApplicator.java    |  2 +-
 .../util/pdb/pdbapplicator/LabelSymbolApplier.java |  2 +-
 .../pdb/pdbapplicator/ModifierTypeApplier.java     |  2 +-
 .../pdbapplicator/MultiphaseDataTypeResolver.java  | 10 +++++-----
 .../util/pdb/pdbapplicator/PdbAddressManager.java  |  2 +-
 Ghidra/Features/PDB/src/pdb/README.txt             |  2 +-
 Ghidra/Features/PDB/src/pdb/cpp/print.cpp          |  2 +-
 .../src/main/help/help/topics/Diff/Diff.htm        |  2 +-
 .../app/plugin/core/diff/DiffController.java       |  2 +-
 .../topics/ProgramGraphPlugin/ProgramGraph.htm     |  2 +-
 .../program/BlockModelGraphDisplayListener.java    |  2 +-
 .../ghidra/graph/program/ProgramGraphPlugin.java   |  2 +-
 .../src/main/java/sarif/SarifProgramOptions.java   |  4 ++--
 .../AddVTSessionToVersionControl.java              |  2 +-
 .../CreateAppliedExactMatchingSessionScript.java   |  2 +-
 .../topics/VersionTrackingPlugin/VT_AutoVT.html    |  2 +-
 .../Version_Tracking_Intro.html                    |  2 +-
 .../providers/VT_Apply_Options.html                |  2 +-
 .../CreateVersionTrackingSessionAction.java        |  2 +-
 .../vt/gui/util/AbstractVTMatchTableModel.java     |  2 +-
 .../vt/api/markupitem/VTMarkupItemResetTest.java   |  2 +-
 Ghidra/Framework/DB/src/main/java/db/DBHandle.java |  2 +-
 Ghidra/Framework/DB/src/main/java/db/DBRecord.java |  2 +-
 Ghidra/Framework/DB/src/main/java/db/Field.java    |  2 +-
 .../Framework/DB/src/main/java/db/Transaction.java |  2 +-
 .../src/main/java/db/buffers/LocalBufferFile.java  |  2 +-
 .../help/help/topics/Theming/ThemingInternals.html |  2 +-
 .../help/help/topics/Theming/ThemingOverview.html  |  2 +-
 .../help/help/topics/Theming/ThemingUserDocs.html  |  4 ++--
 .../src/main/java/docking/ComponentNode.java       |  2 +-
 .../src/main/java/docking/ComponentProvider.java   |  2 +-
 .../main/java/docking/DockingWindowManager.java    |  2 +-
 .../src/main/java/docking/WindowActionManager.java |  2 +-
 .../main/java/docking/action/DockingAction.java    |  6 +++---
 .../docking/action/builder/MultiActionBuilder.java |  2 +-
 .../main/java/docking/dnd/GenericDataFlavor.java   |  2 +-
 .../main/java/docking/help/DockingHelpBroker.java  |  2 +-
 .../java/docking/test/AbstractDockingTest.java     |  4 ++--
 .../java/docking/test/TestKeyEventDispatcher.java  |  2 +-
 .../main/java/docking/theme/gui/ProtectedIcon.java |  2 +-
 .../java/docking/widgets/DropDownTextField.java    |  2 +-
 .../src/main/java/docking/widgets/FindDialog.java  |  2 +-
 .../docking/widgets/ListSelectionTableDialog.java  |  2 +-
 .../fieldpanel/AccessibleFieldPanelDelegate.java   |  2 +-
 .../docking/widgets/fieldpanel/FieldPanel.java     |  8 ++++----
 .../java/docking/widgets/fieldpanel/Layout.java    |  4 ++--
 .../fieldpanel/listener/FieldInputListener.java    |  2 +-
 .../fieldpanel/support/FieldHighlightFactory.java  |  2 +-
 .../widgets/fieldpanel/support/ViewerPosition.java |  2 +-
 .../docking/widgets/filter/FilterTextField.java    |  2 +-
 .../widgets/pathmanager/PathnameTablePanel.java    |  4 ++--
 .../widgets/shapes/PopupWindowPlacerBuilder.java   |  2 +-
 .../main/java/docking/widgets/tab/GTabPanel.java   |  2 +-
 .../widgets/tabbedpane/DockingTabRenderer.java     |  2 +-
 .../docking/widgets/table/FilterTypeConverter.java |  2 +-
 .../java/docking/widgets/table/TableRowMapper.java |  2 +-
 .../widgets/table/constraint/ColumnConstraint.java |  2 +-
 .../table/constraint/MappedColumnConstraint.java   |  2 +-
 .../widgets/table/threaded/TableUpdateJob.java     |  2 +-
 .../java/docking/widgets/tree/CoreGTreeNode.java   |  2 +-
 .../src/main/java/docking/widgets/tree/GTree.java  |  4 ++--
 .../java/docking/widgets/values/GValuesMap.java    |  2 +-
 .../ghidra/util/table/column/GColumnRenderer.java  |  2 +-
 .../src/main/java/ghidra/util/task/TaskRunner.java |  2 +-
 .../threaded/IncrementalThreadedTableTest.java     |  2 +-
 .../ghidra/app/emulator/state/RegisterState.java   |  2 +-
 .../generic/concurrent/ConcurrentQBuilder.java     |  2 +-
 .../java/generic/concurrent/QProgressListener.java |  2 +-
 .../src/main/java/generic/io/JarWriter.java        |  2 +-
 .../src/main/java/generic/stl/IteratorSTL.java     |  4 ++--
 .../main/java/generic/util/WindowUtilities.java    |  2 +-
 .../main/java/ghidra/framework/Application.java    |  4 ++--
 .../src/main/java/ghidra/util/DateUtils.java       |  2 +-
 .../main/java/ghidra/util/NumericUtilities.java    |  4 ++--
 .../src/main/java/ghidra/util/StringUtilities.java |  2 +-
 .../main/java/ghidra/util/datastruct/BitTree.java  |  4 ++--
 .../ghidra/util/graph/SimpleWeightedDigraph.java   |  4 ++--
 .../main/java/ghidra/util/timer/GTimerCache.java   |  2 +-
 .../TestDataStructureErrorHandlerInstaller.java    |  2 +-
 .../graph/job/AbstractGraphTransitionJob.java      |  2 +-
 .../ghidra/graph/viewer/popup/PopupRegulator.java  |  2 +-
 .../vertex/AbstractVisualVertexRenderer.java       |  2 +-
 .../main/java/generic/test/AbstractGuiTest.java    |  4 ++--
 .../java/generic/theme/AbstractThemeReader.java    |  2 +-
 .../Gui/src/main/java/generic/theme/GTheme.java    |  2 +-
 .../src/main/java/generic/theme/ThemeManager.java  |  2 +-
 .../generic/theme/ThemePropertyFileReader.java     |  2 +-
 .../Gui/src/main/java/ghidra/util/ColorUtils.java  |  2 +-
 .../java/ghidra/util/html/HtmlLineSplitter.java    |  2 +-
 .../Gui/src/main/java/resources/MultiIcon.java     |  2 +-
 .../Help/src/main/java/help/GHelpSet.java          |  2 +-
 .../Help/src/main/java/help/OverlayHelpTree.java   |  2 +-
 .../java/help/validator/JavaHelpValidator.java     |  2 +-
 .../java/ghidra/framework/main/FrontEndPlugin.java |  2 +-
 .../java/ghidra/framework/main/FrontEndTool.java   |  2 +-
 .../framework/main/ProjectActionManager.java       |  2 +-
 .../java/ghidra/framework/main/ToolButton.java     |  2 +-
 .../framework/main/logviewer/ui/FVTable.java       |  2 +-
 .../model/DomainObjectListenerBuilder.java         |  2 +-
 .../java/ghidra/framework/model/ProjectData.java   |  2 +-
 .../ghidra/framework/model/ProjectManager.java     |  2 +-
 .../ghidra/framework/plugintool/PluginManager.java |  2 +-
 .../framework/plugintool/PluginsConfiguration.java |  2 +-
 .../framework/plugintool/mgr/DialogManager.java    |  2 +-
 .../framework/plugintool/mgr/EventManager.java     |  2 +-
 .../ghidra/framework/project/ProjectJarWriter.java |  2 +-
 .../DefaultLocalGhidraProtocolConnector.java       |  4 ++--
 .../java/ghidra/framework/task/GTaskManager.java   |  2 +-
 .../ghidra/framework/task/gui/GTaskGUITest.java    |  2 +-
 .../Pty/src/main/java/ghidra/pty/PtyFactory.java   |  6 +++---
 .../app/plugin/assembler/GenericAssembler.java     |  2 +-
 .../sleigh/symbol/AssemblyNumericTerminal.java     | 10 +++++-----
 .../app/plugin/processors/generic/Operand.java     |  2 +-
 .../main/java/ghidra/app/util/pcode/Appender.java  |  2 +-
 .../java/ghidra/pcodeCPort/address/Address.java    |  2 +-
 .../java/ghidra/pcodeCPort/utils/WeakHashMap2.java |  2 +-
 .../ghidra/program/database/code/CodeManager.java  |  4 ++--
 .../program/database/code/DataDBAdapter.java       |  6 +++---
 .../program/database/data/ArrayDBAdapterV0.java    |  2 +-
 .../program/database/data/ArrayDBAdapterV1.java    |  2 +-
 .../program/database/data/BuiltinDBAdapterV0.java  |  2 +-
 .../data/CallingConventionDBAdapterV0.java         |  2 +-
 .../program/database/data/CategoryDBAdapterV0.java |  2 +-
 .../database/data/ComponentDBAdapterV0.java        |  2 +-
 .../ghidra/program/database/data/CompositeDB.java  |  2 +-
 .../program/database/data/CompositeDBAdapter.java  |  2 +-
 .../database/data/CompositeDBAdapterV0.java        |  2 +-
 .../database/data/CompositeDBAdapterV1.java        |  2 +-
 .../database/data/CompositeDBAdapterV2V4.java      |  2 +-
 .../database/data/CompositeDBAdapterV5V6.java      |  2 +-
 .../database/data/DataTypeArchiveTransformer.java  |  2 +-
 .../java/ghidra/program/database/data/EnumDB.java  |  2 +-
 .../program/database/data/EnumDBAdapter.java       |  2 +-
 .../program/database/data/EnumDBAdapterV0.java     |  2 +-
 .../program/database/data/EnumDBAdapterV1.java     |  2 +-
 .../program/database/data/EnumValueDBAdapter.java  |  2 +-
 .../database/data/EnumValueDBAdapterV0.java        |  2 +-
 .../database/data/EnumValueDBAdapterV1.java        |  2 +-
 .../database/data/FunctionDefinitionDBAdapter.java |  2 +-
 .../data/FunctionDefinitionDBAdapterV0.java        |  2 +-
 .../data/FunctionDefinitionDBAdapterV1.java        |  2 +-
 .../data/FunctionDefinitionDBAdapterV2.java        |  2 +-
 .../database/data/FunctionParameterAdapter.java    |  2 +-
 .../data/FunctionParameterAdapterNoTable.java      |  2 +-
 .../database/data/FunctionParameterAdapterV0.java  |  2 +-
 .../database/data/FunctionParameterAdapterV1.java  |  2 +-
 .../database/data/ParentChildDBAdapterNoTable.java |  2 +-
 .../database/data/ParentChildDBAdapterV0.java      |  2 +-
 .../program/database/data/PointerDBAdapterV2.java  |  2 +-
 .../database/data/SourceArchiveAdapter.java        |  2 +-
 .../database/data/SourceArchiveAdapterNoTable.java |  2 +-
 .../database/data/SourceArchiveAdapterV0.java      |  2 +-
 .../program/database/data/TypedefDBAdapter.java    |  2 +-
 .../program/database/data/TypedefDBAdapterV0.java  |  2 +-
 .../program/database/data/TypedefDBAdapterV1.java  |  2 +-
 .../program/database/data/TypedefDBAdapterV2.java  |  2 +-
 .../ghidra/program/database/mem/MemoryMapDB.java   |  2 +-
 .../database/module/FragmentDBAdapterV0.java       |  2 +-
 .../program/database/module/ModuleDBAdapterV0.java |  2 +-
 .../program/database/module/ModuleDBAdapterV1.java |  2 +-
 .../database/module/ParentChildDBAdapterV0.java    |  2 +-
 .../database/module/ProgramTreeDBAdapterV0.java    |  2 +-
 .../program/database/util/AddressRangeMapDB.java   |  2 +-
 .../database/util/AddressRangeMapIterator.java     |  2 +-
 .../ghidra/program/disassemble/Disassembler.java   |  2 +-
 .../ghidra/program/model/address/AddressSet.java   |  2 +-
 .../program/model/address/AddressSetMapping.java   |  4 ++--
 .../program/model/address/AddressSetView.java      |  8 ++++----
 .../ghidra/program/model/address/AddressSpace.java |  4 ++--
 .../ghidra/program/model/data/ArrayDataType.java   |  4 ++--
 .../java/ghidra/program/model/data/Composite.java  |  2 +-
 .../program/model/data/DataOrganizationImpl.java   |  2 +-
 .../java/ghidra/program/model/data/DataType.java   |  2 +-
 .../ghidra/program/model/data/DataTypeManager.java |  4 ++--
 .../program/model/data/DoubleComplexDataType.java  |  2 +-
 .../main/java/ghidra/program/model/data/Enum.java  |  2 +-
 .../ghidra/program/model/data/EnumDataType.java    |  2 +-
 .../program/model/data/FloatComplexDataType.java   |  2 +-
 .../model/data/LongDoubleComplexDataType.java      |  2 +-
 .../program/model/listing/CodeUnitIterator.java    |  2 +-
 .../java/ghidra/program/model/listing/Data.java    |  2 +-
 .../ghidra/program/model/listing/DataIterator.java |  2 +-
 .../program/model/listing/InstructionIterator.java |  2 +-
 .../java/ghidra/program/model/listing/Listing.java |  2 +-
 .../program/model/listing/ProgramContext.java      |  2 +-
 .../program/model/listing/ProgramUserData.java     |  2 +-
 .../java/ghidra/program/model/mem/MemBuffer.java   |  4 ++--
 .../program/model/symbol/SymbolTableListener.java  |  2 +-
 .../ghidra/program/util/BytesFieldLocation.java    |  2 +-
 .../util/FunctionSignatureFieldLocation.java       |  2 +-
 .../java/ghidra/program/util/RangeMapAdapter.java  |  2 +-
 .../ghidra/program/util/RegisterValueStore.java    |  2 +-
 .../java/ghidra/service/graph/GraphDisplay.java    |  4 ++--
 .../ghidra/service/graph/GraphDisplayListener.java |  2 +-
 .../src/main/java/ghidra/GhidraLauncher.java       |  2 +-
 .../src/main/java/ghidra/util/Location.java        |  2 +-
 .../main/java/ghidra/util/task/TaskMonitor.java    |  2 +-
 .../main/java/utility/module/ModuleUtilities.java  |  4 ++--
 .../AARCH64/data/languages/AARCH64neon.sinc        | 14 +++++++-------
 .../ghidra_scripts/CreateAVR8GDTArchiveScript.java |  2 +-
 .../ghidra/dalvik/dex/inject/ConstantPoolDex.java  |  2 +-
 .../ghidra/javaclass/format/DescriptorDecoder.java |  4 ++--
 .../RuntimeParameterAnnotationsAttribute.java      |  2 +-
 .../elf/relocation/RISCV_ElfRelocationContext.java |  2 +-
 .../Common/support/analyzeHeadlessREADME.html      |  6 +++---
 .../program/model/pcode/PcodeEmitContextTest.java  |  2 +-
 .../GhidraSleighEditor_README.html                 |  2 +-
 .../LaunchSupport/src/main/java/LaunchSupport.java |  2 +-
 .../BSim/BSimTutorial_Overview_Queries.html        |  2 +-
 .../BSim/BSimTutorial_Overview_Queries.md          |  2 +-
 .../GhidraClass/BSim/BSimTutorial_Scripting.html   |  2 +-
 .../GhidraClass/BSim/BSimTutorial_Scripting.md     |  2 +-
 .../GhidraClass/Debugger/A4-MachineState.html      |  2 +-
 GhidraDocs/GhidraClass/Debugger/A4-MachineState.md |  2 +-
 GhidraDocs/InstallationGuide.html                  |  2 +-
 GhidraDocs/languages/html/sleigh_context.html      |  2 +-
 gradle/processorProject.gradle                     |  2 +-
 gradle/root/usage.gradle                           |  2 +-
 426 files changed, 527 insertions(+), 527 deletions(-)

diff --git a/Ghidra/Configurations/Public_Release/src/global/docs/ChangeHistory.html b/Ghidra/Configurations/Public_Release/src/global/docs/ChangeHistory.html
index 240521cf4f..9e4f1274b3 100644
--- a/Ghidra/Configurations/Public_Release/src/global/docs/ChangeHistory.html
+++ b/Ghidra/Configurations/Public_Release/src/global/docs/ChangeHistory.html
@@ -855,7 +855,7 @@
     <li><I>CParser</I>. Enum constants are now created by the CParser when <span class="gcode">#define</span> expressions ending in <span class="gcode">ULL</span>, <span class="gcode">LLU</span>, <span class="gcode">LL</span>, and <span class="gcode">LU</span> are found in parentheses. (GP-3285, Issue #5161)</li>
     <li><I>CParser</I>. Fixed expansion of <span class="gcode">#define</span> statements embedded in <span class="gcode">#include</span> files and parsing of constants with <span class="gcode">UL</span>/<span class="gcode">LL</span> size specifications. (GP-3310, Issue #5207)</li>
     <li><I>CParser</I>. Fixed CParser issues with forward-declared Enums and typedefs used within the body of functions. (GP-3371, Issue #3526, #5271)</li>
-    <li><I>CParser</I>. <span class="gcode">Enum</span> sizes are now set to the size of an <span class="gcode">int</span> for the processor (formerly 4), and <span class="gcode">enum</span>s from <span class="gcode">#define</span>s are set to the the smallest <span class="gcode">enum</span> size that will fit the number (formerly 8).  Future change will add packed <span class="gcode">enum</span> sizes. (GP-3385)</li>
+    <li><I>CParser</I>. <span class="gcode">Enum</span> sizes are now set to the size of an <span class="gcode">int</span> for the processor (formerly 4), and <span class="gcode">enum</span>s from <span class="gcode">#define</span>s are set to the smallest <span class="gcode">enum</span> size that will fit the number (formerly 8).  Future change will add packed <span class="gcode">enum</span> sizes. (GP-3385)</li>
     <li><I>Data</I>. Corrected handling of zero-length components in the form of Listing DataComponent CodeUnits.  These were incorrectly reporting a length of 0 instead 1; all Listing Data, including DataComponents, must report a positive non-zero length. (GP-3314)</li>
     <li><I>Data Types</I>. Automatically created class structures now respect the <span class="gtitle">Preferred Root Namespace Category</span> property. (GP-1123, Issue #3196)</li>
     <li><I>Data Types</I>. Added support for floating-point data types to parse decimal string representation.   A significant refactor of FloatFormat and BigFloat was completed.  BigFloat is now used as the value class for all float data types.  Introduced <span class="gcode">DataType.getAlignedLength()</span> method which was needed to differentiate between the <em>raw</em> encoding size and the <em>aligned</em> (i.e., padded) size used by a compiler when allocating storage (i.e., <span class="gcode">sizeof</span>). Example: for x86-32 gcc, 80-bit float has an aligned-length of 12-bytes which reflects compiler's <span class="gcode">sizeof(long double)</span>. (GP-1379)</li>
diff --git a/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts/PopulateTraceLocal.java b/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts/PopulateTraceLocal.java
index dbac0e981f..27406e1fa8 100644
--- a/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts/PopulateTraceLocal.java
+++ b/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts/PopulateTraceLocal.java
@@ -83,7 +83,7 @@ import ghidra.util.Msg;
  * <li>Observations of registers behave exactly the same as observations for memory, by leveraging
  * Ghidra's "register space." The only difference is that those observations must be recorded with
  * respect to a given thread. Each thread is effectively allocated its own copy of the register
- * space. Most the the API components require you to obtain a special "register space" for a given
+ * space. Most of the API components require you to obtain a special "register space" for a given
  * thread before recording observations of or applying annotations to that thread.</li>
  * </ul>
  * 
diff --git a/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts/PopulateTraceRemote.java b/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts/PopulateTraceRemote.java
index 7eb2ef9704..1e7d1467c6 100644
--- a/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts/PopulateTraceRemote.java
+++ b/Ghidra/Debug/Debugger-agent-dbgmodel-traceloader/ghidra_scripts/PopulateTraceRemote.java
@@ -72,7 +72,7 @@ import ghidra.trace.model.time.TraceTimeManager;
  * <li>Observations of registers behave exactly the same as observations for memory, by leveraging
  * Ghidra's "register space." The only difference is that those observations must be recorded with
  * respect to a given thread. Each thread is effectively allocated its own copy of the register
- * space. Most the the API components require you to obtain a special "register space" for a given
+ * space. Most of the API components require you to obtain a special "register space" for a given
  * thread before recording observations of or applying annotations to that thread.</li>
  * </ul>
  * 
diff --git a/Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/evt/GdbThreadGroupStartedEvent.java b/Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/evt/GdbThreadGroupStartedEvent.java
index 6b4f3022e2..9dbfac5c90 100644
--- a/Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/evt/GdbThreadGroupStartedEvent.java
+++ b/Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/evt/GdbThreadGroupStartedEvent.java
@@ -38,7 +38,7 @@ public class GdbThreadGroupStartedEvent extends AbstractGdbThreadGroupEvent {
 	}
 
 	/**
-	 * Get the the process ID
+	 * Get the process ID
 	 * 
 	 * @return the process ID
 	 */
diff --git a/Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/impl/GdbManagerImpl.java b/Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/impl/GdbManagerImpl.java
index 413613b91b..bc6c35d40b 100644
--- a/Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/impl/GdbManagerImpl.java
+++ b/Ghidra/Debug/Debugger-agent-gdb/src/main/java/agent/gdb/manager/impl/GdbManagerImpl.java
@@ -969,7 +969,7 @@ public class GdbManagerImpl implements GdbManager {
 			return;
 		}
 		/**
-		 * NOTE: I've forgotten why, but the the state update needs to happen between handle and
+		 * NOTE: I've forgotten why, but the state update needs to happen between handle and
 		 * finish.
 		 */
 		boolean cmdFinished = false;
diff --git a/Ghidra/Debug/Debugger-api/src/main/java/ghidra/debug/api/action/LocationTrackingSpecFactory.java b/Ghidra/Debug/Debugger-api/src/main/java/ghidra/debug/api/action/LocationTrackingSpecFactory.java
index aa1b927f04..800513ac7f 100644
--- a/Ghidra/Debug/Debugger-api/src/main/java/ghidra/debug/api/action/LocationTrackingSpecFactory.java
+++ b/Ghidra/Debug/Debugger-api/src/main/java/ghidra/debug/api/action/LocationTrackingSpecFactory.java
@@ -68,7 +68,7 @@ public interface LocationTrackingSpecFactory extends ExtensionPoint {
 	List<LocationTrackingSpec> getSuggested(PluginTool tool);
 
 	/**
-	 * Attempt to parse the given configuration name as as specification
+	 * Attempt to parse the given configuration name as specification
 	 * 
 	 * @param name the configuration name, usually including a prefix unique to each factory
 	 * @return the specification, or null if this factory cannot parse it
diff --git a/Ghidra/Debug/Debugger-api/src/main/java/ghidra/debug/api/breakpoint/LogicalBreakpoint.java b/Ghidra/Debug/Debugger-api/src/main/java/ghidra/debug/api/breakpoint/LogicalBreakpoint.java
index 0741aa0b7a..fbde5b7f39 100644
--- a/Ghidra/Debug/Debugger-api/src/main/java/ghidra/debug/api/breakpoint/LogicalBreakpoint.java
+++ b/Ghidra/Debug/Debugger-api/src/main/java/ghidra/debug/api/breakpoint/LogicalBreakpoint.java
@@ -558,7 +558,7 @@ public interface LogicalBreakpoint {
 		}
 
 		/**
-		 * Get the desired state were the the logical breakpoint to be toggled
+		 * Get the desired state were the logical breakpoint to be toggled
 		 * 
 		 * <p>
 		 * The expected "action" when toggling a breakpoint may vary depending on whether or not the
diff --git a/Ghidra/Debug/Debugger-rmi-trace/DEVNOTES.txt b/Ghidra/Debug/Debugger-rmi-trace/DEVNOTES.txt
index 9815847397..b57899dc86 100644
--- a/Ghidra/Debug/Debugger-rmi-trace/DEVNOTES.txt
+++ b/Ghidra/Debug/Debugger-rmi-trace/DEVNOTES.txt
@@ -134,7 +134,7 @@ I instead just use a fixed 32-bit int now.
 
 # How-To?
 
-For now, I'd say just the the gdb implementation as a template / guide.
+For now, I'd say just the gdb implementation as a template / guide.
 Just beware, the whole thing is a bit unstable, so the code may change, but still, I don't expect it to change so drastically that integration work would be scrapped.
 
 If you're writing Python, create a Python package following the template for gdb's.
diff --git a/Ghidra/Debug/Debugger-rmi-trace/src/main/py/src/ghidratrace/client.py b/Ghidra/Debug/Debugger-rmi-trace/src/main/py/src/ghidratrace/client.py
index 2d6a42f105..22a1ec024a 100644
--- a/Ghidra/Debug/Debugger-rmi-trace/src/main/py/src/ghidratrace/client.py
+++ b/Ghidra/Debug/Debugger-rmi-trace/src/main/py/src/ghidratrace/client.py
@@ -345,7 +345,7 @@ class Trace(object):
         """
         TODO
 
-        values is a dictionary, where each key is a a register name, and the
+        values is a dictionary, where each key is a register name, and the
         value is a byte array. No matter the target architecture, the value is
         given in big-endian byte order.
         """
diff --git a/Ghidra/Debug/Debugger/ghidra_scripts/ComputeUnwindInfoScript.java b/Ghidra/Debug/Debugger/ghidra_scripts/ComputeUnwindInfoScript.java
index b02b3bdd67..79ce0f421f 100644
--- a/Ghidra/Debug/Debugger/ghidra_scripts/ComputeUnwindInfoScript.java
+++ b/Ghidra/Debug/Debugger/ghidra_scripts/ComputeUnwindInfoScript.java
@@ -51,7 +51,7 @@ public class ComputeUnwindInfoScript extends GhidraScript {
 			return;
 		}
 		println("Stack depth at " + currentAddress + ": " + info.depth());
-		println("Return address address: " + addressToString(info.ofReturn()));
+		println("Return address: " + addressToString(info.ofReturn()));
 		println("Saved registers:");
 		for (Entry<Register, Address> entry : info.saved().entrySet()) {
 			println("  " + entry);
diff --git a/Ghidra/Debug/Debugger/ghidra_scripts/PopulateDemoTrace.java b/Ghidra/Debug/Debugger/ghidra_scripts/PopulateDemoTrace.java
index 4f202ca7c7..b8aa9284f2 100644
--- a/Ghidra/Debug/Debugger/ghidra_scripts/PopulateDemoTrace.java
+++ b/Ghidra/Debug/Debugger/ghidra_scripts/PopulateDemoTrace.java
@@ -85,7 +85,7 @@ import ghidra.util.task.TaskMonitor;
  * <li>Observations of registers behave exactly the same as observations for memory, by leveraging
  * Ghidra's "register space." The only difference is that those observations must be recorded with
  * respect to a given thread. Each thread is effectively allocated its own copy of the register
- * space. Most the the API components require you to obtain a special "register space" for a given
+ * space. Most of the API components require you to obtain a special "register space" for a given
  * thread before recording observations of or applying annotations to that thread.</li>
  * </ul>
  * 
diff --git a/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/gui/console/DebuggerConsolePlugin.java b/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/gui/console/DebuggerConsolePlugin.java
index 24bac917ac..b9a102cafc 100644
--- a/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/gui/console/DebuggerConsolePlugin.java
+++ b/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/gui/console/DebuggerConsolePlugin.java
@@ -161,7 +161,7 @@ public class DebuggerConsolePlugin extends Plugin implements DebuggerConsoleServ
 	 * For testing: to verify the contents of a message delivered to the console log
 	 * 
 	 * @param ctx the context
-	 * @return the the log entry
+	 * @return the log entry
 	 */
 	public LogRow<?> getLogRow(ActionContext ctx) {
 		return provider.getLogRow(ctx);
diff --git a/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/gui/stack/vars/VariableValueRow.java b/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/gui/stack/vars/VariableValueRow.java
index 3a7ae1d76a..c7fa2bad79 100644
--- a/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/gui/stack/vars/VariableValueRow.java
+++ b/Ghidra/Debug/Debugger/src/main/java/ghidra/app/plugin/core/debug/gui/stack/vars/VariableValueRow.java
@@ -138,7 +138,7 @@ public interface VariableValueRow {
 	/**
 	 * Render the key for display in diagnostics
 	 * 
-	 * @return the the key as a string
+	 * @return the key as a string
 	 */
 	default String keyToSimpleString() {
 		return key().toString();
diff --git a/Ghidra/Debug/Debugger/src/test/java/ghidra/app/plugin/core/debug/disassemble/DebuggerDisassemblyTest.java b/Ghidra/Debug/Debugger/src/test/java/ghidra/app/plugin/core/debug/disassemble/DebuggerDisassemblyTest.java
index 86c149b2f5..6fd65a4772 100644
--- a/Ghidra/Debug/Debugger/src/test/java/ghidra/app/plugin/core/debug/disassemble/DebuggerDisassemblyTest.java
+++ b/Ghidra/Debug/Debugger/src/test/java/ghidra/app/plugin/core/debug/disassemble/DebuggerDisassemblyTest.java
@@ -293,7 +293,7 @@ public class DebuggerDisassemblyTest extends AbstractGhidraHeadedDebuggerTest {
 			assertMnemonic("JMP", instructions.getAt(0, tb.addr(0x00400000)));
 			/**
 			 * Depending on preference for branch or fall-through, the disassembler may or may not
-			 * proceed to the following instructions. I don't really care, since the test is the the
+			 * proceed to the following instructions. I don't really care, since the test is the
 			 * JMP gets deleted after the update to PC.
 			 */
 		});
@@ -328,7 +328,7 @@ public class DebuggerDisassemblyTest extends AbstractGhidraHeadedDebuggerTest {
 			assertMnemonic("JMP", instructions.getAt(0, tb.addr(0x00400000)));
 			/**
 			 * Depending on preference for branch or fall-through, the disassembler may or may not
-			 * proceed to the following instructions. I don't really care, since the test is the the
+			 * proceed to the following instructions. I don't really care, since the test is the
 			 * JMP gets deleted after the update to PC.
 			 */
 		});
@@ -377,7 +377,7 @@ public class DebuggerDisassemblyTest extends AbstractGhidraHeadedDebuggerTest {
 			assertMnemonic("JMP", instructions.getAt(0, tb.addr(0x00400000)));
 			/**
 			 * Depending on preference for branch or fall-through, the disassembler may or may not
-			 * proceed to the following instructions. I don't really care, since the test is the the
+			 * proceed to the following instructions. I don't really care, since the test is the
 			 * JMP gets deleted after the update to PC.
 			 */
 		});
diff --git a/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncLazyValue.java b/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncLazyValue.java
index 5fb56c0083..d0c372e6fd 100644
--- a/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncLazyValue.java
+++ b/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncLazyValue.java
@@ -142,7 +142,7 @@ public class AsyncLazyValue<T> {
 	}
 
 	/**
-	 * Check the the value is available immediately
+	 * Check the value is available immediately
 	 * 
 	 * @return true if {@link #request()} or {@link #provide()} has been called and completed.
 	 */
diff --git a/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncPairingCache.java b/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncPairingCache.java
index af3e45b81f..299b857c50 100644
--- a/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncPairingCache.java
+++ b/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncPairingCache.java
@@ -69,7 +69,7 @@ public abstract class AsyncPairingCache<K, V> {
 	protected abstract Map<K, CompletableFuture<V>> createPromiseCache(int max);
 
 	/**
-	 * Enter a promise for the the given key into the cache
+	 * Enter a promise for the given key into the cache
 	 * 
 	 * <p>
 	 * If the result for the given key is already available, the promise does not enter the cache.
@@ -83,7 +83,7 @@ public abstract class AsyncPairingCache<K, V> {
 	}
 
 	/**
-	 * Enter a promise for the the given key into the cache
+	 * Enter a promise for the given key into the cache
 	 * 
 	 * <p>
 	 * If the result for the given key is already available, the promise does not enter the cache.
diff --git a/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncUtils.java b/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncUtils.java
index 6070d6fc18..01874f5126 100644
--- a/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncUtils.java
+++ b/Ghidra/Debug/Framework-AsyncComm/src/main/java/ghidra/async/AsyncUtils.java
@@ -342,7 +342,7 @@ import ghidra.util.Msg;
  * more succinct syntax.
  * 
  * <p>
- * Finally, notice the call to to {@link AsyncSequenceHandlerForRunner#exit(Object)} passing the
+ * Finally, notice the call to {@link AsyncSequenceHandlerForRunner#exit(Object)} passing the
  * final result of the sequence. Requiring this is a bit of a nuisance, but it makes clear what the
  * result of the sequence is. Furthermore, {@code exit} can be called by any action, not just the
  * final one. In the composition pattern, execution cannot be truncated except by error handling. In
diff --git a/Ghidra/Debug/Framework-Debugging/src/test/java/ghidra/dbg/target/schema/XmlTargetObjectSchemaTest.java b/Ghidra/Debug/Framework-Debugging/src/test/java/ghidra/dbg/target/schema/XmlTargetObjectSchemaTest.java
index 21ff1a2f9b..890d2ce9d4 100644
--- a/Ghidra/Debug/Framework-Debugging/src/test/java/ghidra/dbg/target/schema/XmlTargetObjectSchemaTest.java
+++ b/Ghidra/Debug/Framework-Debugging/src/test/java/ghidra/dbg/target/schema/XmlTargetObjectSchemaTest.java
@@ -46,7 +46,7 @@ public class XmlTargetObjectSchemaTest {
 				        <element schema="OBJECT" />
 				        <attribute schema="VOID" fixed="yes" hidden="yes" />
 				    </schema>
-				</context>"""; // Cannot have final final new-line or serialize test will fail
+				</context>"""; // Cannot have final new-line or serialize test will fail
 
 	protected static final DefaultSchemaContext CTX = new DefaultSchemaContext();
 	protected static final SchemaName NAME_ROOT = new SchemaName("root");
diff --git a/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/database/program/DBTraceProgramView.java b/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/database/program/DBTraceProgramView.java
index b8c3e62b49..fe8e3b9c3d 100644
--- a/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/database/program/DBTraceProgramView.java
+++ b/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/database/program/DBTraceProgramView.java
@@ -1498,12 +1498,12 @@ public class DBTraceProgramView implements TraceProgramView {
 	}
 
 	public void updateMemoryAddSpaceBlock(AddressSpace space) {
-		// Spaces not not time-bound. No visibility check.
+		// Spaces not time-bound. No visibility check.
 		memory.updateAddSpaceBlock(space);
 	}
 
 	public void updateMemoryDeleteSpaceBlock(AddressSpace space) {
-		// Spaces not not time-bound. No visibility check.
+		// Spaces not time-bound. No visibility check.
 		memory.updateDeleteSpaceBlock(space);
 	}
 
diff --git a/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/model/target/TraceObjectKeyPath.java b/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/model/target/TraceObjectKeyPath.java
index 1de27134a0..e1a9962d49 100644
--- a/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/model/target/TraceObjectKeyPath.java
+++ b/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/model/target/TraceObjectKeyPath.java
@@ -23,7 +23,7 @@ import ghidra.dbg.util.PathUtils;
 import ghidra.dbg.util.PathUtils.PathComparator;
 
 /**
- * An immutable path of keys leading from one object object to another
+ * An immutable path of keys leading from one object to another
  * 
  * <p>
  * Often, the source is the root. These are often taken as a parameter when searching for values. In
diff --git a/Ghidra/Debug/Framework-TraceModeling/src/test/java/ghidra/trace/database/ToyDBTraceBuilder.java b/Ghidra/Debug/Framework-TraceModeling/src/test/java/ghidra/trace/database/ToyDBTraceBuilder.java
index b805b355a2..2a272fb1ec 100644
--- a/Ghidra/Debug/Framework-TraceModeling/src/test/java/ghidra/trace/database/ToyDBTraceBuilder.java
+++ b/Ghidra/Debug/Framework-TraceModeling/src/test/java/ghidra/trace/database/ToyDBTraceBuilder.java
@@ -577,7 +577,7 @@ public class ToyDBTraceBuilder implements AutoCloseable {
 	 * 
 	 * @param snap the starting snap
 	 * @param start the min address
-	 * @param platform the platform the the language to disassemble
+	 * @param platform the platform the language to disassemble
 	 * @param buf the bytes to place, which will become the unit's bytes
 	 * @return the instruction unit
 	 * @throws CodeUnitInsertionException if the instruction cannot be created
diff --git a/Ghidra/Debug/ProposedUtils/src/main/java/ghidra/util/database/DBCachedObjectIndex.java b/Ghidra/Debug/ProposedUtils/src/main/java/ghidra/util/database/DBCachedObjectIndex.java
index 4d180f3708..0ba20ae08a 100644
--- a/Ghidra/Debug/ProposedUtils/src/main/java/ghidra/util/database/DBCachedObjectIndex.java
+++ b/Ghidra/Debug/ProposedUtils/src/main/java/ghidra/util/database/DBCachedObjectIndex.java
@@ -223,7 +223,7 @@ public class DBCachedObjectIndex<K, T extends DBAnnotatedObject> {
 	 * Iterate over the entries as ordered by the index
 	 * 
 	 * <p>
-	 * Each entry is a key-value value where the "key" is the value of the indexed field, and the
+	 * Each entry is a key-value entry where the "key" is the value of the indexed field, and the
 	 * "value" is the object.
 	 * 
 	 * @return the iterator
@@ -426,7 +426,7 @@ public class DBCachedObjectIndex<K, T extends DBAnnotatedObject> {
 	 * @param key the key
 	 * @see #descending()
 	 * @see #sub(Object, boolean, Object, boolean)
-	 * @return the the value of the previous key, or null
+	 * @return the value of the previous key, or null
 	 */
 	public T lowerValue(K key) {
 		return firstOf(head(key, false).descending().values());
diff --git a/Ghidra/Extensions/SleighDevTools/pcodetest/c_src/builtin.c b/Ghidra/Extensions/SleighDevTools/pcodetest/c_src/builtin.c
index 4dd3615f1a..6612914fe5 100644
--- a/Ghidra/Extensions/SleighDevTools/pcodetest/c_src/builtin.c
+++ b/Ghidra/Extensions/SleighDevTools/pcodetest/c_src/builtin.c
@@ -423,7 +423,7 @@ static void ftoa(float f, char *buff, int len)
 		fa = f2;
 		// printf("%f = %u 2^%d 10^%d?\n", f, fa, e2, ea);
 		while (e2 > 0) {
-			// If the the high bit is set
+			// If the high bit is set
 			// then we can't multiply by 2
 			// without losing it, so divide by 10
 			// and round off
diff --git a/Ghidra/Features/BSim/src/main/help/help/topics/BSim/IngestProcess.html b/Ghidra/Features/BSim/src/main/help/help/topics/BSim/IngestProcess.html
index 8265d68ca1..9962a928a3 100644
--- a/Ghidra/Features/BSim/src/main/help/help/topics/BSim/IngestProcess.html
+++ b/Ghidra/Features/BSim/src/main/help/help/topics/BSim/IngestProcess.html
@@ -63,7 +63,7 @@
         "filename">localhost</CODE> is running both a Ghidra Server and a BSim PostgreSQL database
         server. On the Ghidra Server, a repository named <CODE class="filename">repo</CODE> has
         been created. On the BSim server, a database named <CODE class="filename">repo</CODE> has
-        also been created. See See <A class="xref" href=
+        also been created. See <A class="xref" href=
         "CommandLineReference.html#BSimCommand">Command-Line Utility Reference</A> for more
         details on use of <STRONG>bsim</STRONG> command and other supported BSim databases.</P>
 
diff --git a/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/client/ExecutableScorer.java b/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/client/ExecutableScorer.java
index 072068b476..e8bd7769f9 100755
--- a/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/client/ExecutableScorer.java
+++ b/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/client/ExecutableScorer.java
@@ -420,7 +420,7 @@ public class ExecutableScorer {
 	 * to create symmetric score contributions and accumulate the contributions in the matrix
 	 * @param pairs is the full list of pairs in the cluster
 	 * @param i is the first function pair sharing this pair of executables
-	 * @param j is the the last(+1) function pair sharing this pair of executables
+	 * @param j is the last(+1) function pair sharing this pair of executables
 	 */
 	private void scoreAcrossExecutablePair(List<FunctionPair> pairs, int i, int j) {
 		int size = j - i;
diff --git a/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/description/CategoryRecord.java b/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/description/CategoryRecord.java
index c18716a75c..bf6112db21 100755
--- a/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/description/CategoryRecord.java
+++ b/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/description/CategoryRecord.java
@@ -24,7 +24,7 @@ import java.io.IOException;
 import java.io.Writer;
 
 /**
- * A user-defined category associated associated with an executable
+ * A user-defined category associated with an executable
  * Specified by a -type- and then the particular -category- (within the type) that
  * the executable belongs to.
  *
diff --git a/Ghidra/Features/Base/ghidra_scripts/ReportDisassemblyErrors.java b/Ghidra/Features/Base/ghidra_scripts/ReportDisassemblyErrors.java
index a1c6ca1287..f4806d6d34 100644
--- a/Ghidra/Features/Base/ghidra_scripts/ReportDisassemblyErrors.java
+++ b/Ghidra/Features/Base/ghidra_scripts/ReportDisassemblyErrors.java
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-// Reports the the number of disassembly error bookmarks currently in the program.
+// Reports the number of disassembly error bookmarks currently in the program.
 // This can be an "indicator" of bad analysis, strange instructions, or non-returning functions.
 //
 // Assumes a program is open.
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/CodeBrowserPlugin/CodeBrowser.htm b/Ghidra/Features/Base/src/main/help/help/topics/CodeBrowserPlugin/CodeBrowser.htm
index 187bac9f21..041c3c66a1 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/CodeBrowserPlugin/CodeBrowser.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/CodeBrowserPlugin/CodeBrowser.htm
@@ -113,7 +113,7 @@
 
 		
 	  <A name="Show_Xrefs"></A>
-      <P>In the XRef field, sometimes there are too many addresses to display so the the field will
+      <P>In the XRef field, sometimes there are too many addresses to display so the field will
       display "[more]" to indicate that one or more cross-reference addresses are not shown.</P>
 
       <BLOCKQUOTE>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/CodeBrowserPlugin/CodeBrowserOptions.htm b/Ghidra/Features/Base/src/main/help/help/topics/CodeBrowserPlugin/CodeBrowserOptions.htm
index 37cb9db6cc..e2a6097d05 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/CodeBrowserPlugin/CodeBrowserOptions.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/CodeBrowserPlugin/CodeBrowserOptions.htm
@@ -851,7 +851,7 @@
         contains the prefix to use for local labels.</P>
 
         <P><B>Enable Word Wrapping -</B> Option to wrap strings in operand lines that are too long
-        to fit in the operand field. Note that that word wrapping can only occur where spaces exist
+        to fit in the operand field. Note that word wrapping can only occur where spaces exist
         in the string.<BR>
         </P>
         
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/DataTypeEditors/StructureEditor.htm b/Ghidra/Features/Base/src/main/help/help/topics/DataTypeEditors/StructureEditor.htm
index 96678b8888..719faea9c9 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/DataTypeEditors/StructureEditor.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/DataTypeEditors/StructureEditor.htm
@@ -374,7 +374,7 @@
       		must be used to precisely place a bitfield component.  Adding a bitfield component via the 
       		structure table view via datatype text entry (e.g., char:1) provides only rough placement for non-packed 
       		structures since additional bytes will be introduced. 
-      		The BitField Editor may be displayed using the the Add Bitfield and
+		The BitField Editor may be displayed using the Add Bitfield and
       		Edit Bitfield popup menu actions on a selected structure component.  The datatype text entry approach
       		must be used for all unions and packed structures.</li>
       	</ul>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/DataTypeManagerPlugin/data_type_manager_description.htm b/Ghidra/Features/Base/src/main/help/help/topics/DataTypeManagerPlugin/data_type_manager_description.htm
index f37737d95d..ae727e5422 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/DataTypeManagerPlugin/data_type_manager_description.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/DataTypeManagerPlugin/data_type_manager_description.htm
@@ -1118,7 +1118,7 @@
         <BLOCKQUOTE>
         <P>On occasion there may be the need to add stipulate additional attributes on a pointer
         type to stipulate how the associated pointer should be interpreted or processed during analysis.
-        Such pointer attributes may only be specified when such a pointer in in the form of a Typedef
+        Such pointer attributes may only be specified when such a pointer in the form of a Typedef
         which enables the datatype to preserve these attributes during type resolution and propagation. 
         This includes preservation of such Typedef Settings within a data type archive, and through 
         merge processing, which normal Data Settings do not support.</P>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/DataTypeManagerPlugin/data_type_manager_window.html b/Ghidra/Features/Base/src/main/help/help/topics/DataTypeManagerPlugin/data_type_manager_window.html
index 45cc545521..b5659f98b8 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/DataTypeManagerPlugin/data_type_manager_window.html
+++ b/Ghidra/Features/Base/src/main/help/help/topics/DataTypeManagerPlugin/data_type_manager_window.html
@@ -142,7 +142,7 @@
                       </TD>
 
                       <TD style="vertical-align: top;">- Indicates the archive has datatypes from a
-                      source archive that has been been modified. An update is needed.</TD>
+                      source archive that has been modified. An update is needed.</TD>
                     </TR>
 
                     <TR valign="top">
@@ -525,7 +525,7 @@
           <H3><A name="Copy"></A>Copy</H3>
 
           <BLOCKQUOTE>
-            <P>The <I><B>Copy</B></I> action can be be used to 
+            <P>The <I><B>Copy</B></I> action can be used to
             <A href="data_type_manager_description.htm#CopyDataType">copy
             selected data types</A> and/or 
             <A href="data_type_manager_description.htm#CopyCategory">copy selected categories</A>.
@@ -539,7 +539,7 @@
           <H3><A name="Cut"></A>Cut</H3>
 
           <BLOCKQUOTE>
-            <P>The <I><B>Cut</B></I> action can be be used to 
+            <P>The <I><B>Cut</B></I> action can be used to
             <A href="data_type_manager_description.htm#MoveDataType">move selected
             data types</A> and/or 
             <A href="data_type_manager_description.htm#MoveCategory">move selected categories</A>. The
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/ExporterPlugin/exporter.htm b/Ghidra/Features/Base/src/main/help/help/topics/ExporterPlugin/exporter.htm
index 2242bc1a0e..349bb01492 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/ExporterPlugin/exporter.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/ExporterPlugin/exporter.htm
@@ -105,10 +105,10 @@
         <BLOCKQUOTE>
           <UL>
             <LI><B>Format</B> - This field is a drop-down list containing all the valid <A href=
-            "#Exporter_Formats">export file formats</A> that could be used to to export the
+            "#Exporter_Formats">export file formats</A> that could be used to export the
             program. By default, the last used format will be auto-selected.</LI>
 
-            <LI><B>Output File</B> - This field specifies the the output file for the export. By
+            <LI><B>Output File</B> - This field specifies the output file for the export. By
             default, the output file's name will be the name of the program and the output folder
             will be the user's home folder or the last folder used for an export if an export has
             been performed in the current session. Use the "..." button to bring up a file chooser
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/FallThroughPlugin/Override_Fallthrough.htm b/Ghidra/Features/Base/src/main/help/help/topics/FallThroughPlugin/Override_Fallthrough.htm
index b6e3b3149f..ef6e383833 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/FallThroughPlugin/Override_Fallthrough.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/FallThroughPlugin/Override_Fallthrough.htm
@@ -40,7 +40,7 @@
       Address</I> field is disabled. If an instruction has no default fallthrough (e.g., "jump"),
       the Fallthrough Address field is empty. Choose the <B>User</B> button to enter a new
       fallthrough address. When the <B>User</B> button is selected, the <I>Fallthrough</I>
-      <I>Address</I> field is updated as you move the cursor in the the Code Browser.</P>
+      <I>Address</I> field is updated as you move the cursor in the Code Browser.</P>
 
       <P>Select the Home button to navigate the Code Browser back to this address. The home panel
       shows the address and the instruction when you selected the <B>Set</B> option.</P>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/FrontEndPlugin/Connecting_Tools.htm b/Ghidra/Features/Base/src/main/help/help/topics/FrontEndPlugin/Connecting_Tools.htm
index 189c9db0ea..639328e787 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/FrontEndPlugin/Connecting_Tools.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/FrontEndPlugin/Connecting_Tools.htm
@@ -108,7 +108,7 @@
         <OL>
           <LI>Connect the tools in one direction as described above.</LI>
 
-          <LI>Select Tool B as the event producer and and Tool A as the event consumer.</LI>
+          <LI>Select Tool B as the event producer and Tool A as the event consumer.</LI>
 
           <LI>Select the check box for the event of interest in the <I>Event Names</I> list.</LI>
         </OL>
@@ -174,7 +174,7 @@
         <OL>
           <LI>Disconnect the tools in one direction as described above.</LI>
 
-          <LI>Select Tool B as the event producer and and Tool A as the event consumer.</LI>
+          <LI>Select Tool B as the event producer and Tool A as the event consumer.</LI>
 
           <LI>Turn off the check box for the event of interest in the <I>Event Names</I> list.</LI>
         </OL>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/FrontEndPlugin/Ghidra_Front_end.htm b/Ghidra/Features/Base/src/main/help/help/topics/FrontEndPlugin/Ghidra_Front_end.htm
index 589cbfa956..4e8121be9f 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/FrontEndPlugin/Ghidra_Front_end.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/FrontEndPlugin/Ghidra_Front_end.htm
@@ -530,7 +530,7 @@
               <TD width="40%"><A name="HijackedFile"></A>The private file "Example" exists on your 
               computer, but another user added "Example" to version control, which
               caused the private file to appear as <I>hijacked</I>, (i.e., the file can be saved "as
-              is" using "<B>Save As</B>" since you do not have the the file checked out that is on 
+              is" using "<B>Save As</B>" since you do not have the file checked out that is on
               the Ghidra Server.) Hijacked files may also result from a checkout that was <A href=
               "help/topics/VersionControl/project_repository.htm#TerminateCheckout">terminated</A>. The
               <I>shared</I> version of "Example" will not be visible in your project until you 
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/ImporterPlugin/importer.htm b/Ghidra/Features/Base/src/main/help/help/topics/ImporterPlugin/importer.htm
index d893ef86c7..def26aafd9 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/ImporterPlugin/importer.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/ImporterPlugin/importer.htm
@@ -230,7 +230,7 @@
       <BLOCKQUOTE>
         <UL>
           <LI><B>Format</B> - This field is a drop-down list containing all the valid <A href=
-          "#Supported_Formats">file formats</A> that could be used to to import the file.
+          "#Supported_Formats">file formats</A> that could be used to import the file.
           Typically, there are two options available. One for the actual format of the file (if
           Ghidra could detect it) and other is the <B>Raw Binary</B> format, which is always an
           option regardless of the actual file format and it will simply import the bytes in the
@@ -688,7 +688,7 @@
       <BLOCKQUOTE>
         <P>The Library Search Path dialog is used to specify the directories, container files,
         and/or FSRLs that Ghidra should use to resolve external libraries (e.g.; *.dll, *.so) while
-        importing. A "." can be added to specify the the program's import location.  FSRLs can be
+        importing. A "." can be added to specify the program's import location.  FSRLs can be
         added via the
         <A href="help/topics/FileSystemBrowserPlugin/FileSystemBrowserPlugin.html#FSB_Add_Library_Search_Path">File System Browser context menu</A>.
         </P>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/LanguageProviderPlugin/Languages.htm b/Ghidra/Features/Base/src/main/help/help/topics/LanguageProviderPlugin/Languages.htm
index d7bd2eaa54..c5d5df96e7 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/LanguageProviderPlugin/Languages.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/LanguageProviderPlugin/Languages.htm
@@ -56,7 +56,7 @@ data tree, and setlect <span style="font-weight: bold;">Set Language...</span>
 from the popup menu.&nbsp; Since setting the language is such a major
 change, the following warning will appear.</p>
 <p align="center"><img alt="" src="images/Warning.png"></p>
-<p align="left">Alternatively, if your file is versioned, you you
+<p align="left">Alternatively, if your file is versioned, you
 should check-in any recent changes prior to performing this
 operation.&nbsp; If you press the "OK" button, the Select Language
 dialog will be displayed:</p>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/Navigation/Navigation.htm b/Ghidra/Features/Base/src/main/help/help/topics/Navigation/Navigation.htm
index bedf7dd0e7..f1592a9538 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/Navigation/Navigation.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/Navigation/Navigation.htm
@@ -805,7 +805,7 @@
  		    	lowest code block, and finally lowest overall address</LI>
  		    </UL>
 
- 		    <P><B><A name="Start_Symbols"></A>Start Symbols</B> - A comma separated list of symbol names to be be used as the
+		    <P><B><A name="Start_Symbols"></A>Start Symbols</B> - A comma separated list of symbol names to be used as the
  		    starting location for the program if the "Preferred Symbol Name" option is selected 
  		    above. The first matching symbol found will be used as the starting location for
  		    newly opened programs.</P>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/ReferencesPlugin/References_from.htm b/Ghidra/Features/Base/src/main/help/help/topics/ReferencesPlugin/References_from.htm
index 654d973b05..90b07923f7 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/ReferencesPlugin/References_from.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/ReferencesPlugin/References_from.htm
@@ -844,7 +844,7 @@ c<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
     <P>When adding a <I>Stack</I> or <I>Register</I> reference, a corresponding parameter or
     variable may be created. &nbsp;If a local variable is created, the first-use-offset of the
     variable will correspond to the source instruction location. &nbsp;For this reason, it is
-    recommended that the first reference to a variable be created on the the first "assignment"
+    recommended that the first reference to a variable be created on the first "assignment"
     instruction. &nbsp;If a newly created variable is unwanted, it may be deleted by clicking on it
     within the Listing and hitting the "<I>Delete</I>" key. &nbsp;Keep in mind that when a variable
     is deleted, any explicit bindings to that variable will be cleared.<BR>
@@ -1085,7 +1085,7 @@ c<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
     <P>When adding a <I>Stack</I> or <I>Register</I> reference, a corresponding parameter or
     variable may be created. &nbsp;If a local variable is created, the first-use-offset of the
     variable will correspond to the source instruction location. &nbsp;For this reason, it is
-    recommended that the first reference to a variable be created on the the first "assignment"
+    recommended that the first reference to a variable be created on the first "assignment"
     instruction. &nbsp;If a newly created variable is unwanted, it may be deleted by clicking on it
     within the Listing and hitting the "<I>Delete</I>" key. &nbsp;Keep in mind that when a variable
     is deleted, any explicit bindings to that variable will be cleared.<BR>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/Search/Search_for_AddressTables.htm b/Ghidra/Features/Base/src/main/help/help/topics/Search/Search_for_AddressTables.htm
index f56a1213b7..aebd6eb850 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/Search/Search_for_AddressTables.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/Search/Search_for_AddressTables.htm
@@ -117,7 +117,7 @@
         <LI>Select the <B>Make Table</B> button.</LI>
 
         <LI>An address table gets created at the location you chose, containing defined addresses
-        which now point to to the address created. These addresses now contain XREFs to the table
+        which now point to the address created. These addresses now contain XREFs to the table
         entries. If an index to the table exists immediately after the table, it will get created
         as an array of bytes, as well.</LI>
       </OL>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/SymbolTreePlugin/SymbolTree.htm b/Ghidra/Features/Base/src/main/help/help/topics/SymbolTreePlugin/SymbolTree.htm
index 29b45691e3..4eefa0ee61 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/SymbolTreePlugin/SymbolTree.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/SymbolTreePlugin/SymbolTree.htm
@@ -331,7 +331,7 @@
       <H3><A name="Go_To_External_Location"></A>Navigating to External Locations</H3>
 
       <BLOCKQUOTE>
-        <P>If you select an external symbol (under the <I>Externals</I> folder in the the symbol
+        <P>If you select an external symbol (under the <I>Externals</I> folder in the symbol
         tree), you will navigate to an external <I>reference</I> <I>source</I> which has a
         <I>destination</I> corresponding to the external symbol (i.e., where it is being called
         from). To actually <B>go to</B> the external location, right mouse click on the external
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/Tool/Configure_Tool.htm b/Ghidra/Features/Base/src/main/help/help/topics/Tool/Configure_Tool.htm
index 94eeb547f4..f602772646 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/Tool/Configure_Tool.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/Tool/Configure_Tool.htm
@@ -77,7 +77,7 @@
       <H3><A name="PluginDialog"></A>Configure Plugins Dialog</H3>
 
       <BLOCKQUOTE>
-        <P>Selecting the <I>Configure</I> link for a package will bring up the the <I>Configure
+        <P>Selecting the <I>Configure</I> link for a package will bring up the <I>Configure
         Plugins Dialog</I>.</P>
       </BLOCKQUOTE>
 
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/Trees/GhidraTreeFilter.html b/Ghidra/Features/Base/src/main/help/help/topics/Trees/GhidraTreeFilter.html
index 776a8c8b68..fa2c32c5de 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/Trees/GhidraTreeFilter.html
+++ b/Ghidra/Features/Base/src/main/help/help/topics/Trees/GhidraTreeFilter.html
@@ -496,7 +496,7 @@
       <H3>Filter Results</H3>
 
       <BLOCKQUOTE>
-        <P>After applying the the filter show above, the table would appear as follows:</P>
+        <P>After applying the filter show above, the table would appear as follows:</P>
         <BR>
          
 
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/VersionControl/project_repository.htm b/Ghidra/Features/Base/src/main/help/help/topics/VersionControl/project_repository.htm
index 4cb185cee3..3108a89912 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/VersionControl/project_repository.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/VersionControl/project_repository.htm
@@ -135,7 +135,7 @@
 
         <P><IMG alt="" src="help/shared/note.png" border="0"> A normal checkout is indicated by a
         checkmark with a green background<IMG alt="" src="images/check.png" border="0">, while an
-        exclusive checkout is is indicated by checkmark with a blue background<IMG alt="" src=
+        exclusive checkout is indicated by checkmark with a blue background<IMG alt="" src=
         "images/checkex.png" border="0">. A checkmark with a red background<IMG alt="" src=
         "images/checkNotLatest.gif" border="0"> indicates that a newer version has been checked-in
         by another user.</P>
@@ -150,7 +150,7 @@
       "0">&nbsp;</H3>
 
       <BLOCKQUOTE>
-        <P>To check out a file, select the file in the Ghidra Project Window. You can either either
+        <P>To check out a file, select the file in the Ghidra Project Window. You can either
         click on the check out icon <IMG alt="" src="images/vcCheckOut.png" border="0"> on the tool
         bar, or right mouse click on the file and choose the <B>Check Out...</B>
         option.&nbsp;&nbsp;&nbsp;</P>
diff --git a/Ghidra/Features/Base/src/main/help/help/topics/ViewStringsPlugin/ViewStringsPlugin.htm b/Ghidra/Features/Base/src/main/help/help/topics/ViewStringsPlugin/ViewStringsPlugin.htm
index 2dc4812a89..3d1f645d4d 100644
--- a/Ghidra/Features/Base/src/main/help/help/topics/ViewStringsPlugin/ViewStringsPlugin.htm
+++ b/Ghidra/Features/Base/src/main/help/help/topics/ViewStringsPlugin/ViewStringsPlugin.htm
@@ -44,7 +44,7 @@
 	  <li>Has Encoding Error - boolean flag that indicates the string had byte(s) that could not be converted by the character set.
 	  This is usually caused by having the wrong character set or if the string isn't really a string.</li>
 	  <li>Charset - name of the character set that this string is encoded in.</li>
-	  <li>Unicode Script - a list of the the scripts (alphabets) used in the string.</li>
+	  <li>Unicode Script - a list of the scripts (alphabets) used in the string.</li>
 	</ul>
 	<p>The <b>Is Ascii</b>, <b>Has Encoding Error</b>, <b>Unicode Script</b>, and <b>Charset</b> columns are not visible by default.  To display
 	them in the table, right click on the column header row and select
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddBitMappedMemoryBlockCmd.java b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddBitMappedMemoryBlockCmd.java
index 61a11c36ea..71bff4c42c 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddBitMappedMemoryBlockCmd.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddBitMappedMemoryBlockCmd.java
@@ -35,7 +35,7 @@ public class AddBitMappedMemoryBlockCmd extends AbstractAddMemoryBlockCmd {
 	 * @param name the name for the new memory block.
 	 * @param comment the comment for the block
 	 * @param source indicates what is creating the block
-	 * @param start the start address for the the block
+	 * @param start the start address for the block
 	 * @param length the length of the new block in number of bits to be mapped
 	 * @param read sets the block's read permission flag
 	 * @param write sets the block's write permission flag
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddByteMappedMemoryBlockCmd.java b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddByteMappedMemoryBlockCmd.java
index cb2252d61a..4555b9e26d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddByteMappedMemoryBlockCmd.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddByteMappedMemoryBlockCmd.java
@@ -40,7 +40,7 @@ public class AddByteMappedMemoryBlockCmd extends AbstractAddMemoryBlockCmd {
 	 * @param name the name for the new memory block.
 	 * @param comment the comment for the block
 	 * @param source indicates what is creating the block
-	 * @param start the start address for the the block
+	 * @param start the start address for the block
 	 * @param length the length of the new block
 	 * @param read sets the block's read permission flag
 	 * @param write sets the block's write permission flag
@@ -63,7 +63,7 @@ public class AddByteMappedMemoryBlockCmd extends AbstractAddMemoryBlockCmd {
 	 * @param name the name for the new memory block.
 	 * @param comment the comment for the block
 	 * @param source indicates what is creating the block
-	 * @param start the start address for the the block
+	 * @param start the start address for the block
 	 * @param length the length of the new block
 	 * @param read sets the block's read permission flag
 	 * @param write sets the block's write permission flag
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddFileBytesMemoryBlockCmd.java b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddFileBytesMemoryBlockCmd.java
index 0323314a55..d48a55ea83 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddFileBytesMemoryBlockCmd.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddFileBytesMemoryBlockCmd.java
@@ -34,7 +34,7 @@ public class AddFileBytesMemoryBlockCmd extends AbstractAddMemoryBlockCmd {
 	 * @param name the name for the new memory block.
 	 * @param comment the comment for the block
 	 * @param source indicates what is creating the block
-	 * @param start the start address for the the block
+	 * @param start the start address for the block
 	 * @param length the length of the new block
 	 * @param read sets the block's read permission flag
 	 * @param write sets the block's write permission flag
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddInitializedMemoryBlockCmd.java b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddInitializedMemoryBlockCmd.java
index df49e916dc..72e9c0a398 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddInitializedMemoryBlockCmd.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddInitializedMemoryBlockCmd.java
@@ -33,7 +33,7 @@ public class AddInitializedMemoryBlockCmd extends AbstractAddMemoryBlockCmd {
 	 * @param name the name for the new memory block.
 	 * @param comment the comment for the block
 	 * @param source indicates what is creating the block
-	 * @param start the start address for the the block
+	 * @param start the start address for the block
 	 * @param length the length of the new block
 	 * @param read sets the block's read permission flag
 	 * @param write sets the block's write permission flag
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddUninitializedMemoryBlockCmd.java b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddUninitializedMemoryBlockCmd.java
index 2866664d94..2e7c5792c7 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddUninitializedMemoryBlockCmd.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/cmd/memory/AddUninitializedMemoryBlockCmd.java
@@ -30,7 +30,7 @@ public class AddUninitializedMemoryBlockCmd extends AbstractAddMemoryBlockCmd {
 	 * @param name the name for the new memory block.
 	 * @param comment the comment for the block
 	 * @param source indicates what is creating the block
-	 * @param start the start address for the the block
+	 * @param start the start address for the block
 	 * @param length the length of the new block
 	 * @param read sets the block's read permission flag
 	 * @param write sets the block's write permission flag
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/merge/listing/AbstractFunctionMerger.java b/Ghidra/Features/Base/src/main/java/ghidra/app/merge/listing/AbstractFunctionMerger.java
index 4f78d7c78d..4e2b2732fe 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/merge/listing/AbstractFunctionMerger.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/merge/listing/AbstractFunctionMerger.java
@@ -701,7 +701,7 @@ abstract class AbstractFunctionMerger implements ListingMergeConstants {
 		}
 
 		// NOTE: Parameter level merging gets really complex when the presence of auto-params are inconsistent
-		// between between two functions treat as a signature difference when this occurs
+		// between two functions treat as a signature difference when this occurs
 
 		for (int i = 0; i < f1Parms.length; i++) {
 			if (f1Parms[i].isAutoParameter() != f2Parms[i].isAutoParameter() ||
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/merge/propertylist/PropertyListMergeManager.java b/Ghidra/Features/Base/src/main/java/ghidra/app/merge/propertylist/PropertyListMergeManager.java
index 76dc92eec8..e51fddda64 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/merge/propertylist/PropertyListMergeManager.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/merge/propertylist/PropertyListMergeManager.java
@@ -68,7 +68,7 @@ public class PropertyListMergeManager implements MergeResolver {
 	 * @param myProgram source of changes to apply to the result
 	 * program
 	 * @param originalProgram program that was originally checked out
-	 * @param latestProgram program that that is the latest version; the
+	 * @param latestProgram program that is the latest version; the
 	 * resultProgram and latestProgram start out the same
 	 */
 	public PropertyListMergeManager(ProgramMultiUserMergeManager mergeManager,
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/merge/tree/ProgramTreeMergeManager.java b/Ghidra/Features/Base/src/main/java/ghidra/app/merge/tree/ProgramTreeMergeManager.java
index f874237217..afe3a41da8 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/merge/tree/ProgramTreeMergeManager.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/merge/tree/ProgramTreeMergeManager.java
@@ -79,7 +79,7 @@ public class ProgramTreeMergeManager implements MergeResolver {
 	 * @param myProgram source of changes to apply to the destination
 	 * program
 	 * @param originalProgram program that was originally checked out
-	 * @param latestProgram program that that is the latest version; the
+	 * @param latestProgram program that is the latest version; the
 	 * resultProgram and latestProgram start out as being identical
 	 * @param latestChangeSet change set of the destination program
 	 * @param myChangeSet change set for the source program
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/AnalysisPanel.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/AnalysisPanel.java
index bf97e48253..7595a7994d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/AnalysisPanel.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/AnalysisPanel.java
@@ -140,8 +140,8 @@ class AnalysisPanel extends JPanel implements PropertyChangeListener {
 	}
 
 	/**
-	 * Copies the the non-default options from the program analysis options into a new options object
-	 * @return the the non-default options from the program analysis options into a new options object
+	 * Copies the non-default options from the program analysis options into a new options object
+	 * @return the non-default options from the program analysis options into a new options object
 	 */
 	private Options getNonDefaultProgramOptions() {
 		FileOptions options = new FileOptions("Current Program Options");
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/ConstantPropagationAnalyzer.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/ConstantPropagationAnalyzer.java
index 3bbebfbc22..2d8eb84cf0 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/ConstantPropagationAnalyzer.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/ConstantPropagationAnalyzer.java
@@ -126,7 +126,7 @@ public class ConstantPropagationAnalyzer extends AbstractAnalyzer {
 	}
 
 	/**
-	 * Called to to register a more specific analyzer.
+	 * Called to register a more specific analyzer.
 	 *
 	 * @param processorName
 	 */
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/OperandReferenceAnalyzer.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/OperandReferenceAnalyzer.java
index 8bc268083f..c4e782d706 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/OperandReferenceAnalyzer.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/OperandReferenceAnalyzer.java
@@ -1107,7 +1107,7 @@ public class OperandReferenceAnalyzer extends AbstractAnalyzer {
 	/**
 	 * Returns the length of the Unicode string found at address.
 	 *
-	 * @return length of string in in words (two byte unicode characters).
+	 * @return length of string in words (two byte unicode characters).
 	 */
 	private int checkUnicodeString(Memory mem, Address adref) {
 		int len = getWStrLen(mem, adref); // returns -1 for bad
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/RegisterContextBuilder.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/RegisterContextBuilder.java
index 2f0e023709..6dac09f4e6 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/RegisterContextBuilder.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/RegisterContextBuilder.java
@@ -110,7 +110,7 @@ class RegisterContextBuilder {
 	 * @param valueFrom point from which existing register value should
 	 * be read from program context.
 	 * @param overwrite this method will take not action and return false if 
-	 * this parameter is false and and a context value has previously been set,
+	 * this parameter is false and a context value has previously been set,
 	 * otherwise an attempt will be made to overwrite the current value state.
 	 * @return true if value was set, otherwise false.
 	 */
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/rust/demangler/RustDemanglerV0.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/rust/demangler/RustDemanglerV0.java
index bfad6d6c6a..466d5f1230 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/rust/demangler/RustDemanglerV0.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/analysis/rust/demangler/RustDemanglerV0.java
@@ -890,7 +890,7 @@ class RustType implements SymbolNode {
 }
 
 /**
- * Parses and represents a a rust symbol const node
+ * Parses and represents a rust symbol const node
  */
 class RustConst implements SymbolNode {
 	String name;
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/codebrowser/LayeredColorModel.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/codebrowser/LayeredColorModel.java
index c9735ee369..9a124e350d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/codebrowser/LayeredColorModel.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/codebrowser/LayeredColorModel.java
@@ -25,7 +25,7 @@ import ghidra.util.ColorUtils;
 /**
  * Class for blending two {@link ListingBackgroundColorModel}s.  If neither model has a color
  * different from its default, then the primary's color is returned.  If only one model
- * has a color different from its default, that that color is returned.  If they both have
+ * has a color different from its default, that color is returned.  If they both have
  * colors different, the color returned is a blend of the two colors.
  */
 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/CompEditorModel.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/CompEditorModel.java
index cdb293ddef..3bd8e62e48 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/CompEditorModel.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/compositeeditor/CompEditorModel.java
@@ -725,7 +725,7 @@ public abstract class CompEditorModel extends CompositeEditorModel {
 	 * @throws InvalidDataTypeException if the structure being edited is part
 	 *         of the data type being inserted
 	 * @throws InsufficientBytesException if there aren't enough bytes in the specified range
-	 * @throws CancelledException the the work is cancelled
+	 * @throws CancelledException the work is cancelled
 	 */
 	protected abstract boolean replaceRange(int startRowIndex, int endRowIndex, DataType datatype,
 			int length, TaskMonitor monitor)
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/actions/CreateEnumFromSelectionAction.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/actions/CreateEnumFromSelectionAction.java
index 5fc6515b55..1777b2c919 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/actions/CreateEnumFromSelectionAction.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/actions/CreateEnumFromSelectionAction.java
@@ -77,7 +77,7 @@ public class CreateEnumFromSelectionAction extends DockingAction {
 	}
 
 	private void selectNewEnum(GTree gTree, String parentName, String name) {
-		// Select new node in tree; run later to give the tree a chance to add the the new node
+		// Select new node in tree; run later to give the tree a chance to add the new node
 		Swing.runLater(() -> {
 			GTreeNode rootNode = gTree.getViewRoot();
 			gTree.setSelectedNodeByNamePath(
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/actions/associate/SyncAction.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/actions/associate/SyncAction.java
index 89cc9ffe4a..66bed74adf 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/actions/associate/SyncAction.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/actions/associate/SyncAction.java
@@ -304,7 +304,7 @@ public abstract class SyncAction extends DockingAction implements Comparable<Syn
 	}
 
 	/**
-	 * Checks if datatype is really out of sync or only is is marked as out of sync but really
+	 * Checks if datatype is really out of sync or only is marked as out of sync but really
 	 * is not changed.  If datatypes are really in sync, updates the time marks to indicate that
 	 * they are in sync;
 	 * @param outOfSynchDataTypes list of all datatypes that are marked as "out of sync".
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/editor/DataTypeEditorManager.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/editor/DataTypeEditorManager.java
index e5693e84b2..c434fbc952 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/editor/DataTypeEditorManager.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/datamgr/editor/DataTypeEditorManager.java
@@ -123,7 +123,7 @@ public class DataTypeEditorManager implements EditorListener {
 	}
 
 	/**
-	 * Displays a data type editor for editing the given Structure. If the structure is is already 
+	 * Displays a data type editor for editing the given Structure. If the structure is already
 	 * being edited then it is brought to the front. Otherwise, a new editor is created and 
 	 * displayed.
 	 * @param structure the structure.
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/AbstractProgramNameSwitchingAction.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/AbstractProgramNameSwitchingAction.java
index 64a990cf03..c67113323c 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/AbstractProgramNameSwitchingAction.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/AbstractProgramNameSwitchingAction.java
@@ -21,7 +21,7 @@ import ghidra.app.context.ProgramActionContext;
 import ghidra.program.model.listing.Program;
 
 /**
- * Abstract base class for program actions that change their menu name depending on the the active
+ * Abstract base class for program actions that change their menu name depending on the active
  * program. Note that actions that derived from this class only work on programs that are
  * globally managed by Ghidra and not opened and managed by individual plugins. If the action 
  * context should happen to contain a non-global managed program, the tool's concept of the 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/ProgramLocator.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/ProgramLocator.java
index 330f749823..b8664b37ce 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/ProgramLocator.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/ProgramLocator.java
@@ -56,7 +56,7 @@ public class ProgramLocator {
 	}
 
 	/**
-	 * Creates a {@link DomainFile} based based ProgramLocator for the current version of a Program.
+	 * Creates a {@link DomainFile} based ProgramLocator for the current version of a Program.
 	 * @param domainFile the DomainFile for a program
 	 */
 	public ProgramLocator(DomainFile domainFile) {
@@ -64,7 +64,7 @@ public class ProgramLocator {
 	}
 
 	/**
-	 * Creates a {@link DomainFile} based based ProgramLocator for a specific Program version.
+	 * Creates a {@link DomainFile} based ProgramLocator for a specific Program version.
 	 * @param domainFile the DomainFile for a program
 	 * @param version the specific version of the program
 	 */
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/programtree/ProgramTreeActionManager.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/programtree/ProgramTreeActionManager.java
index 6f8f1f53a7..77ddd5fe6c 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/programtree/ProgramTreeActionManager.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/programtree/ProgramTreeActionManager.java
@@ -1317,7 +1317,7 @@ class ProgramTreeActionManager implements ClipboardOwner {
 	}
 
 	/**
-	 * Update the view list if the the given path is the an ancestor of any of
+	 * Update the view list if the given path is the an ancestor of any of
 	 * the paths currently in the view; remove the descendant and add the
 	 * ancestor path.
 	 *
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchmem/DecimalSearchFormat.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchmem/DecimalSearchFormat.java
index 712c1edd99..58c622df90 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchmem/DecimalSearchFormat.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchmem/DecimalSearchFormat.java
@@ -215,7 +215,7 @@ public class DecimalSearchFormat extends SearchFormat {
 	 * the start of an exponent expression (example 2.34e would become 2.34. So woudl 2.34-)
 	 * @param the string that will be parsed into a float or double
 	 * @return the parsable string
-	 * @exception NumberFormatException thrown if the the tok contains any of "dDfF".
+	 * @exception NumberFormatException thrown if the tok contains any of "dDfF".
 	 */
 	private String preProcessFloat(String tok) {
 		if ((tok.indexOf('d') >= 0) || (tok.indexOf('D') >= 0) || (tok.indexOf('F') >= 0) ||
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchmem/MemSearchDialog.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchmem/MemSearchDialog.java
index 58aafb4a0c..0f3507521d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchmem/MemSearchDialog.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchmem/MemSearchDialog.java
@@ -60,7 +60,7 @@ class MemSearchDialog extends ReusableDialogComponentProvider {
 		SearchData.createInvalidInputSearchData(ENTER_TEXT_MESSAGE);
 
 	// The fields that use this value take in user input.  If the user input large, it affects
-	// the minimum and preferred size of the the fields.  This, in turn, affects how this dialog
+	// the minimum and preferred size of the fields.  This, in turn, affects how this dialog
 	// gets packed when the Advanced button is toggled.   Without using a size restriction, this
 	// dialog's contents may move as the dialog is re-packed.
 	private static final int INPUT_FIELD_MIN_SIZE_WIDTH = 140;
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchtext/ListingDisplaySearcher.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchtext/ListingDisplaySearcher.java
index e29cbf89e2..8fc5aa61d3 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchtext/ListingDisplaySearcher.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/searchtext/ListingDisplaySearcher.java
@@ -39,14 +39,14 @@ import ghidra.util.UserSearchUtils;
 import ghidra.util.task.TaskMonitor;
 
 /**
- * This class attempts to search for text as it is rendered on the screen.  This in in
+ * This class attempts to search for text as it is rendered on the screen.  This is in
  * contrast to the Program Database Searcher which searches the database.  This is
  * needed because some information on the screen is rendered "on the fly" and not
  * stored in the database.  This searcher is much slower, but delivers
  * results that are in-line with what the user sees.
  * <p>
  * The search is performed in two steps.  First it uses Instruction and Data iterators to
- * find possible addresses where where information would be rendered.  Then for each of those
+ * find possible addresses where information would be rendered.  Then for each of those
  * addresses, it uses the code browsers rendering engine to produce a textual representation
  * for that address.  The textual representation also maintains information about the field
  * that generated it so that the search can be constrained to specific fields such as the
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/table/TableComponentProvider.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/table/TableComponentProvider.java
index 8b06b73aaa..73c62f91b8 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/table/TableComponentProvider.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/table/TableComponentProvider.java
@@ -138,7 +138,7 @@ public class TableComponentProvider<T> extends ComponentProviderAdapter
 
 		if (navigatable != null) {
 			// Only allow global actions if we are derived from the connect/primary navigatable.  
-			// This allows the the primary navigatable to process key events without the user having
+			// This allows the primary navigatable to process key events without the user having
 			// to focus first focus the primary navigatable.
 			table.setActionsEnabled(navigatable.isConnected());
 			navigatable.addNavigatableListener(this);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/runtimeinfo/RuntimeInfoProvider.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/runtimeinfo/RuntimeInfoProvider.java
index 47ea398315..5f89570a20 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/runtimeinfo/RuntimeInfoProvider.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/runtimeinfo/RuntimeInfoProvider.java
@@ -119,7 +119,7 @@ class RuntimeInfoProvider extends ReusableDialogComponentProvider {
 	/**
 	 * Adds an "application layout" panel to the tabbed pane.
 	 * <p>
-	 * The goal of this panel is to display information information about the application such as
+	 * The goal of this panel is to display information about the application such as
 	 * what directories it is using on disk, what its PID is, etc.
 	 */
 	private void addApplicationLayout() {
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/script/GhidraScript.java b/Ghidra/Features/Base/src/main/java/ghidra/app/script/GhidraScript.java
index efc8d7a058..e05e1b07c3 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/script/GhidraScript.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/script/GhidraScript.java
@@ -2034,7 +2034,7 @@ public abstract class GhidraScript extends FlatProgramAPI {
 	 * </ol>
 	 *
 	 * @param title the title of the dialog (in GUI mode) or the first part of the variable name
-	 * 			(in headless mode or when using using .properties file)
+	 * 			(in headless mode or when using .properties file)
 	 * @param approveButtonText the approve button text (in GUI mode - typically, this would
 	 * 		  	be "Open" or "Save") or the second part of the variable name (in headless mode
 	 * 			or when using .properties file)
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/script/ScriptMessage.java b/Ghidra/Features/Base/src/main/java/ghidra/app/script/ScriptMessage.java
index b1f3619370..8c9a2c81d9 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/script/ScriptMessage.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/script/ScriptMessage.java
@@ -19,7 +19,7 @@ import org.apache.logging.log4j.message.Message;
 
 /**
  * A simple {@link Message} implementation that allows us to use the filtering capability
- * of log4j.  This class has a formatted and unformatted message.  log4j writes the the formatted
+ * of log4j.  This class has a formatted and unformatted message.  log4j writes the formatted
  * message out.  Our formatted message is the original message given to us.   We use the
  * unformatted message, in conjunction with a regex filter to allow for filtering such that
  * the script log file only has script messages.
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/services/MarkerDescriptor.java b/Ghidra/Features/Base/src/main/java/ghidra/app/services/MarkerDescriptor.java
index 0dd46872fa..99165db126 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/services/MarkerDescriptor.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/services/MarkerDescriptor.java
@@ -27,7 +27,7 @@ import ghidra.program.util.ProgramLocation;
 public abstract class MarkerDescriptor {
 
 	/**
-	 * Called when the navigation bar to the right of the window is clicked to allow the the 
+	 * Called when the navigation bar to the right of the window is clicked to allow the
 	 * creator of a Marker an opportunity to provide a more specific ProgramLocation for
 	 * navigation. If null is specified, the client will navigate to the corresponding address.
 	 * @param loc the marker location
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/services/MarkerSet.java b/Ghidra/Features/Base/src/main/java/ghidra/app/services/MarkerSet.java
index 7fa114066c..52f8ae87c8 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/services/MarkerSet.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/services/MarkerSet.java
@@ -45,7 +45,7 @@ public interface MarkerSet extends Comparable<MarkerSet> {
 	public void add(AddressRange range);
 
 	/**
-	 * Sets the AddressSetCollection to be used for this this marker set.
+	 * Sets the AddressSetCollection to be used for this marker set.
 	 *  
 	 * <p><strong>Warning!</strong> 
 	 * Using this method will cause this MarkerSet to directly use the given AddressSetCollection.
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFLocationListHeader.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFLocationListHeader.java
index b14969d9d5..b89db3a193 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFLocationListHeader.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFLocationListHeader.java
@@ -33,7 +33,7 @@ public class DWARFLocationListHeader extends DWARFIndirectTableHeader {
 		// address_size : 1 byte
 		// segment_selector_size : 1 byte
 		// offset entry count: 4 bytes
-		// offsets : array of elements are are dwarf_format_int sized
+		// offsets : array of elements are dwarf_format_int sized
 
 		long startOffset = reader.getPointerIndex();
 		DWARFLengthValue lengthInfo = DWARFLengthValue.read(reader, defaultIntSize);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFRangeListHeader.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFRangeListHeader.java
index e7a6b7c971..008bafa61c 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFRangeListHeader.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFRangeListHeader.java
@@ -33,7 +33,7 @@ public class DWARFRangeListHeader extends DWARFIndirectTableHeader {
 		// address_size : 1 byte
 		// segment_selector_size : 1 byte
 		// offset entry count: 4 bytes
-		// offsets : array of elements are are dwarf_format_int sized
+		// offsets : array of elements are dwarf_format_int sized
 
 		long startOffset = reader.getPointerIndex();
 		DWARFLengthValue lengthInfo = DWARFLengthValue.read(reader, defaultIntSize);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFStringOffsetTableHeader.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFStringOffsetTableHeader.java
index 427019aee8..bfc456107b 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFStringOffsetTableHeader.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFStringOffsetTableHeader.java
@@ -45,7 +45,7 @@ public class DWARFStringOffsetTableHeader extends DWARFIndirectTableHeader {
 		// length : dwarf_length
 		// version : 2 bytes
 		// padding : 2 bytes
-		// offsets : array of elements are are dwarf_format_int sized
+		// offsets : array of elements are dwarf_format_int sized
 
 		long startOffset = reader.getPointerIndex();
 		DWARFLengthValue lengthInfo = DWARFLengthValue.read(reader, defaultIntSize);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFUtil.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFUtil.java
index 310a74e11d..750b0b587f 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFUtil.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/DWARFUtil.java
@@ -57,7 +57,7 @@ public class DWARFUtil {
 	 * Returns the field name of a final static variable in class <code>clazz</code>
 	 * which holds a specific value.
 	 * <p>
-	 * Can be thought of as an enum numeric value to to name lookup.
+	 * Can be thought of as an enum numeric value to name lookup.
 	 * <p>
 	 * @param clazz
 	 * @param value
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/NameDeduper.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/NameDeduper.java
index 164adfa50d..8547d69338 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/NameDeduper.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/NameDeduper.java
@@ -40,7 +40,7 @@ public class NameDeduper {
 	}
 
 	/**
-	 * Add names to the the de-duper that have already been used.
+	 * Add names to the de-duper that have already been used.
 	 *  
 	 * @param alreadyUsedNames names already used
 	 */
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/expression/DWARFExpressionEvaluator.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/expression/DWARFExpressionEvaluator.java
index f1bfe59582..279f628748 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/expression/DWARFExpressionEvaluator.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/dwarf/expression/DWARFExpressionEvaluator.java
@@ -249,7 +249,7 @@ public class DWARFExpressionEvaluator {
 			// Retrieve value held in register X and add offset from operand and push result on stack.
 			// Fake it using zero as register value.
 			// Mainly only useful if offset is zero or if non-zero the register happens to
-			// be the the stack pointer.
+			// be the stack pointer.
 			long offset = currentOp.getOperandValue(0);
 			push(0 /*fake register value */ + offset);
 			lastRegister = currentOp.getRelativeOpCodeOffset(DW_OP_breg0);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfLoadHelper.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfLoadHelper.java
index aaef83bf54..794798cce8 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfLoadHelper.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfLoadHelper.java
@@ -224,7 +224,7 @@ public interface ElfLoadHelper {
 	 * performed during the ELF import processing.  A relocation type of 0 and a status of 
 	 * {@link Status#APPLIED_OTHER} will be applied to the relocation entry.  
 	 * NOTE: The number of recorded original FileBytes currently ignores the specified length.
-	 * However, the length is still used to verify that that the intended modification region
+	 * However, the length is still used to verify that the intended modification region
 	 * dose not intersect another relocation.
 	 * @param address relocation address
 	 * @param length number of bytes affected
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfRelocation.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfRelocation.java
index 9dcddf8ee6..597b41d82d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfRelocation.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/elf/ElfRelocation.java
@@ -96,7 +96,7 @@ public class ElfRelocation implements StructConverter {
 	 * @param reader binary reader positioned at start of relocation entry.
 	 * @param elfHeader ELF header
 	 * @param relocationIndex index of entry in relocation table
-	 * @param withAddend true if if RELA entry with addend, else false
+	 * @param withAddend true if RELA entry with addend, else false
 	 * @return ELF relocation object
 	 * @throws IOException if an IO or parse error occurs
 	 */
@@ -113,7 +113,7 @@ public class ElfRelocation implements StructConverter {
 	 * relocation entry 
 	 * @param elfHeader ELF header
 	 * @param relocationIndex index of entry in relocation table
-	 * @param withAddend true if if RELA entry with addend, else false
+	 * @param withAddend true if RELA entry with addend, else false
 	 * @param r_offset The offset for the entry
 	 * @param r_info The info value for the entry
 	 * @param r_addend The signed-addend for the entry (32-bit addends should be signed-extended to 64-bits)
@@ -172,7 +172,7 @@ public class ElfRelocation implements StructConverter {
 	 * a representative instance will be generated with all fields set to 0.
 	 * @param elfHeader ELF header
 	 * @param relocationTableIndex index of relocation within relocation table
-	 * @param withAddend true if if RELA entry with addend, else false
+	 * @param withAddend true if RELA entry with addend, else false
 	 * @throws IOException if an IO or parse error occurs
 	 */
 	protected void initElfRelocation(BinaryReader reader, ElfHeader elfHeader,
@@ -189,7 +189,7 @@ public class ElfRelocation implements StructConverter {
 	 * Initialize ELF relocation entry using data provided via the parameters.
 	 * @param elfHeader ELF header
 	 * @param relocationTableIndex index of relocation within relocation table
-	 * @param withAddend true if if RELA entry with addend, else false
+	 * @param withAddend true if RELA entry with addend, else false
 	 * @param offset The offset for the entry (r_offset)
 	 * @param info The info value for the entry (r_info)
 	 * @param addend The signed-addend (r_addend) for the entry (32-bit addends should 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/golang/rtti/types/GoType.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/golang/rtti/types/GoType.java
index e7836716cc..72307fba8d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/golang/rtti/types/GoType.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/golang/rtti/types/GoType.java
@@ -344,7 +344,7 @@ public abstract class GoType implements StructureMarkup<GoType> {
 	 * referenced by the derived type.
 	 *  
 	 * @param discoveredTypes set of already iterated types
-	 * @return boolean boolean flag, if false the type has already been discovered, if true
+	 * @return boolean flag, if false the type has already been discovered, if true
 	 * the type was encountered for the first time 
 	 * @throws IOException if error reading type info
 	 */
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/golang/structmapping/FieldMapping.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/golang/structmapping/FieldMapping.java
index bb8ee0f9e2..632d0b89db 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/golang/structmapping/FieldMapping.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/golang/structmapping/FieldMapping.java
@@ -69,7 +69,7 @@ public @interface FieldMapping {
 	 * {@link DataTypeMapperContext context}.
 	 * <p>
 	 * For example, a version number could be used to allow some optional fields to be skipped
-	 * depending on the the concrete {@link DataTypeMapper}'s information during structure
+	 * depending on the concrete {@link DataTypeMapper}'s information during structure
 	 * mapping registration.
 	 * <p>
 	 * Similar to {@link #optional()}
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/commands/LoadCommandTypes.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/commands/LoadCommandTypes.java
index f17e59f677..4024899901 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/commands/LoadCommandTypes.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/commands/LoadCommandTypes.java
@@ -28,7 +28,7 @@ public final class LoadCommandTypes {
 	 * After MacOS X 10.1 when a new load command is added that is required to be
 	 * understood by the dynamic linker for the image to execute properly the
 	 * LC_REQ_DYLD bit will be or'ed into the load command constant.  If the dynamic
-	 * linker sees such a load command it it does not understand will issue a
+	 * linker sees such a load command it does not understand will issue a
 	 * "unknown load command required for execution" error and refuse to use the
 	 * image.  Other load commands without this bit that are not understood will
 	 * simply be ignored.
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheAccelerateInfo.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheAccelerateInfo.java
index ea97880e88..0803ec4d8e 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheAccelerateInfo.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheAccelerateInfo.java
@@ -167,7 +167,7 @@ public class DyldCacheAccelerateInfo implements StructConverter {
 
 	private void parseImageInfoExtra(Program program, Address accelerateInfoAddr, MessageLog log,
 			TaskMonitor monitor) throws CancelledException {
-		monitor.setMessage("Parsing DYLD image image info extras...");
+		monitor.setMessage("Parsing DYLD image info extras...");
 		monitor.initialize(imageExtrasCount);
 		reader.setPointerIndex(imagesExtrasOffset);
 		try {
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheHeader.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheHeader.java
index 41812a6a49..464200b3c2 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheHeader.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheHeader.java
@@ -603,7 +603,7 @@ public class DyldCacheHeader implements StructConverter {
 	/**
 	 * Gets the {@link DyldCacheLocalSymbolsInfo}.
 	 * 
-	 * @return The {@link DyldCacheLocalSymbolsInfo}.  Could be be null if it didn't parse. 
+	 * @return The {@link DyldCacheLocalSymbolsInfo}.  Could be null if it didn't parse.
 	 */
 	public DyldCacheLocalSymbolsInfo getLocalSymbolsInfo() {
 		return localSymbolsInfo;
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheSlideInfoCommon.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheSlideInfoCommon.java
index 13c06cd9b6..0d7c436170 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheSlideInfoCommon.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/DyldCacheSlideInfoCommon.java
@@ -35,7 +35,7 @@ import ghidra.util.task.TaskMonitor;
 
 /**
  * Class for representing the common components of the various dyld_cache_slide_info structures.
- * The intent is for the the full dyld_cache_slide_info structures to extend this and add their
+ * The intent is for the full dyld_cache_slide_info structures to extend this and add their
  * specific parts.
  * 
  * @see <a href="https://github.com/apple-oss-distributions/dyld/blob/main/cache-builder/dyld_cache_format.h">dyld_cache_format.h</a> 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/LibObjcOptimization.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/LibObjcOptimization.java
index 6d02f639a1..6cda361c1f 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/LibObjcOptimization.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/macho/dyld/LibObjcOptimization.java
@@ -114,7 +114,7 @@ public class LibObjcOptimization implements StructConverter {
 	}
 
 	/**
-	 * Marks up up this structure in memory
+	 * Marks up this structure in memory
 	 * 
 	 * @param program The {@link Program}
 	 * @param space The {@link AddressSpace}
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/exporter/ReferenceLineDispenser.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/exporter/ReferenceLineDispenser.java
index c44f3fe5fd..1bd40f3c4d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/exporter/ReferenceLineDispenser.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/exporter/ReferenceLineDispenser.java
@@ -191,7 +191,7 @@ class ReferenceLineDispenser extends AbstractLineDispenser {
 				}
 			}
 			//if we already appended a ref the line
-			//and we are are about to append one more,
+			//and we are about to append one more,
 			//then we need the delim
 			if (refsInCurrLine > 0) {
 				buf.append(XREFS_DELIM);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/importer/LibrarySearchPathManager.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/importer/LibrarySearchPathManager.java
index c3506c3178..a7f0b60f21 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/importer/LibrarySearchPathManager.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/importer/LibrarySearchPathManager.java
@@ -113,7 +113,7 @@ public class LibrarySearchPathManager {
 	}
 
 	/**
-	 * Adds the specified library search path path to the end of the path search list
+	 * Adds the specified library search path to the end of the path search list
 	 * 
 	 * @param path the library search path to add
 	 * @return true if the path was appended, false if the path was a duplicate
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/AbstractProgramLoader.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/AbstractProgramLoader.java
index 28e214b98a..5f33eef553 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/AbstractProgramLoader.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/AbstractProgramLoader.java
@@ -378,7 +378,7 @@ public abstract class AbstractProgramLoader implements Loader {
 			return fsrl.getName();
 		}
 
-		// If the ByteProvider dosn't have have an FSRL, use the given domainFileName
+		// If the ByteProvider dosn't have an FSRL, use the given domainFileName
 		return domainFileName;
 	}
 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/LoadResults.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/LoadResults.java
index ff8b851829..8a1586bc7d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/LoadResults.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/LoadResults.java
@@ -53,7 +53,7 @@ public class LoadResults<T extends DomainObject> implements Iterable<Loaded<T>>
 	}
 	
 	/**
-	 * Creates a a new {@link LoadResults} that contains a new {@link Loaded} 
+	 * Creates a new {@link LoadResults} that contains a new {@link Loaded}
 	 * {@link DomainObject} created from the given parameters.  This new {@link Loaded} 
 	 * {@link DomainObject} is assumed to be the {@link #getPrimary() primary} {@link Loaded} 
 	 * {@link DomainObject}.
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/PeLoader.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/PeLoader.java
index 2c3436874e..e1346403ee 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/PeLoader.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/opinion/PeLoader.java
@@ -840,7 +840,7 @@ public class PeLoader extends AbstractPeDebugLoader {
 	private Address getILEntryPoint(OptionalHeader optionalHeader) {
 		// Check to see if this binary has a COMDescriptorDataDirectory in it. If so,
 		// it might be a .NET binary, and if it is and only has a managed code entry point
-		// the value at entry is actually a table index and and row index that we parse in
+		// the value at entry is actually a table index and row index that we parse in
 		// the ImageCor20Header class. Use that to create the entry label instead later.
 
 		DataDirectory[] dataDirectories = optionalHeader.getDataDirectories();
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/BrowserCodeUnitFormat.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/BrowserCodeUnitFormat.java
index 351308668c..b9e21c689c 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/BrowserCodeUnitFormat.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/BrowserCodeUnitFormat.java
@@ -69,7 +69,7 @@ public class BrowserCodeUnitFormat extends CodeUnitFormat {
 
 	/**
 	 * Add a change listener to the underlying format options.  When a format change
-	 * occurs the listener may wish to trigger a refresh of of any formatted code units.
+	 * occurs the listener may wish to trigger a refresh of any formatted code units.
 	 * @param listener change listener
 	 */
 	public void addChangeListener(ChangeListener listener) {
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/BytesFieldFactory.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/BytesFieldFactory.java
index d29daa81f2..a1e6c140c1 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/BytesFieldFactory.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/BytesFieldFactory.java
@@ -350,7 +350,7 @@ public class BytesFieldFactory extends FieldFactory {
 	}
 
 	/**
-	 * Computes how many bytes the the given column position represents. Normally this is just the
+	 * Computes how many bytes the given column position represents. Normally this is just the
 	 * column position / 2 (since each byte consists of two chars).  There is a special case when
 	 * the col position is just past the last char of the token.  In this case, we want to return
 	 * the number of bytes in a token - 1;
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/FunctionTagFieldFactory.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/FunctionTagFieldFactory.java
index 6e3b3066d7..1a6aee9674 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/FunctionTagFieldFactory.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/FunctionTagFieldFactory.java
@@ -38,7 +38,7 @@ import ghidra.program.util.ProgramLocation;
 
 /**
   *  Generates a text label that lists the function tags for each {@link Function}. The
-  *  label will will appear as part of the FUNCTION group in the field map.
+  *  label will appear as part of the FUNCTION group in the field map.
   */
 public class FunctionTagFieldFactory extends FieldFactory {
 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/MemoryBlockStartFieldFactory.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/MemoryBlockStartFieldFactory.java
index 457a6082be..afd3d827c6 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/MemoryBlockStartFieldFactory.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/field/MemoryBlockStartFieldFactory.java
@@ -36,7 +36,7 @@ import ghidra.program.util.ProgramLocation;
 
 /**
   *  Generates a text label on each {@link CodeUnit} that marks the start of a memory block. The
-  *  label will will appear as part of the PLATE group in the field map.
+  *  label will appear as part of the PLATE group in the field map.
   */
 public class MemoryBlockStartFieldFactory extends FieldFactory {
 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/listingpanel/ProgramBigListingModel.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/listingpanel/ProgramBigListingModel.java
index b533a952b7..e7d0aa345a 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/listingpanel/ProgramBigListingModel.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/listingpanel/ProgramBigListingModel.java
@@ -87,7 +87,7 @@ public class ProgramBigListingModel implements ListingModel, FormatModelListener
 			formatModelChanged(null);
 		}
 
-		// There are quite a few options that affect the display of the the layouts.  Flush
+		// There are quite a few options that affect the display of the layouts.  Flush
 		// the cache on any change, as it is simpler than tracking individual options.
 		layoutCache.clear();
 	}
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/multilisting/MultiListingLayoutModel.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/multilisting/MultiListingLayoutModel.java
index 52982ac989..26f2369a9a 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/multilisting/MultiListingLayoutModel.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/multilisting/MultiListingLayoutModel.java
@@ -78,7 +78,7 @@ public class MultiListingLayoutModel implements ListingModelListener, FormatMode
 	}
 
 	/**
-	 * Returns the the ListingLayoutModel for the i'th program.
+	 * Returns the ListingLayoutModel for the i'th program.
 	 * @param index the index of program for which to return a listing model
 	 */
 	public ListingModel getAlignedModel(int index) {
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/util/AddressIndexMap.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/util/AddressIndexMap.java
index 7c8803def9..bbf390d7a7 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/util/AddressIndexMap.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/viewer/util/AddressIndexMap.java
@@ -207,7 +207,7 @@ public class AddressIndexMap {
 	 * Returns the index for the given address.  If the address is not mapped, the result is
 	 * defined as follows:
 	 *    if the address is less than the smallest address in the map, then null is returned
-	 *    if the address is greater the the largest address in the map, then a value one bigger than
+	 *    if the address is greater the largest address in the map, then a value one bigger than
 	 *         the index of the largest address in the map.
 	 *    if the address is in a "gap", then the index of the next largest address that is in the
 	 *    		map is returned.
@@ -299,10 +299,10 @@ public class AddressIndexMap {
 	}
 
 	/**
-	 * Returns the the maximum address for the range containing the given address.
+	 * Returns the maximum address for the range containing the given address.
 	 *
 	 * @param addr the address to find its containing range's max address.
-	 * @return  the the maximum address for the range containing the given address.
+	 * @return  the maximum address for the range containing the given address.
 	 */
 	public BigInteger getMaxIndex(Address addr) {
 		int rangeIndex = Arrays.binarySearch(addressList, addr);
@@ -317,10 +317,10 @@ public class AddressIndexMap {
 	}
 
 	/**
-	 * Returns the the minimum address for the range containing the given address.
+	 * Returns the minimum address for the range containing the given address.
 	 *
 	 * @param addr the address to find its containing range's min address.
-	 * @return  the the minimum address for the range containing the given address.
+	 * @return  the minimum address for the range containing the given address.
 	 */
 	public BigInteger getMinIndex(Address addr) {
 		int rangeIndex = Arrays.binarySearch(addressList, addr);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/base/project/GhidraProject.java b/Ghidra/Features/Base/src/main/java/ghidra/base/project/GhidraProject.java
index 8f125fbe2c..bc61fff748 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/base/project/GhidraProject.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/base/project/GhidraProject.java
@@ -128,7 +128,7 @@ public class GhidraProject {
 	 *
 	 * @param projectDirPath the directory path to contain the new Ghidra project.
 	 * @param projectName the name of the project to be created.
-	 * @param temporary if true, deletes the the project when it is closed - useful for testing.
+	 * @param temporary if true, deletes the project when it is closed - useful for testing.
 	 * @return an open ghidra project.
 	 * @throws IOException if there was a problem accessing the project
 	 */
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/features/base/codecompare/model/FunctionComparisonModel.java b/Ghidra/Features/Base/src/main/java/ghidra/features/base/codecompare/model/FunctionComparisonModel.java
index f3a2af220e..ced77b6ae8 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/features/base/codecompare/model/FunctionComparisonModel.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/features/base/codecompare/model/FunctionComparisonModel.java
@@ -31,11 +31,11 @@ import ghidra.util.datastruct.Duo.Side;
  * concept of a set of function that can be selected for each side of the comparison. It also 
  * maintains the selected function for each side. The default model simply has a single set
  * of functions that can be selected for either side of the comparison. The model supports the
- * concept of different sets of functions for each and even the idea the the active function for
+ * concept of different sets of functions for each and even the idea the active function for
  * one side can determine the set of functions for the other side. See 
  * {@link MatchedFunctionComparisonModel}.
  * <p>
- * This model is intended to be used by the the {@link FunctionComparisonService} to generate
+ * This model is intended to be used by the {@link FunctionComparisonService} to generate
  * a function comparison display window. 
  * <p>
  * Note: Subscribers may register to be informed of changes to this model via the
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/features/base/values/LanguageValue.java b/Ghidra/Features/Base/src/main/java/ghidra/features/base/values/LanguageValue.java
index cb1a337938..b7230e0c5b 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/features/base/values/LanguageValue.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/features/base/values/LanguageValue.java
@@ -30,7 +30,7 @@ import ghidra.program.util.DefaultLanguageService;
 /**
  * Value class for LanguageCompilerSpecPair types. The component for this class is a 
  * TextField with a browse button for bringing up a language/compiler chooser. It supports
- * the concept of no value when the text field is empty. If it is not empty, the the contents
+ * the concept of no value when the text field is empty. If it is not empty, the contents
  * must be one of the known valid language/compiler spec pairs.
  * <P>
  * This class and other subclasses of {@link AbstractValue} are part of a subsystem for easily
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/formats/gfilesystem/crypto/CryptoSession.java b/Ghidra/Features/Base/src/main/java/ghidra/formats/gfilesystem/crypto/CryptoSession.java
index 2e33c7cd88..d264ffc336 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/formats/gfilesystem/crypto/CryptoSession.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/formats/gfilesystem/crypto/CryptoSession.java
@@ -28,7 +28,7 @@ import ghidra.framework.generic.auth.Password;
  * Typically used to query passwords and to add known good passwords
  * to caches for later re-retrieval.
  * <p>
- * Closing a CryptoSession instance does not invalidate the instance, instead is is a suggestion
+ * Closing a CryptoSession instance does not invalidate the instance, instead is a suggestion
  * that the instance should not be used for any further nested sessions.
  * <p>
  * See {@link CryptoProviders#newSession()}.
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/formats/gfilesystem/crypto/PopupGUIPasswordProvider.java b/Ghidra/Features/Base/src/main/java/ghidra/formats/gfilesystem/crypto/PopupGUIPasswordProvider.java
index cbcd5dd180..df1512d94e 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/formats/gfilesystem/crypto/PopupGUIPasswordProvider.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/formats/gfilesystem/crypto/PopupGUIPasswordProvider.java
@@ -25,7 +25,7 @@ import ghidra.formats.gfilesystem.crypto.PasswordDialog.RESULT_STATE;
 import ghidra.framework.generic.auth.Password;
 
 /**
- * Pops up up a GUI dialog prompting the user to enter a password for the specified file.
+ * Pops up a GUI dialog prompting the user to enter a password for the specified file.
  * <p>
  * The dialog is presented to the user when the iterator's hasNext() is called.
  * <p>
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/framework/main/InfoPanel.java b/Ghidra/Features/Base/src/main/java/ghidra/framework/main/InfoPanel.java
index 0578913623..9c22122abf 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/framework/main/InfoPanel.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/framework/main/InfoPanel.java
@@ -228,7 +228,7 @@ class InfoPanel extends JPanel {
 	}
 
 	/**
-	 * Read the version information from the the resource file.
+	 * Read the version information from the resource file.
 	 */
 	private void getAboutInfo() {
 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/plugins/importer/batch/BatchInfo.java b/Ghidra/Features/Base/src/main/java/ghidra/plugins/importer/batch/BatchInfo.java
index 5b3d438c72..9da7e47537 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/plugins/importer/batch/BatchInfo.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/plugins/importer/batch/BatchInfo.java
@@ -177,7 +177,7 @@ public class BatchInfo {
 	 * <p>
 	 * @param fsrl {@link FSRL} of the file to add.
 	 * @param taskMonitor {@link TaskMonitor} to watch and update with progress.
-	 * @return boolean true if something in the the file produced something to import.
+	 * @return boolean true if something in the file produced something to import.
 	 * @throws IOException if io error when reading files.
 	 * @throws CancelledException if user cancels.
 	 */
@@ -210,7 +210,7 @@ public class BatchInfo {
 	 * <p>
 	 * @param fsrl {@link FSRL} of the file to probe and process
 	 * @param taskMonitor {@link TaskMonitor} to watch and update.
-	 * @return boolean true if something in the the file produced something to import.
+	 * @return boolean true if something in the file produced something to import.
 	 * @throws IOException if io error when reading files.
 	 * @throws CancelledException if user cancels.
 	 */
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/program/flatapi/FlatProgramAPI.java b/Ghidra/Features/Base/src/main/java/ghidra/program/flatapi/FlatProgramAPI.java
index d10b379b5a..b480ebe695 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/program/flatapi/FlatProgramAPI.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/program/flatapi/FlatProgramAPI.java
@@ -354,7 +354,7 @@ public class FlatProgramAPI {
 	 * NOTE: if more than block exists with the same name, the first
 	 * block with that name will be returned.
 	 * @param name the name of the requested block
-	 * @return the the memory block with the specified name
+	 * @return the memory block with the specified name
 	 */
 	public final MemoryBlock getMemoryBlock(String name) {
 		return currentProgram.getMemory().getBlock(name);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/program/util/ContextEvaluator.java b/Ghidra/Features/Base/src/main/java/ghidra/program/util/ContextEvaluator.java
index 3babb2d55e..7da57445bd 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/program/util/ContextEvaluator.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/program/util/ContextEvaluator.java
@@ -97,7 +97,7 @@ public interface ContextEvaluator {
 	boolean evaluateDestination(VarnodeContext context, Instruction instruction);
 
 	/**
-	 * Evaluate the the target of a return
+	 * Evaluate the target of a return
 	 * 
 	 * @param retVN varnode that is the target of a RETURN pcodeop
 	 * @param context current register context
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/program/util/GhidraProgramUtilities.java b/Ghidra/Features/Base/src/main/java/ghidra/program/util/GhidraProgramUtilities.java
index 844cd46bd0..f5c94957f0 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/program/util/GhidraProgramUtilities.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/program/util/GhidraProgramUtilities.java
@@ -26,7 +26,7 @@ public class GhidraProgramUtilities {
 
 	/**
 	 * Returns the current program for the given tool or null if no program is open.
-	 * @param tool the tool get get the current program for
+	 * @param tool the tool to get the current program for
 	 * @return the current program for the given tool or null if no program is open
 	 */
 	public static Program getCurrentProgram(PluginTool tool) {
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/program/util/ProgramMemoryUtil.java b/Ghidra/Features/Base/src/main/java/ghidra/program/util/ProgramMemoryUtil.java
index 4f501cc3cd..6d005567d6 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/program/util/ProgramMemoryUtil.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/program/util/ProgramMemoryUtil.java
@@ -424,7 +424,7 @@ public class ProgramMemoryUtil {
 	 * Direct references are only found at addresses that match the indicated alignment. 
 	 * @param program the program whose memory is to be checked.
 	 * @param alignment direct references are to only be found at the indicated alignment in memory.
-	 * @param codeUnit the code unit to to search for references to.
+	 * @param codeUnit the code unit to search for references to.
 	 * @param monitor a task monitor for progress or to allow canceling.
 	 * @return list of addresses referring directly to the toAddress.
 	 */
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/test/AbstractGhidraHeadedIntegrationTest.java b/Ghidra/Features/Base/src/main/java/ghidra/test/AbstractGhidraHeadedIntegrationTest.java
index 7c0ce4bb5a..e9ab353d47 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/test/AbstractGhidraHeadedIntegrationTest.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/test/AbstractGhidraHeadedIntegrationTest.java
@@ -187,7 +187,7 @@ public abstract class AbstractGhidraHeadedIntegrationTest
 
 	/**
 	 * Triggers a browser click at the current cursor location.  Thus, this method should be
-	 * called only after the browser location is set the the desired field.
+	 * called only after the browser location is set the desired field.
 	 *
 	 * @param codeBrowser the CodeBrowserPlugin
 	 * @param clickCount the click count
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/util/GhidraJarBuilder.java b/Ghidra/Features/Base/src/main/java/ghidra/util/GhidraJarBuilder.java
index abca54291e..4d492a7356 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/util/GhidraJarBuilder.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/util/GhidraJarBuilder.java
@@ -409,7 +409,7 @@ public class GhidraJarBuilder implements GhidraLaunchable {
 			// Special case for Log4j:
 			//
 			//  	Log4j scatters .dat files around in modules that use the log4j
-			//		plugin construct. Each one contains the plugins that that module
+			//		plugin construct. Each one contains the plugins that the module
 			//		requires. The problem is that each of these has the exact same path:
 			//
 			//		META-INF/org/apache/logging/log4j/core/config/plugins/Log4j2Plugins.dat
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/util/table/AbstractSelectionNavigationAction.java b/Ghidra/Features/Base/src/main/java/ghidra/util/table/AbstractSelectionNavigationAction.java
index 60debb86ed..43c4806b82 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/util/table/AbstractSelectionNavigationAction.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/util/table/AbstractSelectionNavigationAction.java
@@ -124,7 +124,7 @@ public abstract class AbstractSelectionNavigationAction extends ToggleDockingAct
 
 	private void initialize() {
 		// We want to load our state after we have been associated with a DockingWindowManager. 
-		// If the table is displayable, then we are are properly setup...
+		// If the table is displayable, then we are properly setup...
 		if (table.isDisplayable()) {
 			restoreState();
 			return;
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/util/table/ProgramLocationTableRowMapper.java b/Ghidra/Features/Base/src/main/java/ghidra/util/table/ProgramLocationTableRowMapper.java
index 8f35046a43..9d7a2b7deb 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/util/table/ProgramLocationTableRowMapper.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/util/table/ProgramLocationTableRowMapper.java
@@ -32,7 +32,7 @@ import docking.widgets.table.*;
  * and Addresses.  
  * <p>
  * This interface is an ExtensionPoint so that once created, they will be ingested automatically
- * by Ghidra.  Once discovered, these mappers will be used to provide dynamic columns to to 
+ * by Ghidra.  Once discovered, these mappers will be used to provide dynamic columns to
  * tables with row types that match <code>ROW_TYPE</code>.
  * <p>
  * This column is an extension of {@link TableRowMapper} that has knowledge of 
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/instructionsearch/InstructionSearchTest.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/instructionsearch/InstructionSearchTest.java
index 332c9f10a3..8489fd8a29 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/instructionsearch/InstructionSearchTest.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/instructionsearch/InstructionSearchTest.java
@@ -510,7 +510,7 @@ public class InstructionSearchTest extends AbstractGhidraHeadedIntegrationTest {
 	}
 
 	/**
-	 * Tests the the hex view button correctly switches the preview table to hex, and that
+	 * Tests the hex view button correctly switches the preview table to hex, and that
 	 * the hex is formatted correctly when masking.
 	 */
 	@Test
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/navigation/locationreferences/LocationReferencesPlugin1Test.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/navigation/locationreferences/LocationReferencesPlugin1Test.java
index 8ca842aa2f..c04f8ba67d 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/navigation/locationreferences/LocationReferencesPlugin1Test.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/navigation/locationreferences/LocationReferencesPlugin1Test.java
@@ -71,7 +71,7 @@ public class LocationReferencesPlugin1Test extends AbstractLocationReferencesTes
 		Address otherAddress = addr(0x01008014); // 0x1  ONE; this also has references
 		assertTrue(applyCmd(program, new CreateDataCmd(otherAddress, enoom)));
 
-		// this is the address will will use to search
+		// this is the address we will use to search
 		Address address = addr(0x01008019); // 0x0  ZERO		
 		assertTrue(applyCmd(program, new CreateDataCmd(address, enoom)));
 
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/navigation/locationreferences/LocationReferencesPlugin3Test.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/navigation/locationreferences/LocationReferencesPlugin3Test.java
index 6060fd1887..38f098d37e 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/navigation/locationreferences/LocationReferencesPlugin3Test.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/navigation/locationreferences/LocationReferencesPlugin3Test.java
@@ -297,7 +297,7 @@ public class LocationReferencesPlugin3Test extends AbstractLocationReferencesTes
 	public void testDyamicData_AddressField() throws Exception {
 
 		//
-		// Dynamic data types should show all references to the the outermost data, including
+		// Dynamic data types should show all references to the outermost data, including
 		// offcut.
 		//
 
@@ -336,7 +336,7 @@ public class LocationReferencesPlugin3Test extends AbstractLocationReferencesTes
 	public void testDyamicData_MnemonicField() throws Exception {
 
 		//
-		// Dynamic data types should show all references to the the outermost data, including
+		// Dynamic data types should show all references to the outermost data, including
 		// offcut.  Also, since we are searching from the mnemonic, we find all data references.
 		//
 
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/processors/ShowInstructionInfoPluginTest.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/processors/ShowInstructionInfoPluginTest.java
index f457bb47af..0661119cfb 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/processors/ShowInstructionInfoPluginTest.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/processors/ShowInstructionInfoPluginTest.java
@@ -294,7 +294,7 @@ public class ShowInstructionInfoPluginTest extends AbstractGhidraHeadedIntegrati
 	@Test
 	public void testUpdates() throws Exception {
 		// display a provider, clear the instruction, 
-		// make sure the the provider is cleared, etc. 
+		// make sure the provider is cleared, etc.
 
 		changeLocationToAddress("01000000");
 
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/programtree/ProgramTreePlugin2Test.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/programtree/ProgramTreePlugin2Test.java
index 5ac7ca0490..02e8c4b1d3 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/programtree/ProgramTreePlugin2Test.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/programtree/ProgramTreePlugin2Test.java
@@ -680,7 +680,7 @@ public class ProgramTreePlugin2Test extends AbstractProgramTreePluginTest {
 	public void testCutFolderCollapsed2() throws Exception {
 		// cut folder is collapsed,
 		// destination folder is collapsed.
-		// Paste the the folder; the destination folder
+		// Paste the folder; the destination folder
 		// remains collapsed
 		ProgramNode stringsNode = root.getChild("Strings");
 		visitNode(stringsNode);
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/searchtext/SearchTextPlugin1Test.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/searchtext/SearchTextPlugin1Test.java
index e83ac866c7..5dbbd39e1f 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/searchtext/SearchTextPlugin1Test.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/searchtext/SearchTextPlugin1Test.java
@@ -242,7 +242,7 @@ public class SearchTextPlugin1Test extends AbstractGhidraHeadedIntegrationTest {
 
 	@Test
 	public void testSearchStringEntry() throws Exception {
-		// verify that a string string must be entered
+		// verify that a string must be entered
 
 		SearchTextDialog dialog = getDialog();
 
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/symboltree/SymbolTreePlugin1Test.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/symboltree/SymbolTreePlugin1Test.java
index 37c70d4c93..44d5e9446e 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/symboltree/SymbolTreePlugin1Test.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/plugin/core/symboltree/SymbolTreePlugin1Test.java
@@ -753,7 +753,7 @@ public class SymbolTreePlugin1Test extends AbstractGhidraHeadedIntegrationTest {
 
 		//
 		// This tests a particular edge case where adding a function inside of a class would cause
-		// the tree to throw an exception to to an improper child node lookup.  This test was
+		// the tree to throw an exception to an improper child node lookup.  This test was
 		// triggering the exception before the fix.
 		//
 		showSymbolTree();
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/script/GhidraScriptAskMethodsTest.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/script/GhidraScriptAskMethodsTest.java
index 157d54eb22..5c6b62e797 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/script/GhidraScriptAskMethodsTest.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/script/GhidraScriptAskMethodsTest.java
@@ -713,22 +713,22 @@ public class GhidraScriptAskMethodsTest extends AbstractGhidraHeadedIntegrationT
 	 */
 
 	/*
-	 * No test for 'askYesNo()" because it does not use either the the last-selected value or
+	 * No test for 'askYesNo()" because it does not use either the last-selected value or
 	 * a .properties file value to pre-populate the user choice in the GUI.
 	 */
 
 	/*
-	 * No test for 'askProjectFolder()" because it does not use either the the last-selected value
+	 * No test for 'askProjectFolder()" because it does not use either the last-selected value
 	 * or a .properties file value to pre-populate the user choice in the GUI.
 	 */
 
 	/*
-	 * No test for 'askProgram()" because it does not use either the the last-selected value or
+	 * No test for 'askProgram()" because it does not use either the last-selected value or
 	 * a .properties file value to pre-populate the user choice in the GUI.
 	 */
 
 	/*
-	 * No test for 'askDomainFile()" because it does not use either the the last-selected value or
+	 * No test for 'askDomainFile()" because it does not use either the last-selected value or
 	 * a .properties file value to pre-populate the user choice in the GUI.
 	 */
 
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/util/datatype/DataTypeSelectionDialogTest.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/util/datatype/DataTypeSelectionDialogTest.java
index eab365ddce..d4585388be 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/util/datatype/DataTypeSelectionDialogTest.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/util/datatype/DataTypeSelectionDialogTest.java
@@ -595,7 +595,7 @@ public class DataTypeSelectionDialogTest extends AbstractGhidraHeadedIntegration
 		// We are trying to test that the user can type the name of a type (not pick it from the
 		// list) that exists in an open archive *that is not set on the dialog*.  The intent is
 		// that if we have to parse the text provided by the user, that we don't automatically
-		// pick one when it is an an archive that we didn't specify (like the program archive).
+		// pick one when it is an archive that we didn't specify (like the program archive).
 		//
 		// To test this, start with 3 types in a file archive: foo and a typedef to foo
 		// (foo_typedef) and a pointer to the typedef.
diff --git a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/util/viewer/field/LabelFieldFactoryTest.java b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/util/viewer/field/LabelFieldFactoryTest.java
index 1f1190781c..2ad1a1de58 100644
--- a/Ghidra/Features/Base/src/test.slow/java/ghidra/app/util/viewer/field/LabelFieldFactoryTest.java
+++ b/Ghidra/Features/Base/src/test.slow/java/ghidra/app/util/viewer/field/LabelFieldFactoryTest.java
@@ -318,7 +318,7 @@ public class LabelFieldFactoryTest extends AbstractGhidraHeadedIntegrationTest {
 	public void testOffcutStringWhenOffcutIsOnTheNullTerminatingCharacter() throws Exception {
 		//
 		// We can have a scenario where there is an offcut into a string where the offcut index
-		// is the the last byte, which is the null terminator, which we do not render
+		// is the last byte, which is the null terminator, which we do not render
 		//
 		env.close(program);
 		program = buildSegmentedProgram();
diff --git a/Ghidra/Features/Base/src/test/java/ghidra/base/project/FakeSharedProject.java b/Ghidra/Features/Base/src/test/java/ghidra/base/project/FakeSharedProject.java
index 48814c23d2..42654fabae 100644
--- a/Ghidra/Features/Base/src/test/java/ghidra/base/project/FakeSharedProject.java
+++ b/Ghidra/Features/Base/src/test/java/ghidra/base/project/FakeSharedProject.java
@@ -215,7 +215,7 @@ public class FakeSharedProject {
 	}
 
 	/**
-	 * Opens the the program by the given name.  The path can be a simple name or a relative or
+	 * Opens the program by the given name.  The path can be a simple name or a relative or
 	 * absolute path to the file within the project.
 	 * 
 	 * @param filePath the path to the file to open 
diff --git a/Ghidra/Features/Base/src/test/java/ghidra/program/database/MergeProgram.java b/Ghidra/Features/Base/src/test/java/ghidra/program/database/MergeProgram.java
index 45cc02fa11..d171ac19d4 100644
--- a/Ghidra/Features/Base/src/test/java/ghidra/program/database/MergeProgram.java
+++ b/Ghidra/Features/Base/src/test/java/ghidra/program/database/MergeProgram.java
@@ -388,7 +388,7 @@ public class MergeProgram {
 
 				}
 				catch (Exception e) {
-					throw new RuntimeException("Exception updating function function", e);
+					throw new RuntimeException("Exception updating function", e);
 				}
 			}
 		}
diff --git a/Ghidra/Features/BytePatterns/src/main/help/help/topics/FunctionBitPatternsExplorerPlugin/FunctionBitPatternsExplorerPlugin.htm b/Ghidra/Features/BytePatterns/src/main/help/help/topics/FunctionBitPatternsExplorerPlugin/FunctionBitPatternsExplorerPlugin.htm
index 4611186cd2..a48c88689a 100644
--- a/Ghidra/Features/BytePatterns/src/main/help/help/topics/FunctionBitPatternsExplorerPlugin/FunctionBitPatternsExplorerPlugin.htm
+++ b/Ghidra/Features/BytePatterns/src/main/help/help/topics/FunctionBitPatternsExplorerPlugin/FunctionBitPatternsExplorerPlugin.htm
@@ -318,7 +318,7 @@
               <BLOCKQUOTE>
                 <P>This will merge the selected sequences into one sequence. For a given bit
                 position in the merged sequence, if all selected sequences agree on that position
-                the the merge will contain that value, otherwise it will contain a dit in that
+                the merge will contain that value, otherwise it will contain a dit in that
                 position.</P>
               </BLOCKQUOTE>
 
diff --git a/Ghidra/Features/BytePatterns/src/main/java/ghidra/app/analyzers/FunctionStartFuncAnalyzer.java b/Ghidra/Features/BytePatterns/src/main/java/ghidra/app/analyzers/FunctionStartFuncAnalyzer.java
index 36ed32067e..c5f2c370ab 100644
--- a/Ghidra/Features/BytePatterns/src/main/java/ghidra/app/analyzers/FunctionStartFuncAnalyzer.java
+++ b/Ghidra/Features/BytePatterns/src/main/java/ghidra/app/analyzers/FunctionStartFuncAnalyzer.java
@@ -39,7 +39,7 @@ public class FunctionStartFuncAnalyzer extends FunctionStartAnalyzer {
 			throws CancelledException {
 
 		// check that the check function later property has been set at the functions start
-		//    before passing the cut down address set to the real search algorithm to to the correct action
+		//    before passing the cut down address set to the real search algorithm to the correct action
 		AddressSet potentialPreMatches =
 			getOrCreatePotentialMatchPropertyMap(program).getAddressSet();
 		set = set.intersect(potentialPreMatches);
diff --git a/Ghidra/Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/InstructionSequence.java b/Ghidra/Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/InstructionSequence.java
index 6b74122f09..c5cfee0f20 100644
--- a/Ghidra/Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/InstructionSequence.java
+++ b/Ghidra/Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/InstructionSequence.java
@@ -51,7 +51,7 @@ public class InstructionSequence {
 	}
 
 	/**
-	 * Returns all the the stored disassembly for an instruction sequence
+	 * Returns all the stored disassembly for an instruction sequence
 	 * @param inOrder if true, the instructions are displayed in order.  If false they are reversed.
 	 * @return the disassembly as a string
 	 */
diff --git a/Ghidra/Features/BytePatterns/src/main/java/ghidra/closedpatternmining/ProjectedSequenceInfo.java b/Ghidra/Features/BytePatterns/src/main/java/ghidra/closedpatternmining/ProjectedSequenceInfo.java
index 1c3f41311f..46045abd2e 100644
--- a/Ghidra/Features/BytePatterns/src/main/java/ghidra/closedpatternmining/ProjectedSequenceInfo.java
+++ b/Ghidra/Features/BytePatterns/src/main/java/ghidra/closedpatternmining/ProjectedSequenceInfo.java
@@ -27,7 +27,7 @@ public class ProjectedSequenceInfo {
 	/**
 	 * Create a new {@link ProjectedSequenceInfo} object 
 	 * @param sequenceIndex index of a sequence in the database
-	 * @param projectedIndex index in the sequence of the first character after the the projection prefix
+	 * @param projectedIndex index in the sequence of the first character after the projection prefix
 	 */
 	public ProjectedSequenceInfo(int sequenceIndex, int projectedIndex) {
 		this.sequenceIndex = sequenceIndex;
diff --git a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteField.java b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteField.java
index 4e5467b2b8..4576d93012 100644
--- a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteField.java
+++ b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteField.java
@@ -30,7 +30,7 @@ import ghidra.util.ColorUtils;
 
 /**
  * Fields for the ByteViewer.  This class extends the SimpleTextField to include
- * a fieldOffset which corresponds to the column of the the fieldFactory that
+ * a fieldOffset which corresponds to the column of the fieldFactory that
  * generated it.
  */
 public class ByteField extends SimpleTextField {
diff --git a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteViewerComponent.java b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteViewerComponent.java
index 335300d923..429e01fd8f 100644
--- a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteViewerComponent.java
+++ b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteViewerComponent.java
@@ -408,8 +408,8 @@ public class ByteViewerComponent extends FieldPanel implements FieldMouseListene
 	}
 
 	/**
-	 * Get the the color of unsaved byte changes
-	 * @return the the color of unsaved byte changes
+	 * Get the color of unsaved byte changes
+	 * @return the color of unsaved byte changes
 	 */
 	Color getEditColor() {
 		return editColor;
diff --git a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteViewerState.java b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteViewerState.java
index 44136f58b6..70b074d266 100644
--- a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteViewerState.java
+++ b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/ByteViewerState.java
@@ -25,7 +25,7 @@ import ghidra.program.model.address.Address;
 import ghidra.program.util.ProgramLocation;
 
 /**
- * Implementation for a snapshot of the the byte viewer's current view.
+ * Implementation for a snapshot of the byte viewer's current view.
  */
 class ByteViewerState {
 
diff --git a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/MemoryByteBlock.java b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/MemoryByteBlock.java
index 3a94186076..5f77620b1d 100644
--- a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/MemoryByteBlock.java
+++ b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/byteviewer/MemoryByteBlock.java
@@ -286,7 +286,7 @@ public class MemoryByteBlock implements ByteBlock {
 	 * it should return 0. A natural alignment only exists if there is some underlying indexing
 	 * structure that isn't based at 0. For example, if the underlying structure is address based
 	 * and the starting address is not 0, then the natural alignment is the address offset mod the
-	 * radix (if the starting address is 10 and the radix is 4, then then the alignment is 2)).
+	 * radix (if the starting address is 10 and the radix is 4, then the alignment is 2)).
 	 */
 	@Override
 	public int getAlignment(int radix) {
diff --git a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/format/ByteBlock.java b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/format/ByteBlock.java
index 9f3f3e7cbb..ee16c838fd 100644
--- a/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/format/ByteBlock.java
+++ b/Ghidra/Features/ByteViewer/src/main/java/ghidra/app/plugin/core/format/ByteBlock.java
@@ -151,7 +151,7 @@ public interface ByteBlock {
 	 * there is some underlying indexing structure that isn't based at 0.  For example,
 	 * if the underlying structure is address based and the starting address is not 0,
 	 * then the natural alignment is the address offset mod the radix (if the starting
-	 * address is 10 and the radix is 4, then then the alignment is 2)).
+	 * address is 10 and the radix is 4, then the alignment is 2)).
 	 */
 	public int getAlignment(int radix);
 }
diff --git a/Ghidra/Features/CodeCompare/src/main/java/ghidra/features/codecompare/graphanalysis/Pinning.java b/Ghidra/Features/CodeCompare/src/main/java/ghidra/features/codecompare/graphanalysis/Pinning.java
index 205db313ad..2e73555f7f 100755
--- a/Ghidra/Features/CodeCompare/src/main/java/ghidra/features/codecompare/graphanalysis/Pinning.java
+++ b/Ghidra/Features/CodeCompare/src/main/java/ghidra/features/codecompare/graphanalysis/Pinning.java
@@ -692,7 +692,7 @@ public class Pinning {
 	}
 
 	/**
-	 * Determine if a token should be be filtered from match display.
+	 * Determine if a token should be filtered from match display.
 	 * Some tokens like "," and " " may be attached to matchable operations but can
 	 * clutter the display if they are highlighted for a match.
 	 * @param token is the specific token to check
diff --git a/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RTTIGccClassRecoverer.java b/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RTTIGccClassRecoverer.java
index 092f8a32a1..b24305fbaf 100644
--- a/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RTTIGccClassRecoverer.java
+++ b/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RTTIGccClassRecoverer.java
@@ -3584,7 +3584,7 @@ public class RTTIGccClassRecoverer extends RTTIClassRecoverer {
 	 * Method to add parents to the given class
 	 * 
 	 * @param recoveredClass  the given class
-	 * @param typeinfo the the GccTypeinfo object for this class
+	 * @param typeinfo the GccTypeinfo object for this class
 	 * @return list of parents for the given class
 	 * @throws CancelledException if cancelled
 	 */
diff --git a/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClassHelper.java b/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClassHelper.java
index 8417cece2d..00c212319f 100644
--- a/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClassHelper.java
+++ b/Ghidra/Features/Decompiler/ghidra_scripts/classrecovery/RecoveredClassHelper.java
@@ -2426,7 +2426,7 @@ public class RecoveredClassHelper {
 	/**
 	 * Method to return the total number of vbase destructors in the given list of classes
 	 * @param recoveredClasses the list of classes
-	 * @return the the total number of vbase destructors in the given list of classes
+	 * @return the total number of vbase destructors in the given list of classes
 	 * @throws CancelledException if cancelled
 	 */
 	public int getNumberOfVBaseFunctions(List<RecoveredClass> recoveredClasses)
@@ -5998,7 +5998,7 @@ public class RecoveredClassHelper {
 				}
 
 				// if one or more is a constructor and none are destructors then the indeterminate
-				// inline is is an inlined constructor
+				// inline is an inlined constructor
 				if (isConstructor == true && isDestructor == false) {
 					processInlineConstructor(recoveredClass, inlineFunction, referenceToClassMap);
 				}
@@ -7703,7 +7703,7 @@ public class RecoveredClassHelper {
 			// to the purecall function and we don't want to rename that function to the new name
 			// since anyone calling purecall will call it
 			if (!componentFunctionDefinition.getName().contains("purecall")) {
-				// otherwise update data type with new new signature
+				// otherwise update data type with new signature
 				FunctionDefinition changedFunctionDefinition =
 					updateFunctionDefinition(componentFunctionDefinition, newFunctionDefinition);
 
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/architecture.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/architecture.cc
index 1e63cdd641..acf73996df 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/architecture.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/architecture.cc
@@ -1126,7 +1126,7 @@ ProtoModel *Architecture::createUnknownModel(const string &modelName)
   return model;
 }
 
-/// This looks for the \<processor_spec> tag and and sets configuration
+/// This looks for the \<processor_spec> tag and sets configuration
 /// parameters based on it.
 /// \param store is the document store holding the tag
 void Architecture::parseProcessorConfig(DocumentStorage &store)
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/block.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/block.cc
index c03ab3b64a..cf8f0a9f91 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/block.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/block.cc
@@ -398,7 +398,7 @@ bool FlowBlock::dominates(const FlowBlock *subBlock) const
 /// We assume the given block has 2 out-edges and that \b this block is immediately reached by
 /// one of these two edges. Some condition holds when traversing the out-edge to \b this, and the complement
 /// of the condition holds for traversing the other out-edge. We verify that the condition holds for
-/// this entire block.  More specifically, we check that that there is no path to \b this through the
+/// this entire block.  More specifically, we check that there is no path to \b this through the
 /// sibling edge, where the complement of the condition holds (unless we loop back through the conditional block).
 /// \param cond is the conditional block with 2 out-edges
 /// \return \b true if the condition holds for this block
@@ -3478,7 +3478,7 @@ void BlockSwitch::addCase(FlowBlock *switchbl,FlowBlock *bl,uint4 gt)
 void BlockSwitch::grabCaseBasic(FlowBlock *switchbl,const vector<FlowBlock *> &cs)
 
 {
-  vector<int4> casemap(switchbl->sizeOut(),-1);	// Map from from switchtarget's outindex to position in caseblocks
+  vector<int4> casemap(switchbl->sizeOut(),-1);	// Map from switchtarget's outindex to position in caseblocks
   caseblocks.clear();
   for(int4 i=1;i<cs.size();++i) {
     FlowBlock *casebl = cs[i];
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/database.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/database.cc
index 83cd51328d..635fcb1fe0 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/database.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/database.cc
@@ -61,7 +61,7 @@ SymbolEntry::SymbolEntry(Symbol *sym)
 /// is set to \e invalid, and the \b hash becomes the primary location information.
 /// \param sym is the underlying Symbol
 /// \param exfl are the Varnode flags associated with the storage location
-/// \param h is the the hash
+/// \param h is the hash
 /// \param off if the offset into the Symbol for this (piece of) storage
 /// \param sz is the size in bytes of this (piece of) storage
 /// \param rnglist is the set of code addresses where \b this SymbolEntry represents the Symbol
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/funcdata_varnode.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/funcdata_varnode.cc
index d02fb5e108..8bc7e04f69 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/funcdata_varnode.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/funcdata_varnode.cc
@@ -1649,7 +1649,7 @@ void Funcdata::prepareThisPointer(void)
       return;		// Data-type will be obtained directly from symbol
   }
 
-  // Its possible that a recommendation for the "this" pointer has already been been collected.
+  // Its possible that a recommendation for the "this" pointer has already been collected.
   // Currently the only type recommendations are for the "this" pointer. If there any, it is for "this"
   if (localmap->hasTypeRecommendations())
     return;
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/heritage.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/heritage.cc
index bcdac399a2..307d1201e0 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/heritage.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/heritage.cc
@@ -1041,7 +1041,7 @@ bool Heritage::discoverIndexedStackPointers(AddrSpace *spc,vector<PcodeOp *> &fr
 	      // If there were no traversals (of non-constant ADD or MULTIEQUAL) then the
 	      // pointer is equal to the stackpointer plus a constant (through an indirect is possible)
 	      // This will likely get resolved in the next heritage pass, but we leave the
-	      // spacebaseptr mark on, so that that the indirects don't get removed
+	      // spacebaseptr mark on, so that the indirects don't get removed
 	      fd->opMarkSpacebasePtr(op);
 	    }
 	  }
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/action.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/action.hh
index 8a78079d78..8ca12206e4 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/action.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/action.hh
@@ -136,7 +136,7 @@ public:
 
 /// \brief A group of actions (generally) applied in sequence
 ///
-/// This is a a list of Action objects, which are usually applied in sequence.
+/// This is a list of Action objects, which are usually applied in sequence.
 /// But the behavior properties of each individual Action may affect this.
 /// Properties (like rule_repeatapply) may be put directly to this group
 /// that also affect how the Actions are applied.
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/address.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/address.hh
index 6ec55a783d..1877871962 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/address.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/address.hh
@@ -16,7 +16,7 @@
 /// \file address.hh
 /// \brief Classes for specifying addresses and other low-level constants
 ///
-///  All addresses are absolute and there are are no registers in CPUI. However,
+///  All addresses are absolute and there are no registers in CPUI. However,
 ///  all addresses are prefixed with an "immutable" pointer, which can
 ///  specify a separate RAM space, a register space, an i/o space etc. Thus
 ///  a translation from a real machine language will typically simulate registers
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/blockaction.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/blockaction.hh
index b8378e1c2d..aa2ea90086 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/blockaction.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/blockaction.hh
@@ -163,7 +163,7 @@ class TraceDAG {
   FlowBlock *finishblock;		///< Designated exit block for the DAG (or null)
   void removeTrace(BlockTrace *trace);	///< Remove the indicated BlockTrace
   void processExitConflict(list<BadEdgeScore>::iterator start,list<BadEdgeScore>::iterator end);
-  BlockTrace *selectBadEdge(void);	///< Select the the most likely unstructured edge from active BlockTraces
+  BlockTrace *selectBadEdge(void);	///< Select the most likely unstructured edge from active BlockTraces
   void insertActive(BlockTrace *trace);	///< Move a BlockTrace into the \e active category
   void removeActive(BlockTrace *trace);	///< Remove a BlockTrace from the \e active category
   bool checkOpen(BlockTrace *trace);	///< Check if we can push the given BlockTrace into its next node
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/database.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/database.hh
index 3ed55e0516..ec76f5ab54 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/database.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/database.hh
@@ -713,7 +713,7 @@ public:
 
   /// \brief Restore attributes for \b this from a parent element that is not a Scope
   ///
-  /// Attributes are read from the (already opened) element, prior to reading reading the
+  /// Attributes are read from the (already opened) element, prior to reading the
   /// \<scope> element specific to \b this Scope
   /// \param decoder is the stream decoder
   virtual void decodeWrappingAttributes(Decoder &decoder) {}
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/prettyprint.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/prettyprint.hh
index 9a1acccd33..8fa0e819e2 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/prettyprint.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/prettyprint.hh
@@ -448,7 +448,7 @@ public:
 
   /// \brief Set a pending print callback
   ///
-  /// The callback will be issued prior to the the next call to tagLine() unless
+  /// The callback will be issued prior to the next call to tagLine() unless
   /// a the method cancelPendingPrint() is called first.
   /// \param pend is the callback to be issued
   void setPendingPrint(PendPrint *pend) { pendPrint = pend; }
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/printc.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/printc.hh
index 6874a3faf9..c63ebd8ca6 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/printc.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/printc.hh
@@ -366,7 +366,7 @@ public:
 ///
 /// When a variable has TypePointerRel as its data-type, PTRSUB acts relative to the \e parent
 /// data-type.  We print a specific token to indicate this relative shift is happening.
-/// \param op is is the PTRSUB op
+/// \param op is the PTRSUB op
 inline void PrintC::pushTypePointerRel(const PcodeOp *op)
 
 {
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/stringmanage.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/stringmanage.hh
index 7c4137a3c8..0fb1cc45b0 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/stringmanage.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/stringmanage.hh
@@ -42,7 +42,7 @@ protected:
   /// \brief String data (a sequence of bytes) stored by StringManager
   class StringData {
   public:
-    bool isTruncated;		///< \b true if the the string is truncated
+    bool isTruncated;		///< \b true if the string is truncated
     vector<uint1> byteData;	///< UTF8 encoded string data
   };
   map<Address,StringData> stringMap;	///< Map from address to string data
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/type.hh b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/type.hh
index f711a058c4..d5fef8a008 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/type.hh
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/include/ghidra/type.hh
@@ -187,7 +187,7 @@ protected:
   string name;			///< Name of type
   string displayName;		///< Name to display in output
   type_metatype metatype;	///< Meta-type - type disregarding size
-  sub_metatype submeta;		///< Sub-type of of the meta-type, for comparisons
+  sub_metatype submeta;		///< Sub-type of the meta-type, for comparisons
   Datatype *typedefImm;		///< The immediate data-type being typedefed by \e this
   int4 alignment;		///< Byte alignment expected for \b this data-type in addressable memory
   int4 alignSize;		///< Size of data-type rounded up to a multiple of \b alignment
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/merge.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/merge.cc
index 4674e70ca2..db08bd8914 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/merge.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/merge.cc
@@ -801,7 +801,7 @@ void Merge::collectInputs(HighVariable *high,vector<PcodeOpNode> &oplist,PcodeOp
   }
 }
 
-/// \brief Snip instances of the output of an INDIRECT that are also inputs to to the underlying PcodeOp
+/// \brief Snip instances of the output of an INDIRECT that are also inputs to the underlying PcodeOp
 ///
 /// Examine the output HighVariable for the given INDIRECT op. Varnode instances (or pieces) that are also
 /// inputs to the underlying PcodeOp causing the INDIRECT are snipped by creating a new COPY op from the
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/rangeutil.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/rangeutil.cc
index 5ccd24e7a7..92ebaacda0 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/rangeutil.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/rangeutil.cc
@@ -200,7 +200,7 @@ CircleRange::CircleRange(bool val)
 
 /// A size specifies the number of bytes (*8 to get number of bits) in the mask.
 /// The stride is assumed to be 1.
-/// \param val is is the single value
+/// \param val is the single value
 /// \param size is the size of the mask in bytes
 CircleRange::CircleRange(uintb val,int4 size)
 
@@ -228,7 +228,7 @@ void CircleRange::setRange(uintb lft,uintb rgt,int4 size,int4 stp)
 
 /// A size specifies the number of bytes (*8 to get number of bits) in the mask.
 /// The stride is assumed to be 1.
-/// \param val is is the single value
+/// \param val is the single value
 /// \param size is the size of the mask in bytes
 void CircleRange::setRange(uintb val,int4 size)
 
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.cc
index 6baab21559..4458679644 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/ruleaction.cc
@@ -6026,7 +6026,7 @@ bool AddTreeState::checkTerm(Varnode *vn,uint8 treeCoeff)
 
 /// Recursively walk the sub-tree from the given root.
 /// Terms that are a \e multiple of the base data-type size are accumulated either in
-/// the the sum of constant multiples or the container of non-constant multiples.
+/// the sum of constant multiples or the container of non-constant multiples.
 /// Terms that are a \e non-multiple are accumulated either in the sum of constant
 /// non-multiples or the container of non-constant non-multiples. The constant
 /// non-multiples are counted twice, once in the sum, and once in the container.
diff --git a/Ghidra/Features/Decompiler/src/decompile/cpp/subflow.cc b/Ghidra/Features/Decompiler/src/decompile/cpp/subflow.cc
index b41c080579..1cb239497c 100644
--- a/Ghidra/Features/Decompiler/src/decompile/cpp/subflow.cc
+++ b/Ghidra/Features/Decompiler/src/decompile/cpp/subflow.cc
@@ -2235,7 +2235,7 @@ void SplitDatatype::buildOutConcats(Varnode *rootVn,PcodeOp *previousOp,vector<V
     data.getMerge().registerProtoPartialRoot(rootVn);
 }
 
-/// \brief Build a a series of PTRSUB ops at different offsets, given a root pointer
+/// \brief Build a series of PTRSUB ops at different offsets, given a root pointer
 ///
 /// Offsets and data-types are based on \b dataTypePieces, taking input data-types if \b isInput is \b true,
 /// output data-types otherwise.  The data-types, relative to the root pointer, are assumed to start at
diff --git a/Ghidra/Features/Decompiler/src/main/doc/decompileplugin.xml b/Ghidra/Features/Decompiler/src/main/doc/decompileplugin.xml
index 4b6b40b206..5e8d0542ba 100644
--- a/Ghidra/Features/Decompiler/src/main/doc/decompileplugin.xml
+++ b/Ghidra/Features/Decompiler/src/main/doc/decompileplugin.xml
@@ -4387,7 +4387,7 @@
     variable or operation affected.
   </para>
   <para>
-    Many of the actions have have a key binding, which, if it exists, will be listed in the pop-up menu.
+    Many of the actions have a key binding, which, if it exists, will be listed in the pop-up menu.
     If the key binding is used to activate the action, local context is determined by the current cursor
     position.  Key bindings can be reassigned from the
     <link xlink:href="help/topics/Tool/ToolOptions_Dialog.htm#KeyBindings_Option">Key Bindings</link>
@@ -5174,7 +5174,7 @@
   <para>
     Decompilation is triggered again to incorporate the
     new name, causing local variable declarations to be reordered and line breaks to
-    change, but otherwise the the output is unaffected.
+    change, but otherwise the output is unaffected.
   </para>
   <para>
     Local variables and parameters presented by the Decompiler may be invented on-the-fly
diff --git a/Ghidra/Features/Decompiler/src/main/doc/sleigh.xml b/Ghidra/Features/Decompiler/src/main/doc/sleigh.xml
index 177f9ea626..c1bb403168 100644
--- a/Ghidra/Features/Decompiler/src/main/doc/sleigh.xml
+++ b/Ghidra/Features/Decompiler/src/main/doc/sleigh.xml
@@ -3822,7 +3822,7 @@ select <emphasis>s</emphasis> registers. As is described in
 <xref linkend="sleigh_local_change"/>, these assignments by themselves
 cause only a local context change.  However, the
 subsequent <emphasis role="bold">globalset</emphasis> directives make
-the change persist outside of the the instructions
+the change persist outside of the instructions
 themselves. The <emphasis role="bold">globalset</emphasis> directive
 takes two parameters, the second being the particular context variable
 being changed. The first parameter indicates the first address where
diff --git a/Ghidra/Features/Decompiler/src/main/help/help/topics/DecompilePlugin/DecompilerWindow.html b/Ghidra/Features/Decompiler/src/main/help/help/topics/DecompilePlugin/DecompilerWindow.html
index 6fc00e3b8c..0d22fa6583 100644
--- a/Ghidra/Features/Decompiler/src/main/help/help/topics/DecompilePlugin/DecompilerWindow.html
+++ b/Ghidra/Features/Decompiler/src/main/help/help/topics/DecompilePlugin/DecompilerWindow.html
@@ -553,7 +553,7 @@
     variable or operation affected.
   </p>
   <p>
-    Many of the actions have have a key binding, which, if it exists, will be listed in the pop-up menu.
+    Many of the actions have a key binding, which, if it exists, will be listed in the pop-up menu.
     If the key binding is used to activate the action, local context is determined by the current cursor
     position.  Key bindings can be reassigned from the
     <a class="ulink" href="help/topics/Tool/ToolOptions_Dialog.htm#KeyBindings_Option" target="_top">Key Bindings</a>
@@ -1375,7 +1375,7 @@
   <p>
     Decompilation is triggered again to incorporate the
     new name, causing local variable declarations to be reordered and line breaks to
-    change, but otherwise the the output is unaffected.
+    change, but otherwise the output is unaffected.
   </p>
   <p>
     Local variables and parameters presented by the Decompiler may be invented on-the-fly
diff --git a/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/DecompileOptions.java b/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/DecompileOptions.java
index 77c18db80c..c5d8f1a609 100644
--- a/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/DecompileOptions.java
+++ b/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/DecompileOptions.java
@@ -267,7 +267,7 @@ public class DecompileOptions {
 
 	private final static String MAXWIDTH_OPTIONSTRING = "Display.Maximum characters in a code line";
 	private final static String MAXWIDTH_OPTIONDESCRIPTION =
-		"Maximum number of characters allowed per line before before line breaks are forced.";
+		"Maximum number of characters allowed per line before line breaks are forced.";
 	private final static int MAXWIDTH_OPTIONDEFAULT = 100;	// Must match EmitPrettyPrint::resetDefaultsPrettyPrint
 	private int maxwidth;
 
diff --git a/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/UserHighlights.java b/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/UserHighlights.java
index c5b1eca91b..d0a3e19365 100644
--- a/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/UserHighlights.java
+++ b/Ghidra/Features/Decompiler/src/main/java/ghidra/app/decompiler/component/UserHighlights.java
@@ -110,7 +110,7 @@ public class UserHighlights {
 
 	void addSecondaryHighlighter(Function function, DecompilerHighlighter highlighter) {
 
-		// Note: this highlighter has likely already been added the the this class, but has not
+		// Note: this highlighter has likely already been added the this class, but has not
 		//       yet been bound to the given function.
 		secondaryHighlightersByFunction.get(function).add(highlighter);
 		secondaryHighlighters.add(highlighter);
diff --git a/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/dyldcache/DyldCacheFileSystem.java b/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/dyldcache/DyldCacheFileSystem.java
index e05928b31c..aecc1d6462 100644
--- a/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/dyldcache/DyldCacheFileSystem.java
+++ b/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/dyldcache/DyldCacheFileSystem.java
@@ -293,7 +293,7 @@ public class DyldCacheFileSystem extends GFileSystemBase {
 	/**
 	 * Gets the default range of the given {@link DyldCacheMappingAndSlideInfo}
 	 * 
-	 * @param mappingInfo The {@link DyldCacheMappingAndSlideInfo} to the the range of
+	 * @param mappingInfo The {@link DyldCacheMappingAndSlideInfo} to the range of
 	 * @return The default range of the given {@link DyldCacheMappingAndSlideInfo}
 	 */
 	private RangeSet<Long> getRangeSet(DyldCacheMappingAndSlideInfo mappingInfo) {
diff --git a/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/prelink/MachoPrelinkFileSystem.java b/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/prelink/MachoPrelinkFileSystem.java
index 5f4d4c7ab9..9aa8e944be 100644
--- a/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/prelink/MachoPrelinkFileSystem.java
+++ b/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/ios/prelink/MachoPrelinkFileSystem.java
@@ -399,7 +399,7 @@ public class MachoPrelinkFileSystem extends GFileSystemBase implements GFileSyst
 		//
 		// if we failed to parse the PRELINK XML file,
 		// then look for the kmod_info structure in each KEXT file
-		// and use use the
+		// and use the
 		//
 		for (long machoHeaderOffset : machoHeaderOffsets) {
 			if (monitor.isCancelled()) {
diff --git a/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/sparseimage/SparseImageDecompressor.java b/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/sparseimage/SparseImageDecompressor.java
index 356a9c0f95..d5c5278e30 100644
--- a/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/sparseimage/SparseImageDecompressor.java
+++ b/Ghidra/Features/FileFormats/src/main/java/ghidra/file/formats/sparseimage/SparseImageDecompressor.java
@@ -127,7 +127,7 @@ public class SparseImageDecompressor {
 	}
 
 	/**
-	 * Writes a chunk of blocks are are zero filled.
+	 * Writes a chunk of blocks are zero filled.
 	 * <p>
 	 * @param blocks number of blocks to write
 	 * @param monitor {@link TaskMonitor} to watch
@@ -199,7 +199,7 @@ public class SparseImageDecompressor {
 	}
 
 	/**
-	 * Writes a chunk of blocks are are read from the source file.
+	 * Writes a chunk of blocks are read from the source file.
 	 * <p>
 	 * @param blocks number of blocks to copy
 	 * @param monitor {@link TaskMonitor} to monitor
diff --git a/Ghidra/Features/FunctionGraph/src/main/help/help/topics/FunctionGraphPlugin/Function_Graph.html b/Ghidra/Features/FunctionGraph/src/main/help/help/topics/FunctionGraphPlugin/Function_Graph.html
index 2ea00b278f..9bc78c4109 100644
--- a/Ghidra/Features/FunctionGraph/src/main/help/help/topics/FunctionGraphPlugin/Function_Graph.html
+++ b/Ghidra/Features/FunctionGraph/src/main/help/help/topics/FunctionGraphPlugin/Function_Graph.html
@@ -888,7 +888,7 @@
       the scroll wheel was used to zoom. Now there is an option to restore that behavior, the
       <B>Scroll Wheel Pans</B> option. When this option is on, you can zoom by holding the
       <TT><B>Control</B></TT> key (<TT><B>Command</B></TT> key on the Mac) while using the scroll
-      wheel. Alternatively, you can move the graph left to right using the mouse while while
+      wheel. Alternatively, you can move the graph left to right using the mouse while
       holding <TT><B>Control-Alt</B></TT>.</P>
 
       <P>The satellite viewer may also be used to move the primary graphs view by dragging and
diff --git a/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/AbstractFunctionGraphTest.java b/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/AbstractFunctionGraphTest.java
index 3c26e0afeb..8d24c75da1 100644
--- a/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/AbstractFunctionGraphTest.java
+++ b/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/AbstractFunctionGraphTest.java
@@ -1406,7 +1406,7 @@ public abstract class AbstractFunctionGraphTest extends AbstractGhidraHeadedInte
 		assertVerticesRemoved(graph, ungroupedVertices);
 		assertEdgesRemoved(graph, ungroupedEdges);
 
-		// -1 because one one of the edges was between two of the vertices being grouped
+		// -1 because one of the edges was between two of the vertices being grouped
 		int expectedGroupedEdgeCount = ungroupedEdges.size() - 1;
 		GroupedFunctionGraphVertex groupedVertex =
 			validateNewGroupedVertexFromVertices(functionGraph, ungroupedVertices,
diff --git a/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices1Test.java b/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices1Test.java
index 793f4d9906..07c48ead42 100644
--- a/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices1Test.java
+++ b/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices1Test.java
@@ -84,7 +84,7 @@ public class FunctionGraphGroupVertices1Test extends AbstractFunctionGraphTest {
 
 		group(ungroupedVertices);
 
-		// -1 because one one of the edges was between two of the vertices being grouped
+		// -1 because one of the edges was between two of the vertices being grouped
 		int expectedGroupedEdgeCount = ungroupedEdges.size() - 1;
 		GroupedFunctionGraphVertex groupedVertex = validateNewGroupedVertexFromVertices(
 			functionGraph, ungroupedVertices, expectedGroupedEdgeCount);
@@ -202,7 +202,7 @@ public class FunctionGraphGroupVertices1Test extends AbstractFunctionGraphTest {
 
 		group(ungroupedVertices);
 
-		// -1 because one one of the edges was between two of the vertices being grouped
+		// -1 because one of the edges was between two of the vertices being grouped
 		int expectedGroupedEdgeCount = ungroupedEdges.size() - 1;
 		GroupedFunctionGraphVertex groupedVertex = validateNewGroupedVertexFromVertices(
 			functionGraph, ungroupedVertices, expectedGroupedEdgeCount);
@@ -264,7 +264,7 @@ public class FunctionGraphGroupVertices1Test extends AbstractFunctionGraphTest {
 		//printEdges(ungroupedEdges);
 		group(ungroupedVertices);
 
-		// -1 because one one of the edges was between two of the vertices being grouped
+		// -1 because one of the edges was between two of the vertices being grouped
 		int expectedGroupedEdgeCount = ungroupedEdges.size() - 1;
 		GroupedFunctionGraphVertex innerGroupedVertex = validateNewGroupedVertexFromVertices(
 			functionGraph, ungroupedVertices, expectedGroupedEdgeCount);
@@ -408,7 +408,7 @@ public class FunctionGraphGroupVertices1Test extends AbstractFunctionGraphTest {
 		assertVerticesRemoved(graph, ungroupedVertices);
 		assertEdgesRemoved(graph, ungroupedEdges);
 
-		// -1 because one one of the edges was between two of the vertices being grouped
+		// -1 because one of the edges was between two of the vertices being grouped
 		int expectedGroupedEdgeCount = ungroupedEdges.size() - 1;
 		GroupedFunctionGraphVertex groupedVertex = validateNewGroupedVertexFromVertices(
 			functionGraph, ungroupedVertices, expectedGroupedEdgeCount);
@@ -861,7 +861,7 @@ public class FunctionGraphGroupVertices1Test extends AbstractFunctionGraphTest {
 		assertVerticesRemoved(graph, ungroupedVertices);
 		assertEdgesRemoved(graph, ungroupedEdges);
 
-		// -1 because one one of the edges was between two of the vertices being grouped
+		// -1 because one of the edges was between two of the vertices being grouped
 		int expectedGroupedEdgeCount = ungroupedEdges.size() - 1;
 		GroupedFunctionGraphVertex groupedVertex =
 			validateNewGroupedVertexFromVertices(functionGraph, ungroupedVertices,
diff --git a/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices2Test.java b/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices2Test.java
index 0913a97a80..b902a9ca67 100644
--- a/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices2Test.java
+++ b/Ghidra/Features/FunctionGraph/src/test.slow/java/ghidra/app/plugin/core/functiongraph/FunctionGraphGroupVertices2Test.java
@@ -60,7 +60,7 @@ public class FunctionGraphGroupVertices2Test extends AbstractFunctionGraphTest {
 		assertVerticesRemoved(graph, ungroupedVertices);
 		assertEdgesRemoved(graph, ungroupedEdges);
 
-		// -1 because one one of the edges was between two of the vertices being grouped
+		// -1 because one of the edges was between two of the vertices being grouped
 		int expectedGroupedEdgeCount = ungroupedEdges.size() - 1;
 		GroupedFunctionGraphVertex groupedVertex = validateNewGroupedVertexFromVertices(
 			functionGraph, ungroupedVertices, expectedGroupedEdgeCount);
@@ -89,7 +89,7 @@ public class FunctionGraphGroupVertices2Test extends AbstractFunctionGraphTest {
 
 		group(ungroupedVertices);
 
-		// (size - 1) because one one of the edges was between two of the vertices being grouped
+		// (size - 1) because one of the edges was between two of the vertices being grouped
 		int expectedGroupedEdgeCount = ungroupedEdges.size() - 1;
 		GroupedFunctionGraphVertex groupedVertex = validateNewGroupedVertexFromVertices(
 			functionGraph, ungroupedVertices, expectedGroupedEdgeCount);
@@ -415,7 +415,7 @@ public class FunctionGraphGroupVertices2Test extends AbstractFunctionGraphTest {
 		// Test the case that grouping the entry node will create a group that has incoming 
 		// edges.  In this case, there is no source node in the graph.  This will cause an 
 		// exception if the code does not create a fake source node before passing the graph
-		// the the algorithm for calculating dominance.
+		// the algorithm for calculating dominance.
 		//
 
 		create12345GraphWithTransaction();
diff --git a/Ghidra/Features/FunctionID/src/main/java/ghidra/feature/fid/db/FidDB.java b/Ghidra/Features/FunctionID/src/main/java/ghidra/feature/fid/db/FidDB.java
index 73f0cc311b..10ff00a54d 100644
--- a/Ghidra/Features/FunctionID/src/main/java/ghidra/feature/fid/db/FidDB.java
+++ b/Ghidra/Features/FunctionID/src/main/java/ghidra/feature/fid/db/FidDB.java
@@ -183,7 +183,7 @@ public class FidDB implements Closeable {
 	}
 
 	/**
-	 * Indicates the the user of this FidDB no longer needs it open.  This will decrement the
+	 * Indicates the user of this FidDB no longer needs it open.  This will decrement the
 	 * "open count" and if the "open count is 0, the database will be closed.
 	 */
 	@Override
diff --git a/Ghidra/Features/FunctionID/src/main/java/ghidra/feature/fid/hash/MessageDigestFidHasher.java b/Ghidra/Features/FunctionID/src/main/java/ghidra/feature/fid/hash/MessageDigestFidHasher.java
index 3bb31fce3f..4bd186b506 100644
--- a/Ghidra/Features/FunctionID/src/main/java/ghidra/feature/fid/hash/MessageDigestFidHasher.java
+++ b/Ghidra/Features/FunctionID/src/main/java/ghidra/feature/fid/hash/MessageDigestFidHasher.java
@@ -164,7 +164,7 @@ public class MessageDigestFidHasher implements FidHasher {
 									specificCount += 1;	// Count the fact that value is used in hash
 								}
 							}
-							// Mix scalar value to get more bit diversity, add in in a commutative way
+							// Mix scalar value to get more bit diversity, add in a commutative way
 							specificUpdate = specificUpdate + ((int) val + 1234567) * 67999;
 							fullUpdate += 0xfeeddead;				// Scalar value is never used in full hash, indicate scalar was present
 						}
diff --git a/Ghidra/Features/GnuDemangler/src/main/java/ghidra/app/util/demangler/gnu/GnuDemanglerParser.java b/Ghidra/Features/GnuDemangler/src/main/java/ghidra/app/util/demangler/gnu/GnuDemanglerParser.java
index 7fef606dc6..e2e19d2365 100644
--- a/Ghidra/Features/GnuDemangler/src/main/java/ghidra/app/util/demangler/gnu/GnuDemanglerParser.java
+++ b/Ghidra/Features/GnuDemangler/src/main/java/ghidra/app/util/demangler/gnu/GnuDemanglerParser.java
@@ -871,7 +871,7 @@ public class GnuDemanglerParser {
 						String fullText = lambdaName.getFullText();
 						dt.setName(fullText);
 						int offset = fullText.indexOf('(');
-						// to to the end of the lambda, which is its length, minus our position
+						// to the end of the lambda, which is its length, minus our position
 						// inside the lambda
 						int remaining = fullText.length() - offset;
 						i = i + remaining; // end of lambda's closing '}'
diff --git a/Ghidra/Features/GraphServices/src/main/help/help/topics/GraphServices/GraphDisplay.htm b/Ghidra/Features/GraphServices/src/main/help/help/topics/GraphServices/GraphDisplay.htm
index e0fb14d101..07cd2d2389 100644
--- a/Ghidra/Features/GraphServices/src/main/help/help/topics/GraphServices/GraphDisplay.htm
+++ b/Ghidra/Features/GraphServices/src/main/help/help/topics/GraphServices/GraphDisplay.htm
@@ -150,7 +150,7 @@
           <B>Circle</B> will arrange vertices in a Circle. </LI>
 
           <LI><A name="Force Balanced"/>
-          <B>Force Balanced</B> is a <B>Force Directed Layout Algorithm</B> using the the <B>Kamada
+          <B>Force Balanced</B> is a <B>Force Directed Layout Algorithm</B> using the <B>Kamada
           Kawai</B> algorithm. It attempts to balance the graph by considering vertices and edge
           connections.</LI>
 
diff --git a/Ghidra/Features/GraphServices/src/main/java/ghidra/graph/visualization/DefaultGraphRenderer.java b/Ghidra/Features/GraphServices/src/main/java/ghidra/graph/visualization/DefaultGraphRenderer.java
index 7fa7b462b8..13231b5b67 100644
--- a/Ghidra/Features/GraphServices/src/main/java/ghidra/graph/visualization/DefaultGraphRenderer.java
+++ b/Ghidra/Features/GraphServices/src/main/java/ghidra/graph/visualization/DefaultGraphRenderer.java
@@ -331,7 +331,7 @@ public class DefaultGraphRenderer implements GraphRenderer {
 		label.setText(escapedText);
 		Dimension labelSize = label.getPreferredSize();
 
-		// make sure the the vertexName doesn't make the icon ridiculously big
+		// make sure the vertexName doesn't make the icon ridiculously big
 		int width = Math.min(labelSize.width, MAX_WIDTH);
 		int height = Math.min(labelSize.height, MAX_HEIGHT);
 		label.setSize(width, height);
diff --git a/Ghidra/Features/Jython/src/main/java/ghidra/jython/JythonPluginInputThread.java b/Ghidra/Features/Jython/src/main/java/ghidra/jython/JythonPluginInputThread.java
index acc98baa53..e1fc1c3c97 100644
--- a/Ghidra/Features/Jython/src/main/java/ghidra/jython/JythonPluginInputThread.java
+++ b/Ghidra/Features/Jython/src/main/java/ghidra/jython/JythonPluginInputThread.java
@@ -89,7 +89,7 @@ class JythonPluginInputThread extends Thread {
 	}
 
 	/**
-	 * Causes the the background thread's run() loop to exit.
+	 * Causes the background thread's run() loop to exit.
 	 * <p>
 	 * Causes background thread's exit by closing the inputstream it is looping on.
 	 */
diff --git a/Ghidra/Features/MicrosoftCodeAnalyzer/src/main/java/ghidra/app/cmd/data/TypeDescriptorModel.java b/Ghidra/Features/MicrosoftCodeAnalyzer/src/main/java/ghidra/app/cmd/data/TypeDescriptorModel.java
index 7815cfcfa3..24d2fe96d9 100644
--- a/Ghidra/Features/MicrosoftCodeAnalyzer/src/main/java/ghidra/app/cmd/data/TypeDescriptorModel.java
+++ b/Ghidra/Features/MicrosoftCodeAnalyzer/src/main/java/ghidra/app/cmd/data/TypeDescriptorModel.java
@@ -544,7 +544,7 @@ public class TypeDescriptorModel extends AbstractCreateDataTypeModel {
 	}
 
 	/**
-	 * Whether or not the memory at the the model's address appears to be a valid location for a
+	 * Whether or not the memory at the model's address appears to be a valid location for a
 	 * Type Descriptor data type and that its virtual function table address matches the specified
 	 * address.
 	 * @param expectedVFTableAddress the virtual function table address that the model is expected
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/MDMang_README.txt b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/MDMang_README.txt
index 63908d4b70..c65d2a9bcd 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/MDMang_README.txt
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/MDMang_README.txt
@@ -47,13 +47,13 @@ MicrosoftDmang Development and Testing Overview:
     that requires 13 other changes with numerous tests moving back and forth between pass and fail
     states until I finally settle at the state where all previously passing tests pass again and
     I've gotten one additional failing test to now pass.  This is not an unrealistic description,
-    and we have come a very long way, which has allowed to to focus more now on cleaning up the
+    and we have come a very long way, which has allowed to focus more now on cleaning up the
     code, but there are some areas where the code looks like spaghetti.  This is primarily in the
     section of "modified" types.  Tests have also been continually added to either provide the
     data from a new fuzzing experience or to create additional bounds on a new test case.
   Individual tests are found in MDMangBaseTest.  There are also tests in the MDMangListTest,
     which has various mechanisms for pulling test data from a file.  One of these has
-    mangled/demangled pairs, others might might just have mangled symbols only, but we are looking
+    mangled/demangled pairs, others might just have mangled symbols only, but we are looking
     for cases where the demangler could "blow up."  These file tests often provide a data record
     for creating a new individual test.
   There is also MDMangBaseTest, which uses MDMangBaseTestSuite as the junit-4 testSuite, but
@@ -100,7 +100,7 @@ MicrosoftDmang Architecture:
     representation.  All parsable items derive from MDParsableItem.
   
   MDObject: This class represents a fully presentable symbol as would be expected to be found in
-    a list of symbols for a binary.  It contains a name and and MDTypeinfo.  An MDObject could
+    a list of symbols for a binary.  It contains a name and MDTypeinfo.  An MDObject could
     probably be an abstract class (not one at the moment).  The MDObjectCPP (below) is the
     primary derived object of interest for us.  Other than MDObjectC, the others (MDObjectBracket
     and MDObjectCodeView) may or may not be true representations of the MSFT architecture.  (The
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/MDParsableItem.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/MDParsableItem.java
index ba13dbd1e3..987d1a223a 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/MDParsableItem.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/MDParsableItem.java
@@ -99,7 +99,7 @@ public abstract class MDParsableItem {
 	public final String toString() {
 		StringBuilder builder = new StringBuilder();
 		insert(builder);
-		// Following to to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
+		// Following to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
 		dmang.cleanOutput(builder);
 		return builder.toString();
 	}
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDArrayBasicType.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDArrayBasicType.java
index 5aa8350813..8fec5e93ac 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDArrayBasicType.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDArrayBasicType.java
@@ -65,7 +65,7 @@ public class MDArrayBasicType extends MDModifierType {
 			((MDFunctionType) refType).setFromModifier();
 		}
 		dt.insert(builder);
-		// Following to to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
+		// Following to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
 		dmang.cleanOutput(builder);
 		dmang.appendString(builder, arrayBuilder.toString());
 	}
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDBasedAttribute.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDBasedAttribute.java
index 9f615f9e0a..a40445d840 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDBasedAttribute.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDBasedAttribute.java
@@ -22,7 +22,7 @@ import mdemangler.naming.MDQualifiedName;
 // ***********NOTE: For "based5 bug" or "basedptr"**************
 //
 // Any modifier type that has a case '5' (representing that the
-// Modifier location is based on a a pointer location ("basedptr")
+// Modifier location is based on a pointer location ("basedptr")
 // is currently invalid in the Microsoft model.  There is a bug
 // (my words for it) where it seem that in this case, the notation
 // of an invalid option here is noted with a null character ('\0')
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDDataRightReferenceType.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDDataRightReferenceType.java
index c5249032dd..8ebb4814c5 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDDataRightReferenceType.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDDataRightReferenceType.java
@@ -53,7 +53,7 @@ public class MDDataRightReferenceType extends MDModifierType {
 		else {
 			cvMod.insert(builder);
 		}
-		// Following to to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
+		// Following to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
 		dmang.cleanOutput(builder);
 	}
 }
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDModifierType.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDModifierType.java
index e9702f14b5..7ab029ff84 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDModifierType.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDModifierType.java
@@ -200,7 +200,7 @@ public abstract class MDModifierType extends MDDataType {
 
 	protected void insertCVMod(StringBuilder builder) {
 		cvMod.insert(builder);
-		// Following to to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
+		// Following to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
 		dmang.cleanOutput(builder); // 20170714
 	}
 
@@ -266,7 +266,7 @@ public abstract class MDModifierType extends MDDataType {
 		// if (!isArray()) { //20170523
 		insertCVMod(builder);
 		// }
-		// Following to to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
+		// Following to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
 		// 20170714 dmang.cleanOutput(builder);
 		// 20170605 insertArrayString(builder); //only available for "data"
 		// refType
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDPointerType.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDPointerType.java
index 5d8001cf09..9bb605e3f5 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDPointerType.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDPointerType.java
@@ -51,7 +51,7 @@ public class MDPointerType extends MDModifierType {
 		else {
 			cvMod.insert(builder);
 		}
-		// Following to to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
+		// Following to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
 		dmang.cleanOutput(builder);
 	}
 }
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDReferenceType.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDReferenceType.java
index 2cac310d7a..cc0f29d4d7 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDReferenceType.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/datatype/modifier/MDReferenceType.java
@@ -56,7 +56,7 @@ public class MDReferenceType extends MDModifierType {
 		else {
 			cvMod.insert(builder);
 		}
-		// Following to to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
+		// Following to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
 		dmang.cleanOutput(builder);
 	}
 }
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/functiontype/MDFunctionType.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/functiontype/MDFunctionType.java
index f29bc000a6..b06fe42885 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/functiontype/MDFunctionType.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/functiontype/MDFunctionType.java
@@ -143,7 +143,7 @@ public class MDFunctionType extends MDType {
 		if (based != null) {
 			based.append(conventionBuilder);
 		}
-		// Following to to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
+		// Following to clean the Based5 "bug" if seen.  See comments in MDBasedAttribute.
 		dmang.cleanOutput(conventionBuilder);
 		dmang.insertString(builder, conventionBuilder.toString());
 		//This logic moved to MdSpecialName, so that we can get a qualified name with the
diff --git a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/object/MDObjectCPP.java b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/object/MDObjectCPP.java
index c529b55ec8..73e702b02f 100644
--- a/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/object/MDObjectCPP.java
+++ b/Ghidra/Features/MicrosoftDmang/src/main/java/mdemangler/object/MDObjectCPP.java
@@ -205,7 +205,7 @@ public class MDObjectCPP extends MDObject {
 
 		/**
 		 * Constructor for {@link MDHashedObject}
-		 * @param dmang The {@link MDMang} for which the work is performed and from from which
+		 * @param dmang The {@link MDMang} for which the work is performed and from which
 		 *  the information is parsed.
 		 */
 		public MDHashedObject(MDMang dmang) {
diff --git a/Ghidra/Features/MicrosoftDmang/src/test/java/mdemangler/MDMangBaseTest.java b/Ghidra/Features/MicrosoftDmang/src/test/java/mdemangler/MDMangBaseTest.java
index b592b64cbf..da92571f75 100644
--- a/Ghidra/Features/MicrosoftDmang/src/test/java/mdemangler/MDMangBaseTest.java
+++ b/Ghidra/Features/MicrosoftDmang/src/test/java/mdemangler/MDMangBaseTest.java
@@ -2603,7 +2603,7 @@ public class MDMangBaseTest extends AbstractGenericTest {
 	}
 
 	//This test seems to dictate that a function pointer should be elaborated internal to CVMod, where the based5 will eliminate all of the function context.
-	//  It also seems to indicate that the "int" portion would be the referred-to type and the rest of the function spec would be part of the the function info.
+	//  It also seems to indicate that the "int" portion would be the referred-to type and the rest of the function spec would be part of the function info.
 	//  Other information at one time, led me to believe that the return type of a function is special... need to rekinkdle those thoughts, but think related to nested
 	//  functions, such as function returning a function pointer..
 	@Category(MDMangFailingTestCategory.class)
diff --git a/Ghidra/Features/PDB/src/global/docs/README_PDB.html b/Ghidra/Features/PDB/src/global/docs/README_PDB.html
index 878659e821..8fa572b43e 100644
--- a/Ghidra/Features/PDB/src/global/docs/README_PDB.html
+++ b/Ghidra/Features/PDB/src/global/docs/README_PDB.html
@@ -74,7 +74,7 @@ of Visual Studio and DIA SDK.</li>
 <h3>Ensure you have <i>msdia140.dll</i> on your computer</h3>
 
 <p>First, check to see if you already have the <i>msdia140.dll</i> library installed on your system.  
-It is generally installed installed with Microsoft Visual Studio 2017 when C/C++ development support
+It is generally installed with Microsoft Visual Studio 2017 when C/C++ development support
 is included (<DISTRO> may be Community, Professional, or other VS 2017 distribution package name).
 <pre>
         C:\Program Files (x86)\Microsoft Visual Studio\2017\<DISTRO>\DIA SDK\bin\amd64\msdia140.dll
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/plugin/core/analysis/PdbUniversalAnalyzer.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/plugin/core/analysis/PdbUniversalAnalyzer.java
index 3b7e08c8ae..88e3134884 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/plugin/core/analysis/PdbUniversalAnalyzer.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/plugin/core/analysis/PdbUniversalAnalyzer.java
@@ -329,7 +329,7 @@ public class PdbUniversalAnalyzer extends AbstractAnalyzer {
 
 	//==============================================================================================
 	/**
-	 * A background command that performs additional PDB analysis after after other analysis
+	 * A background command that performs additional PDB analysis after other analysis
 	 *  works on function internals.  The first phase must have been run, as it reads the PDB
 	 *  and processes data types, retaining the information needed for this step.  Not what all
 	 *  processing we will do here and whether we might need additional commands like this one.
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb/ApplyStackVariables.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb/ApplyStackVariables.java
index 89d2f2dcd0..2f35af23e4 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb/ApplyStackVariables.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb/ApplyStackVariables.java
@@ -222,7 +222,7 @@ class ApplyStackVariables {
 			return null;
 		}
 		if (wrappedDataType.isZeroLengthArray()) {
-			log.appendMsg("PDB", "Zero length array not supported for for " + member.kind + ": " +
+			log.appendMsg("PDB", "Zero length array not supported for " + member.kind + ": " +
 				member.memberDataTypeName);
 			return null;
 		}
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/AbstractPdb.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/AbstractPdb.java
index 71606f0330..13f1e6ac2e 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/AbstractPdb.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/AbstractPdb.java
@@ -29,7 +29,7 @@ import ghidra.util.exception.CancelledException;
 import ghidra.util.task.TaskMonitor;
 
 /**
- * This class represents the the Windows PDB file.  This class is only suitable for reading; not
+ * This class represents the Windows PDB file.  This class is only suitable for reading; not
  *  for writing or modifying a PDB.
  *  <P>
  *  We have intended to implement according to the Microsoft PDB API (source); see the API for
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/PdbDebugInfo.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/PdbDebugInfo.java
index 7ebc5bd0bc..36848d6f9a 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/PdbDebugInfo.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/PdbDebugInfo.java
@@ -40,7 +40,7 @@ public abstract class PdbDebugInfo {
 	/**
 	 * These are Section Contribution Versions (SCV) 6.00 and 14.00.  We are building to the MSFT
 	 *  API.  They have chosen to mix in some magic along the way for these--perhaps to ensure that
-	 *  the the value will be a large unsigned 32-bit or a negative 32-bit.  We store the value
+	 *  the value will be a large unsigned 32-bit or a negative 32-bit.  We store the value
 	 *  in a java long, so that we can maintain the signed-ness of the values, if necessary.  MSFT
 	 *  is probably trying to prevent these values from being mimicked by data in the versions
 	 *  prior to v 6.00.
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/PdbLog.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/PdbLog.java
index f52f50a374..d022c457df 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/PdbLog.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/PdbLog.java
@@ -181,7 +181,7 @@ public class PdbLog {
 
 	/**
 	 * Returns the {@link Writer} for logging
-	 * @return a {@link Writer} for for logging
+	 * @return a {@link Writer} for logging
 	 */
 	private static Writer getWriter() throws IOException {
 		return enabled ? getFileWriter() : getNullWriter();
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/SymbolHashRecord.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/SymbolHashRecord.java
index 43b44cc1ee..a69c8fa3c0 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/SymbolHashRecord.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/SymbolHashRecord.java
@@ -28,7 +28,7 @@ public class SymbolHashRecord implements Comparable<SymbolHashRecord> {
 	public static int RECORD_SIZE = 8;
 
 	/**
-	 * Parses the contents of of this record.
+	 * Parses the contents of this record.
 	 * @param reader {@link PdbByteReader} from which to deserialize the data.
 	 * @throws PdbException Upon not enough data left to parse.
 	 */
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/TypeProgramInterfaceParser.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/TypeProgramInterfaceParser.java
index e7eafc8d1e..a68311663b 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/TypeProgramInterfaceParser.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/TypeProgramInterfaceParser.java
@@ -33,7 +33,7 @@ public class TypeProgramInterfaceParser {
 
 	public static final int TI40_ID = 19950410;    // 0x01306b4a
 	public static final int TI41_ID = 19951122;    // 0x01306e12
-	public static final int TI42_ID = 19951204;    // 0x01360e64 not in MSFT doc: in in MFCS42.PDB
+	public static final int TI42_ID = 19951204;    // 0x01360e64 not in MSFT doc: in MFCS42.PDB
 	public static final int TI50DEP_ID = 19960307; // 0x013091f3
 	public static final int TI50_ID = 19961031;    // 0x013094c7
 	public static final int TI70_ID = 19990903;    // 0x01310977
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/AbstractMsf.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/AbstractMsf.java
index 1c0eecc0f9..6c491f9672 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/AbstractMsf.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/AbstractMsf.java
@@ -25,7 +25,7 @@ import ghidra.util.exception.CancelledException;
 import ghidra.util.task.TaskMonitor;
 
 /**
- * This class represents the the Multi-Stream Format File used for Windows PDB files.
+ * This class represents the Multi-Stream Format File used for Windows PDB files.
  *  We have intended to implement to the Microsoft PDB API (source); see the API for truth.
  *  <P>
  *  Derived classes represents the real formats.  The file format represents a kind of
@@ -77,7 +77,7 @@ import ghidra.util.task.TaskMonitor;
  * The file directory is stored in stream 0, which has its information persisted in
  *  the header as described above.  However, for the newest format, the page (pointed
  *  to in the header) for the directory stream has an extra level of indirection.  The
- *  page contains page numbers, whose pages contain contain page numbers for the
+ *  page contains page numbers, whose pages contain page numbers for the
  *  directory stream.  Note that the page numbers listed on any of these pages have
  *  the following format on disk:
  * <PRE>
@@ -271,7 +271,7 @@ public abstract class AbstractMsf implements Msf {
 	}
 
 	/**
-	 * Returns the the mask used for masking off the upper bits of a value use to get the
+	 * Returns the mask used for masking off the upper bits of a value use to get the
 	 *  mod-page-size of the value (pageSizes must be power of two for this to work)
 	 * @return the mask
 	 */
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/Msf.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/Msf.java
index c66851d3d1..3781d48811 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/Msf.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/Msf.java
@@ -24,7 +24,7 @@ import ghidra.util.exception.CancelledException;
 import ghidra.util.task.TaskMonitor;
 
 /**
- * This class represents the the Multi-Stream Format File used for Windows PDB files.
+ * This class represents the Multi-Stream Format File used for Windows PDB files.
  *  We have intended to implement to the Microsoft PDB API (source); see the API for truth.
  *  <P>
  *  Derived classes represents the real formats.  The file format represents a kind of
@@ -76,7 +76,7 @@ import ghidra.util.task.TaskMonitor;
  * The file directory is stored in stream 0, which has its information persisted in
  *  the header as described above.  However, for the newest format, the page (pointed
  *  to in the header) for the directory stream has an extra level of indirection.  The
- *  page contains page numbers, whose pages contain contain page numbers for the
+ *  page contains page numbers, whose pages contain page numbers for the
  *  directory stream.  Note that the page numbers listed on any of these pages have
  *  the following format on disk:
  * <PRE>
@@ -226,7 +226,7 @@ public interface Msf extends AutoCloseable {
 	int getLog2PageSize();
 
 	/**
-	 * Returns the the mask used for masking off the upper bits of a value use to get the
+	 * Returns the mask used for masking off the upper bits of a value use to get the
 	 *  mod-page-size of the value (pageSizes must be power of two for this to work)
 	 * @return the mask
 	 */
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/MsfStreamTable.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/MsfStreamTable.java
index 26ba81e619..0b51cb5fc9 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/MsfStreamTable.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/msf/MsfStreamTable.java
@@ -24,7 +24,7 @@ import ghidra.app.util.bin.format.pdb2.pdbreader.PdbException;
 import ghidra.util.exception.CancelledException;
 
 /**
- * This class represents the the Stream Table used by the Multi-Stream Format File within
+ * This class represents the Stream Table used by the Multi-Stream Format File within
  *  Windows PDB files.
  *  We have intended to implement to the Microsoft PDB API (source); see the API for truth.
  */
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/symbol/PublicSymbolInternals32.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/symbol/PublicSymbolInternals32.java
index 57e8c4b9ae..d8fcea3a3a 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/symbol/PublicSymbolInternals32.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/symbol/PublicSymbolInternals32.java
@@ -127,7 +127,7 @@ public class PublicSymbolInternals32 extends AbstractSymbolInternals {
 	}
 
 	/**
-	 * Tells whether the the code is managed.
+	 * Tells whether the code is managed.
 	 * @return True if the code is managed.
 	 */
 	public boolean isManaged() {
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/AbstractIndirectVirtualBaseClassMsType.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/AbstractIndirectVirtualBaseClassMsType.java
index 0e14d3447d..21269788b0 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/AbstractIndirectVirtualBaseClassMsType.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/AbstractIndirectVirtualBaseClassMsType.java
@@ -63,7 +63,7 @@ public abstract class AbstractIndirectVirtualBaseClassMsType extends AbstractMsT
 	}
 
 	/**
-	 * Returns the offset of the base base pointer within the class.
+	 * Returns the offset of the base pointer within the class.
 	 * @return the offset;
 	 */
 	public BigInteger getBasePointerOffset() {
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/AbstractVirtualBaseClassMsType.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/AbstractVirtualBaseClassMsType.java
index 35c93efeca..82a490dc67 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/AbstractVirtualBaseClassMsType.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/AbstractVirtualBaseClassMsType.java
@@ -62,7 +62,7 @@ public abstract class AbstractVirtualBaseClassMsType extends AbstractMsType impl
 	}
 
 	/**
-	 * Returns the offset of the base base pointer within the class.
+	 * Returns the offset of the base pointer within the class.
 	 * @return the offset;
 	 */
 	public BigInteger getBasePointerOffset() {
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/ModifierExMsType.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/ModifierExMsType.java
index d7b809d29b..a50f8d58de 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/ModifierExMsType.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/ModifierExMsType.java
@@ -121,7 +121,7 @@ public class ModifierExMsType extends AbstractMsType {
 	}
 
 	/**
-	 * Tells whether the the {@link Modifier} is present.
+	 * Tells whether the {@link Modifier} is present.
 	 * @param modifier the {@link Modifier} to check.
 	 * @return True if the {@link Modifier} is present.
 	 */
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/MsProperty.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/MsProperty.java
index 3997328e13..037b1fc4f3 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/MsProperty.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/MsProperty.java
@@ -199,7 +199,7 @@ public class MsProperty extends AbstractParsableItem {
 	}
 
 	/**
-	 * Tells whether the the definition is scoped.
+	 * Tells whether the definition is scoped.
 	 * @return True if there definition is scoped.
 	 */
 	public boolean hasScopedDefinition() {
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/VtShapeMsType.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/VtShapeMsType.java
index edfb0470ad..2f7d913b51 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/VtShapeMsType.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/type/VtShapeMsType.java
@@ -45,7 +45,7 @@ public class VtShapeMsType extends AbstractMsType {
 		int byteVal = 0;
 		int value;
 		VtShapeDescriptorMsProperty descriptor;
-		// It seems that the upper nibble of the the byte is first and the lower nibble is
+		// It seems that the upper nibble of the byte is first and the lower nibble is
 		//  second; that is why we process as we do below (shifting for the first and masking
 		//  for the second).
 		for (int i = 0; i < count / 2; i++) {
@@ -88,7 +88,7 @@ public class VtShapeMsType extends AbstractMsType {
 	}
 
 	/**
-	 * Tells whether the the {@link VtShapeDescriptorMsProperty} is present.
+	 * Tells whether the {@link VtShapeDescriptorMsProperty} is present.
 	 * @param descriptor the {@link VtShapeDescriptorMsProperty} to check.
 	 * @return True if the {@link VtShapeDescriptorMsProperty} is present.
 	 */
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/AbstractBlockContextApplier.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/AbstractBlockContextApplier.java
index 855662e679..6a04796599 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/AbstractBlockContextApplier.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/AbstractBlockContextApplier.java
@@ -139,7 +139,7 @@ public abstract class AbstractBlockContextApplier extends MsSymbolApplier
 			}
 		}
 //		if (foundUnsupported) {
-//			pdbLogAndInfoMessage(this, "One or or more non-nestable symbols skipped for: " + name);
+//			pdbLogAndInfoMessage(this, "One or more non-nestable symbols skipped for: " + name);
 //		}
 
 		// comments
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/CppCompositeType.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/CppCompositeType.java
index f077fd5ec6..885cd6291b 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/CppCompositeType.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/CppCompositeType.java
@@ -777,7 +777,7 @@ public class CppCompositeType {
 		//  rearranges the order of the Base Class records such that they are not necessarily in
 		//  the order that the class was declared, and it seems that the member order follows the
 		//  order of the class hierarchy declaration.
-		// We use recursion and also also reordering so Base Classes always follow their children,
+		// We use recursion and also reordering so Base Classes always follow their children,
 		//  so with multiple virtual inheritance, a parent from multiple family lines will likely
 		//  get moved.
 		CategoryPath cn;
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/DefaultPdbApplicator.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/DefaultPdbApplicator.java
index 1f63b9dcc8..90f0053a05 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/DefaultPdbApplicator.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/DefaultPdbApplicator.java
@@ -804,7 +804,7 @@ public class DefaultPdbApplicator implements PdbApplicator {
 	}
 
 	/**
-	 * Returns the {@link CategoryPath} for a typedef with with the give {@link SymbolPath} and
+	 * Returns the {@link CategoryPath} for a typedef with the give {@link SymbolPath} and
 	 * module number; 1 <= moduleNumber <= {@link PdbDebugInfo#getNumModules()}
 	 * except that modeleNumber of 0 represents publics/globals
 	 * @param moduleNumber module number
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/LabelSymbolApplier.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/LabelSymbolApplier.java
index 8ff6eb45f7..5787cd49bb 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/LabelSymbolApplier.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/LabelSymbolApplier.java
@@ -125,7 +125,7 @@ public class LabelSymbolApplier extends MsSymbolApplier
 		// how function symbols are applied.  Perhaps we need to apply all GPROC symbols before
 		// we apply their internals (frames, local vars, labels, blocks) because some labels (here)
 		// are getting applied and becoming primary (because some have addresses that are located
-		// outside of the the address range of their GPROC, and will prevent another GPROC at the
+		// outside of the address range of their GPROC, and will prevent another GPROC at the
 		// same address as the label from becoming primary (e.g., $LN7 of cn3 at a750).
 		applicator.createSymbol(symbolAddress, label, false);
 	}
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/ModifierTypeApplier.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/ModifierTypeApplier.java
index 8c26c90079..6387eafe45 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/ModifierTypeApplier.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/ModifierTypeApplier.java
@@ -57,7 +57,7 @@ public class ModifierTypeApplier extends MsDataTypeApplier {
 
 		// If ghidra has modified types in the future, we will likely not perform a pass-through
 		//  of the underlying type.  We might actually need to do a fixup or be able to pass the
-		//  cycle-break information to a pointer or handle cycle-break information information
+		//  cycle-break information to a pointer or handle cycle-break information
 		//  in this modifier type.  Lots of things to consider.  Would we want to create a typedef
 		//  for modifier type as a short-gap solution??? Not sure.
 
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/MultiphaseDataTypeResolver.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/MultiphaseDataTypeResolver.java
index d0b5b7eb92..87905c2c93 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/MultiphaseDataTypeResolver.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/MultiphaseDataTypeResolver.java
@@ -94,7 +94,7 @@ public class MultiphaseDataTypeResolver {
 			monitor.checkCancelled();
 			DataType dataType = applicator.getDataType(recordToProcess);
 			// Resolve and re-store most types.  Normally we wouldn't want to resolve
-			// pointer types, but here it is preferred while we have the types in hand the the
+			// pointer types, but here it is preferred while we have the types in hand the
 			// PDB would have a type record if it wasn't used somewhere here or as the referred-to
 			// type of a typedef.
 			if (!(dataType instanceof BitFieldDataType)) {
@@ -120,7 +120,7 @@ public class MultiphaseDataTypeResolver {
 	void scheduleTodo(RecordNumber recordNumber) {
 		MsTypeApplier applier = applicator.getTypeApplier(recordNumber);
 		if (!(applier instanceof MsDataTypeApplier dataTypeApplier)) {
-			// Return without scheduling... only want to schedule that that have a legitimate
+			// Return without scheduling... only want to schedule those that have a legitimate
 			//  data type to store
 			return;
 		}
@@ -188,7 +188,7 @@ public class MultiphaseDataTypeResolver {
 		}
 
 		/**
-		 * Indicates if number number exists on stack
+		 * Indicates if number exists on stack
 		 * @param recordNumber the record number to check
 		 * @return {@code true} if exists
 		 */
@@ -227,7 +227,7 @@ public class MultiphaseDataTypeResolver {
 
 		/**
 		 * Peek at top node
-		 * @return the node's record number or {@code null} if if no nodes left
+		 * @return the node's record number or {@code null} if no nodes left
 		 */
 		RecordNumber peek() {
 			RecordNode node = getTop();
@@ -239,7 +239,7 @@ public class MultiphaseDataTypeResolver {
 
 		/**
 		 * Pop top node
-		 * @return the popped node's record number or {@code null} if if no nodes left
+		 * @return the popped node's record number or {@code null} if no nodes left
 		 */
 		RecordNumber pop() {
 			RecordNode node = getTop();
diff --git a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/PdbAddressManager.java b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/PdbAddressManager.java
index a00b67decb..060668e5f2 100644
--- a/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/PdbAddressManager.java
+++ b/Ghidra/Features/PDB/src/main/java/ghidra/app/util/pdb/pdbapplicator/PdbAddressManager.java
@@ -436,7 +436,7 @@ public class PdbAddressManager {
 	}
 
 	/**
-	 * Write the mapped address for a query address, where where the mapping is
+	 * Write the mapped address for a query address, where the mapping is
 	 *  derived by using a the address of a PDB symbol as the key and finding the address of
 	 *  a symbol in the program of the same "unique" name. This is accomplished using public
 	 *  mangled symbols.  If the program symbol came from the PDB, then it maps to itself.
diff --git a/Ghidra/Features/PDB/src/pdb/README.txt b/Ghidra/Features/PDB/src/pdb/README.txt
index 36b68a3269..3cc0effd5b 100644
--- a/Ghidra/Features/PDB/src/pdb/README.txt
+++ b/Ghidra/Features/PDB/src/pdb/README.txt
@@ -3,7 +3,7 @@ PDB.EXE
 The PDB.EXE executable delivered with Ghidra has been built with Visual Studio 2017 and has a
 dependency on the msdia140.dll in order to execute and process PDB files.  
 
-If it is necessary to rebuild the PDB.exe using a newer version of of the SDK, this can be done by 
+If it is necessary to rebuild the PDB.exe using a newer version of the SDK, this can be done by
 using the included Visual Studio project to rebuild the executable.  After opening the project
 solution file within Visual Studio simply re-target the solution to a new version of the SDK. 
 This can be accomplished by opening the solution file within Visual Studio, right-clicking on 
diff --git a/Ghidra/Features/PDB/src/pdb/cpp/print.cpp b/Ghidra/Features/PDB/src/pdb/cpp/print.cpp
index f8ab305e0f..0ca7baf991 100644
--- a/Ghidra/Features/PDB/src/pdb/cpp/print.cpp
+++ b/Ghidra/Features/PDB/src/pdb/cpp/print.cpp
@@ -33,7 +33,7 @@ std::wstring printVariant( VARIANT & v ) {
 			return v.bstrVal;
 		case VT_EMPTY://Indicates that a value was not specified. 
 			return L"empty";
-		case VT_NULL://Indicates a a null reference (Nothing in Visual Basic) value, similar to a null value in SQL. 
+		case VT_NULL://Indicates a null reference (Nothing in Visual Basic) value, similar to a null value in SQL.
 			return L"null";
 	}
 
diff --git a/Ghidra/Features/ProgramDiff/src/main/help/help/topics/Diff/Diff.htm b/Ghidra/Features/ProgramDiff/src/main/help/help/topics/Diff/Diff.htm
index d3062dd82e..a9ff8f9131 100644
--- a/Ghidra/Features/ProgramDiff/src/main/help/help/topics/Diff/Diff.htm
+++ b/Ghidra/Features/ProgramDiff/src/main/help/help/topics/Diff/Diff.htm
@@ -1153,7 +1153,7 @@
                 <td align="left" valign="top" width="100">
                   (Only available for Labels.) Merges labels from the second 
                   program into the tool's program for the selected code units 
-                  in the the Diff and set the primary labels as in the second 
+                  in the Diff and set the primary labels as in the second
                   program, if possible.<br>
                 </td>
               </tr>
diff --git a/Ghidra/Features/ProgramDiff/src/main/java/ghidra/app/plugin/core/diff/DiffController.java b/Ghidra/Features/ProgramDiff/src/main/java/ghidra/app/plugin/core/diff/DiffController.java
index 57e91586c3..fbea9bb9e5 100644
--- a/Ghidra/Features/ProgramDiff/src/main/java/ghidra/app/plugin/core/diff/DiffController.java
+++ b/Ghidra/Features/ProgramDiff/src/main/java/ghidra/app/plugin/core/diff/DiffController.java
@@ -219,7 +219,7 @@ public class DiffController {
 
 	/**
 	 * Ignore any differences in the specified address set.
-	 * @param p1AddressSet address set set of differences
+	 * @param p1AddressSet address set of differences
 	 * The addresses in this set should be derived from the p1 program.
 	 */
 	void ignore(AddressSetView p1AddressSet, TaskMonitor monitor) {
diff --git a/Ghidra/Features/ProgramGraph/src/main/help/help/topics/ProgramGraphPlugin/ProgramGraph.htm b/Ghidra/Features/ProgramGraph/src/main/help/help/topics/ProgramGraphPlugin/ProgramGraph.htm
index ed5570b7f1..4ef873ae0a 100644
--- a/Ghidra/Features/ProgramGraph/src/main/help/help/topics/ProgramGraphPlugin/ProgramGraph.htm
+++ b/Ghidra/Features/ProgramGraph/src/main/help/help/topics/ProgramGraphPlugin/ProgramGraph.htm
@@ -99,7 +99,7 @@
 
 	<BLOCKQUOTE>
       <P><IMG src="help/shared/note.png"> See the documentation for the specific graph display for
-      descriptions of how to to make selections and navigate the graph.</P>
+      descriptions of how to make selections and navigate the graph.</P>
     </BLOCKQUOTE>
 
     <BLOCKQUOTE>
diff --git a/Ghidra/Features/ProgramGraph/src/main/java/ghidra/graph/program/BlockModelGraphDisplayListener.java b/Ghidra/Features/ProgramGraph/src/main/java/ghidra/graph/program/BlockModelGraphDisplayListener.java
index 2acd7567ca..9c0d5e0d8d 100644
--- a/Ghidra/Features/ProgramGraph/src/main/java/ghidra/graph/program/BlockModelGraphDisplayListener.java
+++ b/Ghidra/Features/ProgramGraph/src/main/java/ghidra/graph/program/BlockModelGraphDisplayListener.java
@@ -28,7 +28,7 @@ import ghidra.util.exception.CancelledException;
 import ghidra.util.task.TaskMonitor;
 
 /**
- * {@link GraphDisplayListener} that handle events back and from from program graphs.
+ * {@link GraphDisplayListener} that handle events back and from program graphs.
  */
 public class BlockModelGraphDisplayListener extends AddressBasedGraphDisplayListener {
 
diff --git a/Ghidra/Features/ProgramGraph/src/main/java/ghidra/graph/program/ProgramGraphPlugin.java b/Ghidra/Features/ProgramGraph/src/main/java/ghidra/graph/program/ProgramGraphPlugin.java
index 34b4dd4db7..36513b2b2f 100644
--- a/Ghidra/Features/ProgramGraph/src/main/java/ghidra/graph/program/ProgramGraphPlugin.java
+++ b/Ghidra/Features/ProgramGraph/src/main/java/ghidra/graph/program/ProgramGraphPlugin.java
@@ -48,7 +48,7 @@ import ghidra.util.task.TaskLauncher;
  * the graphs that it generates. This plugin generates several different types of program graphs.
  * Both the "block flow" and "code flow" actions will generate a graph of basic block flows. The only
  * difference is that the "code flow" action generates a graph that
- * displays the assembly for for each basic block, whereas the "block flow" action generates a graph
+ * displays the assembly for each basic block, whereas the "block flow" action generates a graph
  * that displays the symbol or address at the start of the basic block.  This plugin also
  * generates call graphs, using either the default subroutine model or one that the user chooses.
  */
diff --git a/Ghidra/Features/Sarif/src/main/java/sarif/SarifProgramOptions.java b/Ghidra/Features/Sarif/src/main/java/sarif/SarifProgramOptions.java
index a90621d71f..187b595c63 100644
--- a/Ghidra/Features/Sarif/src/main/java/sarif/SarifProgramOptions.java
+++ b/Ghidra/Features/Sarif/src/main/java/sarif/SarifProgramOptions.java
@@ -630,14 +630,14 @@ public class SarifProgramOptions {
 	}
 
 	/**
-	 * @param b trueif the processor-defined labels should be anchored
+	 * @param b true if the processor-defined labels should be anchored
 	 */
 	public void setAnchorProcDefinedLabels(boolean b) {
 		anchorProcDefinedLabels = b;
 	}
 
 	/**
-	 * @return true true if the processor-defined labels should be anchored
+	 * @return true if the processor-defined labels should be anchored
 	 */
 	public boolean anchorProcDefinedLabels() {
 		return anchorProcDefinedLabels;
diff --git a/Ghidra/Features/VersionTracking/ghidra_scripts/AddVTSessionToVersionControl.java b/Ghidra/Features/VersionTracking/ghidra_scripts/AddVTSessionToVersionControl.java
index 7b1f1dc021..346466b936 100644
--- a/Ghidra/Features/VersionTracking/ghidra_scripts/AddVTSessionToVersionControl.java
+++ b/Ghidra/Features/VersionTracking/ghidra_scripts/AddVTSessionToVersionControl.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 //Script that enables user to add an existing Version Tracking Session to version control. This
-//is meant to to be used when project is a shared project and when running in headless mode 
+//is meant to be used when project is a shared project and when running in headless mode
 //since it is simple add a VTSession to version control from the project manager when running in
 //GUI mode.
 //@category Version Tracking
diff --git a/Ghidra/Features/VersionTracking/ghidra_scripts/CreateAppliedExactMatchingSessionScript.java b/Ghidra/Features/VersionTracking/ghidra_scripts/CreateAppliedExactMatchingSessionScript.java
index 0d449685c8..fabfd1618d 100644
--- a/Ghidra/Features/VersionTracking/ghidra_scripts/CreateAppliedExactMatchingSessionScript.java
+++ b/Ghidra/Features/VersionTracking/ghidra_scripts/CreateAppliedExactMatchingSessionScript.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 // An example of how to create Version Tracking session, run some correlators to find matching
-// data and and then save the session.
+// data and then save the session.
 //@category Examples.Version Tracking
 
 import java.util.Collection;
diff --git a/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/VT_AutoVT.html b/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/VT_AutoVT.html
index fe4cb4b479..6ba850033b 100644
--- a/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/VT_AutoVT.html
+++ b/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/VT_AutoVT.html
@@ -241,7 +241,7 @@
 			        <TR>
 			          <TD nowrap><b>Symbol Correlator Minimum Symbol Length</b></TD>
 			
-			          <TD>This option sets the the minimum symbol name length used to find function
+			          <TD>This option sets the minimum symbol name length used to find function
 	   				 	and data matches when running the Exact Symbol Correlator in Auto Version 
 	   				 	Tracking.
 			          </TD>
diff --git a/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/Version_Tracking_Intro.html b/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/Version_Tracking_Intro.html
index cc83b2b43f..e672085275 100644
--- a/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/Version_Tracking_Intro.html
+++ b/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/Version_Tracking_Intro.html
@@ -20,7 +20,7 @@
         Version Tracking refers to the process used by reverse engineers to identify matching code or data 
         between different software binaries.  One common use case is to version track two 
         different versions of the same binary.  Alternatively, version tracking techniques 
-        can be used to check for the presence of of a particular piece of code within a given 
+        can be used to check for the presence of a particular piece of code within a given
         binary of interest.       
         </P>
         
diff --git a/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/providers/VT_Apply_Options.html b/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/providers/VT_Apply_Options.html
index ed56c5791b..4025f896ba 100644
--- a/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/providers/VT_Apply_Options.html
+++ b/Ghidra/Features/VersionTracking/src/main/help/help/topics/VersionTrackingPlugin/providers/VT_Apply_Options.html
@@ -152,7 +152,7 @@
 		          			those already at the address in the destination program. Sets the 
 		          			primary label in the destination program to whatever label was the 
 		          			primary one in the source program.</li>
-		          			<li><b>Replace All</b> - Replaces all the labels at the the address in 
+						<li><b>Replace All</b> - Replaces all the labels at the address in
 		          			the destination program with those from the source program.</li>
 		          			<li><b>Replace Default Only</b> - Only apply labels from the 
 		          					source program to the destination program when the label 
diff --git a/Ghidra/Features/VersionTracking/src/main/java/ghidra/feature/vt/gui/actions/CreateVersionTrackingSessionAction.java b/Ghidra/Features/VersionTracking/src/main/java/ghidra/feature/vt/gui/actions/CreateVersionTrackingSessionAction.java
index b31b823e4c..94e93880ed 100644
--- a/Ghidra/Features/VersionTracking/src/main/java/ghidra/feature/vt/gui/actions/CreateVersionTrackingSessionAction.java
+++ b/Ghidra/Features/VersionTracking/src/main/java/ghidra/feature/vt/gui/actions/CreateVersionTrackingSessionAction.java
@@ -49,7 +49,7 @@ public class CreateVersionTrackingSessionAction extends DockingAction {
 			int result =
 				OptionDialog.showYesNoDialog(controller.getTool().getToolFrame(),
 					"Create New Session",
-					"This will close the the current session.  Do you want to continue?");
+					"This will close the current session.  Do you want to continue?");
 
 			if (result != OptionDialog.YES_OPTION) {
 				return;
diff --git a/Ghidra/Features/VersionTracking/src/main/java/ghidra/feature/vt/gui/util/AbstractVTMatchTableModel.java b/Ghidra/Features/VersionTracking/src/main/java/ghidra/feature/vt/gui/util/AbstractVTMatchTableModel.java
index ee43ba8ad0..32e3d8de9a 100644
--- a/Ghidra/Features/VersionTracking/src/main/java/ghidra/feature/vt/gui/util/AbstractVTMatchTableModel.java
+++ b/Ghidra/Features/VersionTracking/src/main/java/ghidra/feature/vt/gui/util/AbstractVTMatchTableModel.java
@@ -1136,7 +1136,7 @@ public abstract class AbstractVTMatchTableModel extends AddressBasedTableModel<V
 
 		@Override
 		public String getColumnDescription() {
-			return "Votes - The number of references from from previously accepted " +
+			return "Votes - The number of references from previously accepted " +
 				"matches that would suggest that this is a correct match";
 		}
 
diff --git a/Ghidra/Features/VersionTracking/src/test/java/ghidra/feature/vt/api/markupitem/VTMarkupItemResetTest.java b/Ghidra/Features/VersionTracking/src/test/java/ghidra/feature/vt/api/markupitem/VTMarkupItemResetTest.java
index f1d6c085f2..a0d4fd2caf 100644
--- a/Ghidra/Features/VersionTracking/src/test/java/ghidra/feature/vt/api/markupitem/VTMarkupItemResetTest.java
+++ b/Ghidra/Features/VersionTracking/src/test/java/ghidra/feature/vt/api/markupitem/VTMarkupItemResetTest.java
@@ -183,7 +183,7 @@ public class VTMarkupItemResetTest extends VTBaseTestCase {
 	public void testDBMarkupItemStorageResetDoesntHappen_ClearConsidered() {
 		//
 		// Test that the markup item storage is not removed the considered status is cleared, but
-		// the the destination address is set by the user.
+		// the destination address is set by the user.
 		//
 		VTMatchSet matchSet = db.createMatchSet(
 			createProgramCorrelator(db.getSourceProgram(), db.getDestinationProgram()));
diff --git a/Ghidra/Framework/DB/src/main/java/db/DBHandle.java b/Ghidra/Framework/DB/src/main/java/db/DBHandle.java
index 1f00f89d95..82bc8370b5 100644
--- a/Ghidra/Framework/DB/src/main/java/db/DBHandle.java
+++ b/Ghidra/Framework/DB/src/main/java/db/DBHandle.java
@@ -1179,7 +1179,7 @@ public class DBHandle {
 
 	/**
 	 * Returns size of buffers utilized within the underlying
-	 * buffer file.  This may be larger than than the requested 
+	 * buffer file.  This may be larger than the requested
 	 * buffer size.  This value may be used to instatiate a 
 	 * new BufferFile which is compatible with this database
 	 * when using the saveAs method.
diff --git a/Ghidra/Framework/DB/src/main/java/db/DBRecord.java b/Ghidra/Framework/DB/src/main/java/db/DBRecord.java
index bc20032194..c200003f9f 100644
--- a/Ghidra/Framework/DB/src/main/java/db/DBRecord.java
+++ b/Ghidra/Framework/DB/src/main/java/db/DBRecord.java
@@ -411,7 +411,7 @@ public class DBRecord implements Comparable<DBRecord> {
 
 	/**
 	 * Set the field to a null state.  For a non-sparse fixed-length column field this will
-	 * set the the value to zero and the null state will not be persisted when stored.
+	 * set the value to zero and the null state will not be persisted when stored.
 	 * @param colIndex field index
 	 * @throws IndexOutOfBoundsException if invalid columnIndex is specified
 	 */
diff --git a/Ghidra/Framework/DB/src/main/java/db/Field.java b/Ghidra/Framework/DB/src/main/java/db/Field.java
index 17200a6bf2..9eea4b4000 100644
--- a/Ghidra/Framework/DB/src/main/java/db/Field.java
+++ b/Ghidra/Framework/DB/src/main/java/db/Field.java
@@ -440,7 +440,7 @@ public abstract class Field implements Comparable<Field> {
 
 	/**
 	 * Performs a fast in-place comparison of this field value with another
-	 * field value stored within the specified buffer at the the specified offset.
+	 * field value stored within the specified buffer at the specified offset.
 	 * NOTE: This method will treat all null primitives as 0 although is not intended
 	 * to support such use.
 	 * @param buffer data buffer
diff --git a/Ghidra/Framework/DB/src/main/java/db/Transaction.java b/Ghidra/Framework/DB/src/main/java/db/Transaction.java
index f1a48fc24c..73b7ea3bfc 100644
--- a/Ghidra/Framework/DB/src/main/java/db/Transaction.java
+++ b/Ghidra/Framework/DB/src/main/java/db/Transaction.java
@@ -32,7 +32,7 @@ package db;
  * </pre>
  * 
  * <p>
- * Can be expressed using an an {@link Transaction} instead:
+ * Can be expressed using an {@link Transaction} instead:
  * 
  * <pre>
  * try (Transaction tx = dbHandle.openTransaction(dbErrorHandler)) {
diff --git a/Ghidra/Framework/DB/src/main/java/db/buffers/LocalBufferFile.java b/Ghidra/Framework/DB/src/main/java/db/buffers/LocalBufferFile.java
index c270647bc1..bf0c1ec84d 100644
--- a/Ghidra/Framework/DB/src/main/java/db/buffers/LocalBufferFile.java
+++ b/Ghidra/Framework/DB/src/main/java/db/buffers/LocalBufferFile.java
@@ -1062,7 +1062,7 @@ public class LocalBufferFile implements BufferFile {
 	 * @param in input block stream
 	 * @param out output block stream
 	 * @param monitor progress and cancel monitor
-	 * @throws CancelledException the the operation is cancelled
+	 * @throws CancelledException the operation is cancelled
 	 * @throws IOException if an I/O error occurs
 	 */
 	static void completeBlockStreamTransfer(InputBlockStream in, OutputBlockStream out,
diff --git a/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingInternals.html b/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingInternals.html
index 0cae3798a4..4e7b5330c3 100644
--- a/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingInternals.html
+++ b/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingInternals.html
@@ -23,7 +23,7 @@
     the application is using resource values as specified by the active theme. The theme specifies
     the Java Look and Feel, whether or not the overall theme is "dark" (which determines which default
     values to use) and any resource values which have been overridden specifically by that theme.
-    There are two types of of themes; built-in themes and file-based themes. Built-in
+    There are two types of themes; built-in themes and file-based themes. Built-in
     themes are implemented directly as sub-classes of <CODE>GTheme</CODE> and simply specify a 
     Java Look and Feel
     and whether or not the theme is "dark". There is one "built-in" theme for each supported
diff --git a/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingOverview.html b/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingOverview.html
index fa27ddaa11..880030db92 100644
--- a/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingOverview.html
+++ b/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingOverview.html
@@ -54,7 +54,7 @@
     		<LI>Replace hard-coded values with a level of indirection for colors, fonts, and icons
     		using property names/IDs
     		</LI>
-    		<LI>Create the concept of a theme that allows for the the property values to change
+		<LI>Create the concept of a theme that allows for the property values to change
     		as a group and along with the current Look and Feel in use
     		</LI>
     		<LI>Create an API that allows for the introduction of system-level properties that can
diff --git a/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingUserDocs.html b/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingUserDocs.html
index 0b3ce4947e..f3dde609b1 100644
--- a/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingUserDocs.html
+++ b/Ghidra/Framework/Docking/src/main/help/help/topics/Theming/ThemingUserDocs.html
@@ -15,7 +15,7 @@
     <P>The Theming feature allows users to customize the colors, fonts, and icons used throughout
     the application. The active theme determines the Java Look and Feel, whether the theme should
     use light or dark defaults, and any custom colors, fonts, and icons that override the default
-    values. Users can can easily switch between any of the built-in themes or any saved themes found
+    values. Users can easily switch between any of the built-in themes or any saved themes found
     in their home application directory</P>
 
     <P>Users can also edit and create their own themes using the Theme Editor. Custom themes are
@@ -86,7 +86,7 @@
     revert back to its previous value.</P>
 
     <P>If any values have been changed, the <B>Save</B> button will become enabled, allowing you to save
-    any changes you have made. (Pressing the <B>Dismiss</B> button will also give the the option to 
+    any changes you have made. (Pressing the <B>Dismiss</B> button will also give the option to
     save.) When saving, if the
     current theme is a built-in theme, you will first have to supply a new theme name. If the
     current theme is a not a built-in theme, you will have the option to overwrite the existing
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/ComponentNode.java b/Ghidra/Framework/Docking/src/main/java/docking/ComponentNode.java
index 720e04c394..9349310c14 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/ComponentNode.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/ComponentNode.java
@@ -211,7 +211,7 @@ class ComponentNode extends Node {
 	 * Removes the component from this node (and the manager), but possibly keeps an empty object as
 	 * a placeholder.
 	 * @param placeholder the placeholder object to be removed.
-	 * @param keepEmptyPlaceholder flag indicating to keep a placeholder placeholder object.
+	 * @param keepEmptyPlaceholder flag indicating to keep a placeholder object.
 	 */
 	void remove(ComponentPlaceholder placeholder, boolean keepEmptyPlaceholder) {
 		if (placeholder.isShowing()) {
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/ComponentProvider.java b/Ghidra/Framework/Docking/src/main/java/docking/ComponentProvider.java
index 90d12575d6..e617f893b8 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/ComponentProvider.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/ComponentProvider.java
@@ -676,7 +676,7 @@ public abstract class ComponentProvider implements HelpDescriptor, ActionContext
 	}
 
 	/**
-	 * Returns the name of a cascading sub-menu name to use when when showing this provider in the
+	 * Returns the name of a cascading sub-menu name to use when showing this provider in the
 	 * "Window" menu. If the group name is null, the item will appear in the top-level menu.
 	 * @return the menu group for this provider or null if this provider should appear in the
 	 * top-level menu.
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/DockingWindowManager.java b/Ghidra/Framework/Docking/src/main/java/docking/DockingWindowManager.java
index 950f784cd0..1f8bf396d5 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/DockingWindowManager.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/DockingWindowManager.java
@@ -512,7 +512,7 @@ public class DockingWindowManager implements PropertyChangeListener, Placeholder
 
 	/**
 	 * Adds a new component (vial the provider) to be managed by this docking window manager. The
-	 * component will be initially shown or hidden based on the the "show" parameter.
+	 * component will be initially shown or hidden based on the "show" parameter.
 	 *
 	 * @param provider the component provider.
 	 * @param show indicates whether or not the component should be initially shown.
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/WindowActionManager.java b/Ghidra/Framework/Docking/src/main/java/docking/WindowActionManager.java
index 6cd27b4bba..6942ba154a 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/WindowActionManager.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/WindowActionManager.java
@@ -175,7 +175,7 @@ public class WindowActionManager {
 	 * Returns the set of actions for this window.
 	 * 
 	 * <p>
-	 * Note this returns the the original passed-in actions and not the proxy actions that the
+	 * Note this returns the original passed-in actions and not the proxy actions that the
 	 * window uses.
 	 * 
 	 * @return the set of actions for this window
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/action/DockingAction.java b/Ghidra/Framework/Docking/src/main/java/docking/action/DockingAction.java
index 8bd435c985..aa637837ef 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/action/DockingAction.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/action/DockingAction.java
@@ -202,7 +202,7 @@ public abstract class DockingAction implements DockingActionIf {
 	 * If the client wants the action on all windows, then they can call {@link #shouldAddToAllWindows}
 	 * <P>
 	 * If the client wants the action to be on a window only when the window can produce
-	 * a certain context type, the the client should call
+	 * a certain context type, the client should call
 	 * {@link #addToWindowWhen(Class)}
 	 * <P>
 	 * Otherwise, by default, the action will only be on the main window.
@@ -253,7 +253,7 @@ public abstract class DockingAction implements DockingActionIf {
 	}
 
 	/**
-	 * Signals the the help system that this action does not need a help entry.   Some actions
+	 * Signals the help system that this action does not need a help entry.   Some actions
 	 * are so obvious that they do not require help, such as an action that renames a file.
 	 * <p>
 	 * The method should be sparsely used, as most actions should provide help.
@@ -679,7 +679,7 @@ public abstract class DockingAction implements DockingActionIf {
 	/**
 	 * Sets the ActionContext class for when this action should be added to a window
 	 * <P>
-	 * If this is set, the the action will only be added to windows that have providers
+	 * If this is set, the action will only be added to windows that have providers
 	 * that can produce an ActionContext that is appropriate for this action.
 	 * <P>
 	 * @param addToWindowContextClass the ActionContext class required to be producible by a
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/action/builder/MultiActionBuilder.java b/Ghidra/Framework/Docking/src/main/java/docking/action/builder/MultiActionBuilder.java
index 06eefc1153..29318f7492 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/action/builder/MultiActionBuilder.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/action/builder/MultiActionBuilder.java
@@ -28,7 +28,7 @@ import docking.menu.MultiActionDockingAction;
 public class MultiActionBuilder
 		extends AbstractActionBuilder<MultiActionDockingAction, ActionContext, MultiActionBuilder> {
 	/**
-	 * List of actions for the the MultActionDockingAction
+	 * List of actions for the MultActionDockingAction
 	 */
 	private List<DockingActionIf> actionList = Collections.emptyList();
 
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/dnd/GenericDataFlavor.java b/Ghidra/Framework/Docking/src/main/java/docking/dnd/GenericDataFlavor.java
index 4366f66bcf..590350547c 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/dnd/GenericDataFlavor.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/dnd/GenericDataFlavor.java
@@ -36,7 +36,7 @@ public class GenericDataFlavor extends DataFlavor {
 	 * @param representationClass the class used to transfer data in this flavor
 	 * @param humanPresentableName the human-readable string used to 
 	 * identify this flavor. If this parameter is null then the value of 
-	 * the the MIME Content Type is used.
+	 * the MIME Content Type is used.
 	 */
 	public GenericDataFlavor(Class<?> representationClass, String humanPresentableName) {
 		super(representationClass, humanPresentableName);
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/help/DockingHelpBroker.java b/Ghidra/Framework/Docking/src/main/java/docking/help/DockingHelpBroker.java
index 6298594202..d1de8bc940 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/help/DockingHelpBroker.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/help/DockingHelpBroker.java
@@ -233,7 +233,7 @@ public class DockingHelpBroker extends GHelpBroker {
 	 *       then just give up.
 	 *
 	 * @param area the area to call out
-	 * @param callCount the number number of times this method has already been called
+	 * @param callCount the number of times this method has already been called
 	 */
 	private void doCalloutReference(final Rectangle area, int callCount) {
 
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/test/AbstractDockingTest.java b/Ghidra/Framework/Docking/src/main/java/docking/test/AbstractDockingTest.java
index 53153bf18e..2fc3d4375f 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/test/AbstractDockingTest.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/test/AbstractDockingTest.java
@@ -1349,7 +1349,7 @@ public abstract class AbstractDockingTest extends AbstractGuiTest {
 	 *
 	 * @param toggleAction the action
 	 * @param context the context for the action
-	 * @param selected true if the action is be be selected; false for not selected
+	 * @param selected true if the action is selected; false for not selected
 	 */
 	public static void setToggleActionSelected(ToggleDockingActionIf toggleAction,
 			ActionContext context, boolean selected) {
@@ -1362,7 +1362,7 @@ public abstract class AbstractDockingTest extends AbstractGuiTest {
 	 *
 	 * @param toggleAction the action
 	 * @param context the context for the action
-	 * @param selected true if the action is be be selected; false for not selected
+	 * @param selected true if the action is selected; false for not selected
 	 * @param wait true to wait for the action to finish; false to invoke later
 	 */
 	public static void setToggleActionSelected(ToggleDockingActionIf toggleAction,
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/test/TestKeyEventDispatcher.java b/Ghidra/Framework/Docking/src/main/java/docking/test/TestKeyEventDispatcher.java
index 1c7be7b8ec..1d8070d547 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/test/TestKeyEventDispatcher.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/test/TestKeyEventDispatcher.java
@@ -37,7 +37,7 @@ public class TestKeyEventDispatcher {
 	 * 
 	 * @param event the event
 	 * @return false if the event was not handled by this class and should continue to be
-	 *         processed; true if the the event was handled and no further processing is needed
+	 *         processed; true if the event was handled and no further processing is needed
 	 */
 	public static boolean dispatchKeyEvent(KeyEvent event) {
 
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/theme/gui/ProtectedIcon.java b/Ghidra/Framework/Docking/src/main/java/docking/theme/gui/ProtectedIcon.java
index 6c9ab3d276..0ba552cf2b 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/theme/gui/ProtectedIcon.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/theme/gui/ProtectedIcon.java
@@ -26,7 +26,7 @@ import resources.ResourceManager;
 /**
  * A wrapper for an icon that suppresses errors. Some Icons that are mined from a 
  * {@link LookAndFeel} have specialized uses and will throw exceptions if used outside
- * their intended component. This class is used when trying to show them in the the theme
+ * their intended component. This class is used when trying to show them in the theme
  * editor table.
  */
 public class ProtectedIcon implements Icon {
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/DropDownTextField.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/DropDownTextField.java
index 3a3878ffda..d7f52f2575 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/DropDownTextField.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/DropDownTextField.java
@@ -671,7 +671,7 @@ public class DropDownTextField<T> extends JTextField implements GComponent {
 	/**
 	 * Returns the user's selection or null if the user has not made a selection.
 	 * <p>
-	 * Note: the the value returned from this method may not match the text in the field in the
+	 * Note: the value returned from this method may not match the text in the field in the
 	 * case that the user has selected a value and then typed some text.
 	 *
 	 * @return the user's selection or null if the user has not made a selection.
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/FindDialog.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/FindDialog.java
index c19f10d8ab..8128bae81f 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/FindDialog.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/FindDialog.java
@@ -189,7 +189,7 @@ public class FindDialog extends ReusableDialogComponentProvider {
 		//
 		// At this point, we wrapped our search and did *not* find a match.  This can only
 		// happen if there is no matching text anywhere in the document, as after wrapping
-		// will will again find the previous match, if it exists.
+		// will again find the previous match, if it exists.
 		//
 		notifyUser("Not found");
 	}
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/ListSelectionTableDialog.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/ListSelectionTableDialog.java
index 05e0c2a2dd..ee7728e359 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/ListSelectionTableDialog.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/ListSelectionTableDialog.java
@@ -131,7 +131,7 @@ public class ListSelectionTableDialog<T> extends DialogComponentProvider {
 	}
 
 	/**
-	 * Calling this method does does not work correctly when used with 
+	 * Calling this method does not work correctly when used with
 	 * {@link #show(Component)} or {@link #showSelectMultiple(Component)}.   To use this method, you
 	 * must show the dialog by calling: 
 	 * <pre>
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/AccessibleFieldPanelDelegate.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/AccessibleFieldPanelDelegate.java
index 1a68d7387e..d6aff8f078 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/AccessibleFieldPanelDelegate.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/AccessibleFieldPanelDelegate.java
@@ -33,7 +33,7 @@ import docking.widgets.fieldpanel.support.*;
  * the FieldPanel class. The AccessibleFieldPanel has to be declared as an inner class because
  * it needs to extends AccessibleJComponent which is a non-static inner class of JComponent. 
  * However, we did not want to put all the logic in there as FieldPanel is already an
- * extremely large and complex class. Also, by delegating the the logic, testing is much
+ * extremely large and complex class. Also, by delegating the logic, testing is much
  * easier.
  * <P>
  * The model for accessibility for the FieldPanel is a bit complex because
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/FieldPanel.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/FieldPanel.java
index 5a4e9f1d47..1e2f585d99 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/FieldPanel.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/FieldPanel.java
@@ -511,9 +511,9 @@ public class FieldPanel extends JPanel
 	}
 
 	/**
-	 * Returns the color color used as the background for highlighted items.
+	 * Returns the color used as the background for highlighted items.
 	 * 
-	 * @return the color color used as the background for highlighted items.
+	 * @return the color used as the background for highlighted items.
 	 */
 	public Color getHighlightColor() {
 		return paintContext.getHighlightColor();
@@ -1953,14 +1953,14 @@ public class FieldPanel extends JPanel
 		}
 
 		/**
-		 * Checks if the the "shift" modifier is on and the "control" modifier is not.
+		 * Checks if the "shift" modifier is on and the "control" modifier is not.
 		 */
 		private boolean isAddToContiguousSelectionActivator(MouseEvent e) {
 			return (e.isShiftDown() && !DockingUtils.isControlModifier(e));
 		}
 
 		/**
-		 * Checks if the the "control" modifier is on and the shift modifier is not.
+		 * Checks if the "control" modifier is on and the shift modifier is not.
 		 */
 		private boolean isAddRemoveDisjointSelectionActivator(MouseEvent e) {
 			return DockingUtils.isControlModifier(e) && !e.isShiftDown();
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/Layout.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/Layout.java
index 63112cd1ce..8354de2e1f 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/Layout.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/Layout.java
@@ -94,7 +94,7 @@ public interface Layout {
 	/**
 	 * Returns a rectangle which bounds the given cursor position.
 	 * @param fieldNum the index of the field containing the cursor position.
-	 * @param row the the text row in the field containing the cursor position.
+	 * @param row the text row in the field containing the cursor position.
 	 * @param col the character position in the row containing the cursor position.
 	 */
 	Rectangle getCursorRect(int fieldNum, int row, int col);
@@ -165,7 +165,7 @@ public interface Layout {
 	int getScrollableUnitIncrement(int topOfScreen, int direction);
 
 	/**
-	 * Returns true if the the given yPos lies within this layout.
+	 * Returns true if the given yPos lies within this layout.
 	 * @param yPos the vertical coordinate to check if in this layout.
 	 */
 	boolean contains(int yPos);
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/listener/FieldInputListener.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/listener/FieldInputListener.java
index 1b0f44c667..cb4f6e619a 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/listener/FieldInputListener.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/listener/FieldInputListener.java
@@ -27,7 +27,7 @@ import docking.widgets.fieldpanel.field.Field;
 public interface FieldInputListener {
 
 	/**
-	 * Called the the FieldPanel receives a KeyEvent that it doesn't handle.
+	 * Called the FieldPanel receives a KeyEvent that it doesn't handle.
 	 * @param ev The KeyEvent generated when the user presses a key.
 	 * @param index the index of the layout the cursor was on when the key was pressed.
 	 * @param fieldNum the field index of the field the cursor was on when the key was
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/support/FieldHighlightFactory.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/support/FieldHighlightFactory.java
index 49667a881f..4d6045fafe 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/support/FieldHighlightFactory.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/support/FieldHighlightFactory.java
@@ -18,7 +18,7 @@ package docking.widgets.fieldpanel.support;
 import docking.widgets.fieldpanel.field.Field;
 
 /**
- * A highlighter for for {@link Field}s.
+ * A highlighter for {@link Field}s.
  */
 public interface FieldHighlightFactory {
 
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/support/ViewerPosition.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/support/ViewerPosition.java
index e067d1fe94..132389fcdf 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/support/ViewerPosition.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/fieldpanel/support/ViewerPosition.java
@@ -35,7 +35,7 @@ public class ViewerPosition implements Serializable {
 	 * @param index the index of the layout displayed at the top of the screen.
 	 * @param xOffset The horizontal scroll position (NOT CURRENTLY USED)
 	 * @param yOffset the vertical position of the layout at the top of the screen.
-	 * If the the layout is totally visible, then the yOffset will be 0. Otherwise,
+	 * If the layout is totally visible, then the yOffset will be 0. Otherwise,
 	 * it will be &lt; 0 indicating that it begins above the top of the screen.
 	 */
     public ViewerPosition(BigInteger index, int xOffset, int yOffset) {
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/filter/FilterTextField.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/filter/FilterTextField.java
index 172f3937b2..ae1b00defc 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/filter/FilterTextField.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/filter/FilterTextField.java
@@ -305,7 +305,7 @@ public class FilterTextField extends JPanel {
 	}
 
 	/**
-	 * Sets the accessible name prefix for for the focusable components in the filter panel.
+	 * Sets the accessible name prefix for the focusable components in the filter panel.
 	 * @param prefix the base name for these components. A suffix will be added to further
 	 * describe the sub component.
 	 */
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/pathmanager/PathnameTablePanel.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/pathmanager/PathnameTablePanel.java
index a1e62e3d6f..90440a53a2 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/pathmanager/PathnameTablePanel.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/pathmanager/PathnameTablePanel.java
@@ -70,7 +70,7 @@ public class PathnameTablePanel extends JPanel {
 	 * @param enableEdits true to allow editing of entries <em>directly in the table</em>, i.e., via
 	 *            the cell editor. The add and remove buttons still allow modification of the list.
 	 * @param addToTop true if the add button should add entries to the top of the list. False to
-	 *            add entries to the bottom. This behavior is overridden if if {@code ordered} is
+	 *            add entries to the bottom. This behavior is overridden if {@code ordered} is
 	 *            false.
 	 * @param ordered true if the order of entries matters. If so, up and down buttons are provided
 	 *            so the user may arrange the entries. If not, entries are sorted alphabetically.
@@ -92,7 +92,7 @@ public class PathnameTablePanel extends JPanel {
 	 * @param enableEdits true to allow editing of entries <em>directly in the table</em>, i.e., via
 	 *            the cell editor. The add and remove buttons still allow modification of the list.
 	 * @param addToTop true if the add button should add entries to the top of the list. False to
-	 *            add entries to the bottom. This behavior is overridden if if {@code ordered} is
+	 *            add entries to the bottom. This behavior is overridden if {@code ordered} is
 	 *            false.
 	 * @param ordered true if the order of entries matters. If so, up and down buttons are provided
 	 *            so the user may arrange the entries. If not, entries are sorted alphabetically.
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/shapes/PopupWindowPlacerBuilder.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/shapes/PopupWindowPlacerBuilder.java
index 92702d45d2..2750c435a3 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/shapes/PopupWindowPlacerBuilder.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/shapes/PopupWindowPlacerBuilder.java
@@ -315,7 +315,7 @@ public class PopupWindowPlacerBuilder {
 				}
 			}
 			else {
-				// Only looking from greater/lesser to the the center.
+				// Only looking from greater/lesser to the center.
 				add(new EdgePopupPlacer(major, minors[0], Location.CENTER));
 			}
 		}
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/tab/GTabPanel.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/tab/GTabPanel.java
index 56328dde0b..c0a8f571e5 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/tab/GTabPanel.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/tab/GTabPanel.java
@@ -349,7 +349,7 @@ public class GTabPanel<T> extends JPanel {
 
 	/**
 	 * Sets the predicate that will be called before removing a tab via the gui close control. Note
-	 * that that tab panel's default action is to remove the tab value, but if you set your own
+	 * that the tab panel's default action is to remove the tab value, but if you set your own
 	 * consumer, you have the responsibility to remove the value.
 	 * @param closeTabConsumer the consumer called when the close gui control is clicked.
 	 */
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/tabbedpane/DockingTabRenderer.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/tabbedpane/DockingTabRenderer.java
index 82b564489d..6ded47a257 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/tabbedpane/DockingTabRenderer.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/tabbedpane/DockingTabRenderer.java
@@ -240,7 +240,7 @@ public class DockingTabRenderer extends JPanel {
 	/**
 	 * A class to handle mouse events specifically for BasicTabbedPaneUI$TabContainer, which does
 	 * not forward mouse events on to the tabbed pane.  When using custom tab renderers, which 
-	 * we are, tabbed panes that are larger than the the renderer will not get mouse events that
+	 * we are, tabbed panes that are larger than the renderer will not get mouse events that
 	 * are over the tab, but not the renderer.
 	 */
 	private class TabContainerForwardingMouseListener extends MouseAdapter {
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/FilterTypeConverter.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/FilterTypeConverter.java
index 760d196b2d..c2ada45e7f 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/FilterTypeConverter.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/FilterTypeConverter.java
@@ -18,7 +18,7 @@ package docking.widgets.table;
 import ghidra.docking.settings.Settings;
 
 /**
- * An interface that is meant to take the column type of of a {@link DynamicTableColumn}
+ * An interface that is meant to take the column type of a {@link DynamicTableColumn}
  * and convert it to the specified type.   This class is meant to be used when the dynamic 
  * filtering mechanism is not correctly filtering a column, usually because the default filter
  * for the column type does not match what the renderer is displaying in the table.
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/TableRowMapper.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/TableRowMapper.java
index 56a08b6810..63a95efc1f 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/TableRowMapper.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/TableRowMapper.java
@@ -29,7 +29,7 @@ import utilities.util.reflection.ReflectionUtilities;
  * for table models that have row types that are easily converted to other more generic types.
  * <p>
  * This interface is an ExtensionPoint so that once created, they will be ingested automatically
- * by Ghidra.  Once discovered, these mappers will be used to provide dynamic columns to to 
+ * by Ghidra.  Once discovered, these mappers will be used to provide dynamic columns to
  * tables with row types that match <code>ROW_TYPE</code>.
  *
  * @param <ROW_TYPE> The row type of a given table model
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/constraint/ColumnConstraint.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/constraint/ColumnConstraint.java
index 0dd997e2b6..a35f94c563 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/constraint/ColumnConstraint.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/constraint/ColumnConstraint.java
@@ -30,7 +30,7 @@ public interface ColumnConstraint<T> extends Comparable<ColumnConstraint<T>> {
 	 * otherwise
 	 *
 	 * @param value the column value to be tested.
-	 * @param context provides additional information about the the table and its data. This
+	 * @param context provides additional information about the table and its data. This
 	 * allows the filter to base its decision on information other than just the column value.
 	 * @return true if the column value passes the constraint, false otherwise
 	 */
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/constraint/MappedColumnConstraint.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/constraint/MappedColumnConstraint.java
index 1d8c899464..da0ef86b29 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/constraint/MappedColumnConstraint.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/constraint/MappedColumnConstraint.java
@@ -36,7 +36,7 @@ public class MappedColumnConstraint<T, M> implements ColumnConstraint<T> {
 
 	/**
 	 * Constructs a new Mapped ColumnConstraint
-	 * @param mapper a mapper from from the column type to a mapped type.
+	 * @param mapper a mapper from the column type to a mapped type.
 	 * @param delegate the column constraint of the mapped type.
 	 */
 	public MappedColumnConstraint(ColumnTypeMapper<T, M> mapper, ColumnConstraint<M> delegate) {
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/threaded/TableUpdateJob.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/threaded/TableUpdateJob.java
index ba4e1cfe99..4013c18bb0 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/threaded/TableUpdateJob.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/threaded/TableUpdateJob.java
@@ -36,7 +36,7 @@ import ghidra.util.task.TaskMonitor;
  * </ol>
  * <p>
  * Not all the update functions are performed on a run of a TableUpdateJob.  If the reloadData flag is
- * not set, the the data is just copied from the model's current list, instead of calling the model's
+ * not set, the data is just copied from the model's current list, instead of calling the model's
  * loadData() method. If the sortComparator is null,
  * then the data is not sorted (for example, when only filtering needs to be done).  If there
  * are no add/removes in the list, then that step does nothing.
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/tree/CoreGTreeNode.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/tree/CoreGTreeNode.java
index 72905d7150..f2cf3bff08 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/tree/CoreGTreeNode.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/tree/CoreGTreeNode.java
@@ -330,7 +330,7 @@ abstract class CoreGTreeNode implements Cloneable {
 	/**
 	 * Returns true if the node is in the process of loading its children.  For nodes
 	 * that directly extend GTreeNode, this is always false.  See {@link GTreeSlowLoadingNode}
-	 * for information on nodes that that can be in the progress of loading.
+	 * for information on nodes that can be in the progress of loading.
 	 * @param childList the list to test.
 	 * @return true if the node is in the progress of loading its children.
 	 */
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/tree/GTree.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/tree/GTree.java
index 516a39c1de..0f484c695a 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/tree/GTree.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/tree/GTree.java
@@ -66,7 +66,7 @@ public class GTree extends JPanel implements BusyListener {
 
 	/**
 	 * This is the root node of the tree's data model. It may or may not be the root node that is
-	 * currently being displayed by the tree. If there is currently a filter applied, then then the
+	 * currently being displayed by the tree. If there is currently a filter applied, then the
 	 * displayed root node will be a clone whose children have been trimmed to only those that match
 	 * the filter. By keeping this variable around, we can give this node to clients, regardless of
 	 * the root node visible in the tree.
@@ -1611,7 +1611,7 @@ public class GTree extends JPanel implements BusyListener {
 
 		/**
 		 * Calling setSelectedPaths on GTree queues the selection for after any currently scheduled
-		 * tasks. This method sets the selected path immediately and does not wait for for scheduled
+		 * tasks. This method sets the selected path immediately and does not wait for scheduled
 		 * tasks.
 		 *
 		 * @param path the path to select.
diff --git a/Ghidra/Framework/Docking/src/main/java/docking/widgets/values/GValuesMap.java b/Ghidra/Framework/Docking/src/main/java/docking/widgets/values/GValuesMap.java
index 4d24a70cd9..34e632e37b 100644
--- a/Ghidra/Framework/Docking/src/main/java/docking/widgets/values/GValuesMap.java
+++ b/Ghidra/Framework/Docking/src/main/java/docking/widgets/values/GValuesMap.java
@@ -128,7 +128,7 @@ public class GValuesMap {
 	 * AbstractValue types as this map.
 	 * @param otherMap The GValuesMap to copy values from
 	 * @throws IllegalArgumentException if the given map does not have exactly the same set of
-	 * names and types as this this map
+	 * names and types as this map
 	 */
 	@SuppressWarnings("unchecked")
 	public void copyValues(GValuesMap otherMap) {
diff --git a/Ghidra/Framework/Docking/src/main/java/ghidra/util/table/column/GColumnRenderer.java b/Ghidra/Framework/Docking/src/main/java/ghidra/util/table/column/GColumnRenderer.java
index 73f9b2f4fb..70c979b936 100644
--- a/Ghidra/Framework/Docking/src/main/java/ghidra/util/table/column/GColumnRenderer.java
+++ b/Ghidra/Framework/Docking/src/main/java/ghidra/util/table/column/GColumnRenderer.java
@@ -40,7 +40,7 @@ import ghidra.util.exception.AssertException;
  *      
  *      <P>The default transformer turns items to strings by, in order,:
  *      <OL>
- *      	<LI>checking the the <b>column</b> renderer's 
+ *      	<LI>checking the <b>column</b> renderer's
  *      		{@link #getFilterString(Object, Settings)},if a column renderer is installed
  *      	</LI>
  *      	<LI>checking to see if the column value is an instance of {@link DisplayStringProvider}
diff --git a/Ghidra/Framework/Docking/src/main/java/ghidra/util/task/TaskRunner.java b/Ghidra/Framework/Docking/src/main/java/ghidra/util/task/TaskRunner.java
index e03a952a67..7fa09a813d 100644
--- a/Ghidra/Framework/Docking/src/main/java/ghidra/util/task/TaskRunner.java
+++ b/Ghidra/Framework/Docking/src/main/java/ghidra/util/task/TaskRunner.java
@@ -130,7 +130,7 @@ class TaskRunner {
 
 	private void taskFinished() {
 
-		// This will release the the task dialog.  We passed this latch to the dialog at
+		// This will release the task dialog.  We passed this latch to the dialog at
 		// construction so that does not block until we notify it in the Swing.runLater() below.
 		// If we only rely on that notification, then the notification will be blocked when the
 		// dialog is waiting in the Swing thread.
diff --git a/Ghidra/Framework/Docking/src/test.slow/java/docking/widgets/table/threaded/IncrementalThreadedTableTest.java b/Ghidra/Framework/Docking/src/test.slow/java/docking/widgets/table/threaded/IncrementalThreadedTableTest.java
index f30a2034fb..7a194c07cb 100644
--- a/Ghidra/Framework/Docking/src/test.slow/java/docking/widgets/table/threaded/IncrementalThreadedTableTest.java
+++ b/Ghidra/Framework/Docking/src/test.slow/java/docking/widgets/table/threaded/IncrementalThreadedTableTest.java
@@ -176,7 +176,7 @@ public class IncrementalThreadedTableTest extends AbstractThreadedTableTest {
 	@Test
 	public void testNoShowPendingWhileLoading() throws Exception {
 		//
-		// Tests that the the pending panel is not shown while we are in the middle of an 
+		// Tests that the pending panel is not shown while we are in the middle of an
 		// incremental load.  In non-incremental models this is not an issue, as the model 
 		// itself will not send out pending events while a load is taking place (the data is 
 		// just added to the current load process).  However, in the incremental case, the model's
diff --git a/Ghidra/Framework/Emulation/src/main/java/ghidra/app/emulator/state/RegisterState.java b/Ghidra/Framework/Emulation/src/main/java/ghidra/app/emulator/state/RegisterState.java
index dce41b3ca5..d7cf057391 100644
--- a/Ghidra/Framework/Emulation/src/main/java/ghidra/app/emulator/state/RegisterState.java
+++ b/Ghidra/Framework/Emulation/src/main/java/ghidra/app/emulator/state/RegisterState.java
@@ -35,7 +35,7 @@ public interface RegisterState {
 	 * Check if the register is initialized
 	 * 
 	 * @param key the register name
-	 * @return a list (used an an optional) containing at most the one initialization state. True if
+	 * @return a list (used an optional) containing at most the one initialization state. True if
 	 *         initialized, false if not. Empty if unspecified.
 	 */
 	public List<Boolean> isInitialized(String key);
diff --git a/Ghidra/Framework/Generic/src/main/java/generic/concurrent/ConcurrentQBuilder.java b/Ghidra/Framework/Generic/src/main/java/generic/concurrent/ConcurrentQBuilder.java
index e41233be05..8849dacbf9 100644
--- a/Ghidra/Framework/Generic/src/main/java/generic/concurrent/ConcurrentQBuilder.java
+++ b/Ghidra/Framework/Generic/src/main/java/generic/concurrent/ConcurrentQBuilder.java
@@ -155,7 +155,7 @@ public class ConcurrentQBuilder<I, R> {
 	 * In this case, a total count of work jobs is maintained by the queue.  As items are
 	 * completed, the queue will update the monitor provided to it at construction time to reflect
 	 * the number of jobs completed as work is done.  On the other hand, some clients have
-	 * known known number of jobs to complete, but simply add work to the queue as it arrives.
+	 * a known number of jobs to complete, but simply add work to the queue as it arrives.
 	 * In that case, the client should update its monitor for progress, as the queue cannot
 	 * do so in a meaningful way.
 	 *
diff --git a/Ghidra/Framework/Generic/src/main/java/generic/concurrent/QProgressListener.java b/Ghidra/Framework/Generic/src/main/java/generic/concurrent/QProgressListener.java
index 5cbeb61ec4..93f6f756f2 100644
--- a/Ghidra/Framework/Generic/src/main/java/generic/concurrent/QProgressListener.java
+++ b/Ghidra/Framework/Generic/src/main/java/generic/concurrent/QProgressListener.java
@@ -63,7 +63,7 @@ public interface QProgressListener<I> {
 	void progressMessageChanged(long id, I item, String message);
 
 	/**
-	 * Notification the the max progress value has changed.
+	 * Notification the max progress value has changed.
 	 * @param id the id of the item that has completed processing.
 	 * @param item the item that was being processed when the worker changed the max progress.
 	 * @param maxProgress the max value of the progress for this task.
diff --git a/Ghidra/Framework/Generic/src/main/java/generic/io/JarWriter.java b/Ghidra/Framework/Generic/src/main/java/generic/io/JarWriter.java
index 1c82596167..cca4dbb3f8 100644
--- a/Ghidra/Framework/Generic/src/main/java/generic/io/JarWriter.java
+++ b/Ghidra/Framework/Generic/src/main/java/generic/io/JarWriter.java
@@ -32,7 +32,7 @@ public class JarWriter {
 	private String[] excludedExtensions;
 
 	/**
-	 * @param jarOut the the jar file output stream the zip entries are
+	 * @param jarOut the jar file output stream the zip entries are
 	 * to be written to.
 	 */
 	public JarWriter(JarOutputStream jarOut) {
diff --git a/Ghidra/Framework/Generic/src/main/java/generic/stl/IteratorSTL.java b/Ghidra/Framework/Generic/src/main/java/generic/stl/IteratorSTL.java
index 02182a9898..25e01bb136 100644
--- a/Ghidra/Framework/Generic/src/main/java/generic/stl/IteratorSTL.java
+++ b/Ghidra/Framework/Generic/src/main/java/generic/stl/IteratorSTL.java
@@ -38,7 +38,7 @@ public interface IteratorSTL<T> {
 	/**
 	 * Advances the iterator to the next position.
 	 * @return a reference to the iterator itself
-	 * @throws IndexOutOfBoundsException if the the iterator is already past the last element.
+	 * @throws IndexOutOfBoundsException if the iterator is already past the last element.
 	 */
 	IteratorSTL<T> increment();
 
@@ -65,7 +65,7 @@ public interface IteratorSTL<T> {
 	IteratorSTL<T> decrement(int n);
 
 	/**
-	 * Returns true if the iterator is positioned on the first first element of the collection.  If the
+	 * Returns true if the iterator is positioned on the first element of the collection.  If the
 	 * collection is empty, this will always return false.
 	 * @return true if the iterator is positioned on the first element of the collection.
 	 */
diff --git a/Ghidra/Framework/Generic/src/main/java/generic/util/WindowUtilities.java b/Ghidra/Framework/Generic/src/main/java/generic/util/WindowUtilities.java
index 9375ff666e..3231fcfd49 100644
--- a/Ghidra/Framework/Generic/src/main/java/generic/util/WindowUtilities.java
+++ b/Ghidra/Framework/Generic/src/main/java/generic/util/WindowUtilities.java
@@ -497,7 +497,7 @@ public class WindowUtilities {
 		// NOTE: we do an invokeLater here, as some of our clients are calling us in a
 		// WindowListener.windowActivated() callback.  During this callback, it is possible that
 		// the focus owner is not correct, as it will be changed to the window under activation.
-		// If we invoke later, the the call will happen when focus has been transitioned.
+		// If we invoke later, the call will happen when focus has been transitioned.
 		Swing.runLater(() -> doBringModalestDialogToFront(activeWindow));
 	}
 
diff --git a/Ghidra/Framework/Generic/src/main/java/ghidra/framework/Application.java b/Ghidra/Framework/Generic/src/main/java/ghidra/framework/Application.java
index f9b3f10800..38d3656ea5 100644
--- a/Ghidra/Framework/Generic/src/main/java/ghidra/framework/Application.java
+++ b/Ghidra/Framework/Generic/src/main/java/ghidra/framework/Application.java
@@ -916,7 +916,7 @@ public class Application {
 	}
 
 	/**
-	 * Return the directory relative the the name module's data directory. (i.e. "/data" will
+	 * Return the directory relative the name module's data directory. (i.e. "/data" will
 	 * be prepended to the given path)
 	 * @param moduleName the name of the module.
 	 * @param relativePath the path relative to the module's data directory.
@@ -931,7 +931,7 @@ public class Application {
 	}
 
 	/**
-	 * Return the directory relative the the name module's directory.
+	 * Return the directory relative the name module's directory.
 	 * @param moduleName the name of the module.
 	 * @param relativePath the path relative to the module's root directory.
 	 * @return the directory
diff --git a/Ghidra/Framework/Generic/src/main/java/ghidra/util/DateUtils.java b/Ghidra/Framework/Generic/src/main/java/ghidra/util/DateUtils.java
index 942979a615..1903f028a6 100644
--- a/Ghidra/Framework/Generic/src/main/java/ghidra/util/DateUtils.java
+++ b/Ghidra/Framework/Generic/src/main/java/ghidra/util/DateUtils.java
@@ -242,7 +242,7 @@ public class DateUtils {
 	 * Returns the current local time zone time-of-day as simple time string.
 	 * See {@value #TIME_FORMAT_STRING}.
 	 *
-	 * @return current time-of-day a a string
+	 * @return current time-of-day as a string
 	 */
 	public static String formatCurrentTime() {
 		return TIME_FORMATTER.format(toLocalDate(new Date()));
diff --git a/Ghidra/Framework/Generic/src/main/java/ghidra/util/NumericUtilities.java b/Ghidra/Framework/Generic/src/main/java/ghidra/util/NumericUtilities.java
index 79b3b72525..f0dc32397b 100644
--- a/Ghidra/Framework/Generic/src/main/java/ghidra/util/NumericUtilities.java
+++ b/Ghidra/Framework/Generic/src/main/java/ghidra/util/NumericUtilities.java
@@ -912,7 +912,7 @@ public final class NumericUtilities {
 	/**
 	 * Determine if the provided Number is an integer type -- Byte, Short, Integer, or Long.
 	 *
-	 * @param number the object to check for for integer-type
+	 * @param number the object to check for integer-type
 	 * @return true if the provided number is an integer-type, false otherwise
 	 */
 	public static boolean isIntegerType(Number number) {
@@ -933,7 +933,7 @@ public final class NumericUtilities {
 	/**
 	 * Determine if the provided Number is a floating-point type -- Float or Double.
 	 *
-	 * @param number the object to check for for floating-point-type
+	 * @param number the object to check for floating-point-type
 	 * @return true if the provided number is a floating-point-type, false otherwise
 	 */
 	public static boolean isFloatingPointType(Number number) {
diff --git a/Ghidra/Framework/Generic/src/main/java/ghidra/util/StringUtilities.java b/Ghidra/Framework/Generic/src/main/java/ghidra/util/StringUtilities.java
index 53d4601290..a4d604b115 100644
--- a/Ghidra/Framework/Generic/src/main/java/ghidra/util/StringUtilities.java
+++ b/Ghidra/Framework/Generic/src/main/java/ghidra/util/StringUtilities.java
@@ -989,7 +989,7 @@ public class StringUtilities {
 	/**
 	 * Replaces escaped characters in a string to corresponding control characters. For example a
 	 * string containing a backslash character followed by a 'n' character would be replaced with a
-	 * single line feed (0x0a) character. One use for this is to to allow users to type strings in a
+	 * single line feed (0x0a) character. One use for this is to allow users to type strings in a
 	 * text field and include control characters such as line feeds and tabs.
 	 *
 	 * The string that contains 'a','b','c', '\', 'n', 'd', '\', 'u', '0', '0', '0', '1', 'e' would
diff --git a/Ghidra/Framework/Generic/src/main/java/ghidra/util/datastruct/BitTree.java b/Ghidra/Framework/Generic/src/main/java/ghidra/util/datastruct/BitTree.java
index bb34e3dc0b..0db31480b1 100644
--- a/Ghidra/Framework/Generic/src/main/java/ghidra/util/datastruct/BitTree.java
+++ b/Ghidra/Framework/Generic/src/main/java/ghidra/util/datastruct/BitTree.java
@@ -336,7 +336,7 @@ public class BitTree implements ShortKeySet, Serializable {
         if(containsKey((short)0)) {
             return (short)0;
         }
-        // otherwise return the the next key after 0.
+        // otherwise return the next key after 0.
         return getNext((short)0);
     }
 
@@ -373,7 +373,7 @@ public class BitTree implements ShortKeySet, Serializable {
     }
 
     /**
-     * Tests if the the nth bit is on.
+     * Tests if the nth bit is on.
      */
     private boolean isBitSet(int n) {
         int intIndex = n >> 5;
diff --git a/Ghidra/Framework/Generic/src/main/java/ghidra/util/graph/SimpleWeightedDigraph.java b/Ghidra/Framework/Generic/src/main/java/ghidra/util/graph/SimpleWeightedDigraph.java
index 1eeca31d4b..1eb8c82874 100644
--- a/Ghidra/Framework/Generic/src/main/java/ghidra/util/graph/SimpleWeightedDigraph.java
+++ b/Ghidra/Framework/Generic/src/main/java/ghidra/util/graph/SimpleWeightedDigraph.java
@@ -85,7 +85,7 @@ public class SimpleWeightedDigraph extends WeightedDigraph {
 	}
 
 	/** 
-	 * Add an edge with the the default edge weight. 
+	 * Add an edge with the default edge weight.
 	 * 
 	 * If an edge from and to the vertices
 	 * specified by the edge already exists in the graph, 
@@ -106,7 +106,7 @@ public class SimpleWeightedDigraph extends WeightedDigraph {
 	}
 
 	/** 
-	 * Add an edge with the the specified edge weight. 
+	 * Add an edge with the specified edge weight.
 	 * 
 	 * If an edge from and to the vertices
 	 * specified by the edge already exists in the graph,
diff --git a/Ghidra/Framework/Generic/src/main/java/ghidra/util/timer/GTimerCache.java b/Ghidra/Framework/Generic/src/main/java/ghidra/util/timer/GTimerCache.java
index 46621b07bd..3133c63a7f 100644
--- a/Ghidra/Framework/Generic/src/main/java/ghidra/util/timer/GTimerCache.java
+++ b/Ghidra/Framework/Generic/src/main/java/ghidra/util/timer/GTimerCache.java
@@ -237,7 +237,7 @@ public class GTimerCache<K, V> {
 
 	/**
 	 * Called when an item's cache time has expired to determine if the item should be removed from
-	 * the cache. The default to to remove an item when its time has expired. Subclasses can 
+	 * the cache. The default is to remove an item when its time has expired. Subclasses can
 	 * override this method to have more control over expiring value removal.
 	 * <P>
 	 * Note: this method will always be called from within a synchronized block. Subclasses should
diff --git a/Ghidra/Framework/Generic/src/test/java/ghidra/util/datastruct/TestDataStructureErrorHandlerInstaller.java b/Ghidra/Framework/Generic/src/test/java/ghidra/util/datastruct/TestDataStructureErrorHandlerInstaller.java
index aa64f403c9..53aceb0668 100644
--- a/Ghidra/Framework/Generic/src/test/java/ghidra/util/datastruct/TestDataStructureErrorHandlerInstaller.java
+++ b/Ghidra/Framework/Generic/src/test/java/ghidra/util/datastruct/TestDataStructureErrorHandlerInstaller.java
@@ -21,7 +21,7 @@ import generic.test.ConcurrentTestExceptionHandler;
  * A utility that allows tests to set the error handling behavior for all data structures that
  * want flexible error handling.  This class, in this package, allows us to override the factory
  * that is used to create the error handlers for framework listener data structures.  The standard
- * behavior is to report errors to the the application log.  Some clients wish to change this
+ * behavior is to report errors to the application log.  Some clients wish to change this
  * behavior in testing mode so that any errors will fail tests.  Without overriding this behavior,
  * unexpected errors during listener notification may be lost in the noise of the application log.
  * <p>
diff --git a/Ghidra/Framework/Graph/src/main/java/ghidra/graph/job/AbstractGraphTransitionJob.java b/Ghidra/Framework/Graph/src/main/java/ghidra/graph/job/AbstractGraphTransitionJob.java
index 7b58f7102c..e8bdc0c6d1 100644
--- a/Ghidra/Framework/Graph/src/main/java/ghidra/graph/job/AbstractGraphTransitionJob.java
+++ b/Ghidra/Framework/Graph/src/main/java/ghidra/graph/job/AbstractGraphTransitionJob.java
@@ -33,7 +33,7 @@ import ghidra.util.task.TaskLauncher;
 /**
  * A job to transition vertices in a graph for location and visibility.  The parent class 
  * handled the opacity callback.  The progress of the job is used by this class to move 
- * vertices from the the start location to the final destination, where the progress is the
+ * vertices from the start location to the final destination, where the progress is the
  * percentage of the total move to display.
  *
  * @param <V> the vertex type
diff --git a/Ghidra/Framework/Graph/src/main/java/ghidra/graph/viewer/popup/PopupRegulator.java b/Ghidra/Framework/Graph/src/main/java/ghidra/graph/viewer/popup/PopupRegulator.java
index 1a004061c8..c9db18e1ca 100644
--- a/Ghidra/Framework/Graph/src/main/java/ghidra/graph/viewer/popup/PopupRegulator.java
+++ b/Ghidra/Framework/Graph/src/main/java/ghidra/graph/viewer/popup/PopupRegulator.java
@@ -132,7 +132,7 @@ public class PopupRegulator<V, E> {
 
 		Component c = event.getComponent();
 		if (!c.isShowing()) {
-			// This method is called from a a timer.  It is possible that the graph has been 
+			// This method is called from a timer.  It is possible that the graph has been
 			// closed by the time this method is called.
 			return;
 		}
diff --git a/Ghidra/Framework/Graph/src/main/java/ghidra/graph/viewer/vertex/AbstractVisualVertexRenderer.java b/Ghidra/Framework/Graph/src/main/java/ghidra/graph/viewer/vertex/AbstractVisualVertexRenderer.java
index 965ac49a0c..53610fdb27 100644
--- a/Ghidra/Framework/Graph/src/main/java/ghidra/graph/viewer/vertex/AbstractVisualVertexRenderer.java
+++ b/Ghidra/Framework/Graph/src/main/java/ghidra/graph/viewer/vertex/AbstractVisualVertexRenderer.java
@@ -260,7 +260,7 @@ public class AbstractVisualVertexRenderer<V extends VisualVertex, E extends Visu
 	}
 
 	/**
-	 * Adjusts the given value based upon the current scale applied the the view.  The more
+	 * Adjusts the given value based upon the current scale applied the view.  The more
 	 * scaled out the view, the larger the value returned.   This allows view effects to be
 	 * discernable at scale.
 	 * 
diff --git a/Ghidra/Framework/Gui/src/main/java/generic/test/AbstractGuiTest.java b/Ghidra/Framework/Gui/src/main/java/generic/test/AbstractGuiTest.java
index a40f245914..5e616a68fc 100644
--- a/Ghidra/Framework/Gui/src/main/java/generic/test/AbstractGuiTest.java
+++ b/Ghidra/Framework/Gui/src/main/java/generic/test/AbstractGuiTest.java
@@ -392,7 +392,7 @@ public class AbstractGuiTest extends AbstractGenericTest {
 	}
 
 	/**
-	 * Searches the subcomponents of the the given container and returns the
+	 * Searches the subcomponents of the given container and returns the
 	 * JButton that has the specified text.
 	 *
 	 * @param container the container to search
@@ -882,7 +882,7 @@ public class AbstractGuiTest extends AbstractGenericTest {
 
 		//
 		// When running in batch mode, the report generated by Gradle will not correctly show
-		// the stack trace if we throw the exception, so will will trigger a failure instead,
+		// the stack trace if we throw the exception, so will trigger a failure instead,
 		// which looks good in the test report.
 		//
 		String string = TestReportingException.getSwingThreadTraceString(throwable);
diff --git a/Ghidra/Framework/Gui/src/main/java/generic/theme/AbstractThemeReader.java b/Ghidra/Framework/Gui/src/main/java/generic/theme/AbstractThemeReader.java
index 583f46dbea..3bca39dee5 100644
--- a/Ghidra/Framework/Gui/src/main/java/generic/theme/AbstractThemeReader.java
+++ b/Ghidra/Framework/Gui/src/main/java/generic/theme/AbstractThemeReader.java
@@ -315,7 +315,7 @@ public abstract class AbstractThemeReader {
 		}
 
 		/**
-		 * Adds a raw line from the file to this section. The line will be parsed into a a
+		 * Adds a raw line from the file to this section. The line will be parsed into a
 		 * key-value pair.
 		 * @param line the line to be added/parsed
 		 * @param lineNumber the line number in the file for this line
diff --git a/Ghidra/Framework/Gui/src/main/java/generic/theme/GTheme.java b/Ghidra/Framework/Gui/src/main/java/generic/theme/GTheme.java
index 4e8208a65c..31fea56e49 100644
--- a/Ghidra/Framework/Gui/src/main/java/generic/theme/GTheme.java
+++ b/Ghidra/Framework/Gui/src/main/java/generic/theme/GTheme.java
@@ -41,7 +41,7 @@ public class GTheme extends GThemeValueMap {
 	private final File file;
 
 	/**
-	 * Creates a new GTheme with the given name, the default {@link LookAndFeel} for the the 
+	 * Creates a new GTheme with the given name, the default {@link LookAndFeel} for the
 	 * platform and not using dark defaults. This theme will be using all the standard defaults
 	 * from the theme.property files and the defaults from the default LookAndFeel.
 	 * @param name the name for this GTheme
diff --git a/Ghidra/Framework/Gui/src/main/java/generic/theme/ThemeManager.java b/Ghidra/Framework/Gui/src/main/java/generic/theme/ThemeManager.java
index 508d76da55..ca9c6617b1 100644
--- a/Ghidra/Framework/Gui/src/main/java/generic/theme/ThemeManager.java
+++ b/Ghidra/Framework/Gui/src/main/java/generic/theme/ThemeManager.java
@@ -222,7 +222,7 @@ public abstract class ThemeManager {
 	/**
 	 * Sets the current {@link LookAndFeel}. This is used by theme editors to allow users to
 	 * see the effects of changing LookAndFeels when configuring a theme. Setting this different
-	 * from the activeTheme's LookAndFeel setting means the the current theme is in an unsaved
+	 * from the activeTheme's LookAndFeel setting means the current theme is in an unsaved
 	 * state and causes the {@link #hasThemeChanges()} method to return true.
 	 * @param lafType the {@link LafType} to set the LookAndFeel to
 	 * @param useDarkDefaults true if the application should used dark defaults with this
diff --git a/Ghidra/Framework/Gui/src/main/java/generic/theme/ThemePropertyFileReader.java b/Ghidra/Framework/Gui/src/main/java/generic/theme/ThemePropertyFileReader.java
index 0c20168aa2..1e27469d63 100644
--- a/Ghidra/Framework/Gui/src/main/java/generic/theme/ThemePropertyFileReader.java
+++ b/Ghidra/Framework/Gui/src/main/java/generic/theme/ThemePropertyFileReader.java
@@ -32,7 +32,7 @@ public class ThemePropertyFileReader extends AbstractThemeReader {
 	private boolean defaultSectionProcessed;
 
 	/**
-	 * Constructor for when the the theme.properties file is a {@link ResourceFile}
+	 * Constructor for when the theme.properties file is a {@link ResourceFile}
 	 * @param file the {@link ResourceFile} esourceFileto read
 	 * @throws IOException if an I/O error occurs reading the file
 	 */
diff --git a/Ghidra/Framework/Gui/src/main/java/ghidra/util/ColorUtils.java b/Ghidra/Framework/Gui/src/main/java/ghidra/util/ColorUtils.java
index 0e9fb551a7..46e04bf105 100644
--- a/Ghidra/Framework/Gui/src/main/java/ghidra/util/ColorUtils.java
+++ b/Ghidra/Framework/Gui/src/main/java/ghidra/util/ColorUtils.java
@@ -313,7 +313,7 @@ public class ColorUtils {
 	 * @param green the green value (0 - 255)
 	 * @param blue  the blue value (0 - 255)
 	 * @param alpha the alpha (transparency) value (0 - 255) with 0 being fully transparent and 255 
-	 * being fully opaque opaque
+	 * being fully opaque
 	 * @return the color object for the given values
 	 */
 	public static Color getColor(int red, int green, int blue, int alpha) {
diff --git a/Ghidra/Framework/Gui/src/main/java/ghidra/util/html/HtmlLineSplitter.java b/Ghidra/Framework/Gui/src/main/java/ghidra/util/html/HtmlLineSplitter.java
index 0c7a98bd5c..f10698143a 100644
--- a/Ghidra/Framework/Gui/src/main/java/ghidra/util/html/HtmlLineSplitter.java
+++ b/Ghidra/Framework/Gui/src/main/java/ghidra/util/html/HtmlLineSplitter.java
@@ -101,7 +101,7 @@ public class HtmlLineSplitter {
 	 * 
 	 * <P>Once the maximum provided length is passed, the algorithm attempts to split on a word
 	 * boundary by first looking backwards in the given line (since the last split value) to
-	 * find a space.  If no space is found in that direction, then the the algorithm will
+	 * find a space.  If no space is found in that direction, then the algorithm will
 	 * keep walking forward until either a space is found or {@link #MAX_WORD_LENGTH} is
 	 * passed, at which point the line will be ended, splitting any word that surrounds 
 	 * that index.
diff --git a/Ghidra/Framework/Gui/src/main/java/resources/MultiIcon.java b/Ghidra/Framework/Gui/src/main/java/resources/MultiIcon.java
index c608bceb9d..3289306583 100644
--- a/Ghidra/Framework/Gui/src/main/java/resources/MultiIcon.java
+++ b/Ghidra/Framework/Gui/src/main/java/resources/MultiIcon.java
@@ -25,7 +25,7 @@ import generic.theme.GIcon;
 import ghidra.util.ColorUtils;
 
 /**
- * Icon class for for displaying overlapping icons.  Icons are drawn in the order they
+ * Icon class for displaying overlapping icons.  Icons are drawn in the order they
  * are added.
  */
 public class MultiIcon implements Icon {
diff --git a/Ghidra/Framework/Help/src/main/java/help/GHelpSet.java b/Ghidra/Framework/Help/src/main/java/help/GHelpSet.java
index b847bc8834..9c29c7e448 100644
--- a/Ghidra/Framework/Help/src/main/java/help/GHelpSet.java
+++ b/Ghidra/Framework/Help/src/main/java/help/GHelpSet.java
@@ -47,7 +47,7 @@ import ghidra.util.SystemUtilities;
  * Further, it does not properly locate the shared HTML file reference.  This class allows lookups
  * across modules by overridden the lookup functionality done by the map object.  More specifically,
  * we override {@link #getCombinedMap()} and {@link #getLocalMap()} to use a custom delegate map
- * object that knows how do do this "cross-module" help lookup.
+ * object that knows how to do this "cross-module" help lookup.
  * 
  *
  *@see GHelpHTMLEditorKit
diff --git a/Ghidra/Framework/Help/src/main/java/help/OverlayHelpTree.java b/Ghidra/Framework/Help/src/main/java/help/OverlayHelpTree.java
index 9a82521dfc..9d7f086c97 100644
--- a/Ghidra/Framework/Help/src/main/java/help/OverlayHelpTree.java
+++ b/Ghidra/Framework/Help/src/main/java/help/OverlayHelpTree.java
@@ -172,7 +172,7 @@ public class OverlayHelpTree {
 		//
 		// The parent to children map is cleared as nodes are created.   The map is populated by
 		// adding any references to the 'parent' key as they are loaded from the help files.
-		// As we build nodes, starting at the root, will will create child nodes for those that
+		// As we build nodes, starting at the root, we will create child nodes for those that
 		// reference the 'parent' key.   If the map is empty, then it means we never built a
 		// node for the 'parent' key, which means we never found a help file containing the
 		// definition for that key.
diff --git a/Ghidra/Framework/Help/src/main/java/help/validator/JavaHelpValidator.java b/Ghidra/Framework/Help/src/main/java/help/validator/JavaHelpValidator.java
index ff738de814..f9810ad711 100644
--- a/Ghidra/Framework/Help/src/main/java/help/validator/JavaHelpValidator.java
+++ b/Ghidra/Framework/Help/src/main/java/help/validator/JavaHelpValidator.java
@@ -270,7 +270,7 @@ public class JavaHelpValidator {
 
 		if (helpFile == null) {
 			if (isExcludedHREF(href)) {
-				return; // ignore calls made to the the API as being invalid
+				return; // ignore calls made to the API as being invalid
 			}
 			unresolvedLinks.add(new MissingFileInvalidLink(href));
 			return;
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/FrontEndPlugin.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/FrontEndPlugin.java
index be780e9eb1..9a688853be 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/FrontEndPlugin.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/FrontEndPlugin.java
@@ -652,7 +652,7 @@ public class FrontEndPlugin extends Plugin
 			}
 		}
 		catch (Exception e) {
-			Msg.showError(this, null, "Error Exporting Tool", "Error exporting tool tool", e);
+			Msg.showError(this, null, "Error Exporting Tool", "Error exporting tool", e);
 		}
 	}
 
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/FrontEndTool.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/FrontEndTool.java
index 81aecd1fc0..d6cfe06f42 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/FrontEndTool.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/FrontEndTool.java
@@ -80,7 +80,7 @@ import help.Help;
 import help.HelpService;
 
 /**
- * Tool that serves as the the Ghidra Project Window. Only those plugins that
+ * Tool that serves as the Ghidra Project Window. Only those plugins that
  * implement the FrontEndable interface may be <i>directly</i> added to this
  * tool by the user. Other plugins that are not marked as FrontEndable may get
  * pulled in because the FrontEndable plugins depend on them. These plugins are
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/ProjectActionManager.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/ProjectActionManager.java
index 05d1362656..184b00d358 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/ProjectActionManager.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/ProjectActionManager.java
@@ -563,7 +563,7 @@ class ProjectActionManager {
 		}
 
 		try {
-			activeProject.addProjectView(view, true); // listener will trigger data panel panel display
+			activeProject.addProjectView(view, true); // listener will trigger data panel display
 		}
 		catch (IOException e) {
 			ProjectManager projectManager = tool.getProjectManager();
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/ToolButton.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/ToolButton.java
index 554198aa82..ad831bec62 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/ToolButton.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/ToolButton.java
@@ -469,7 +469,7 @@ class ToolButton extends EmptyBorderButton implements Draggable, Droppable {
 
 		// Create our animation code: a zooming effect and an effect to move where the image is
 		// painted.  These effects are independent code-wise, but work together in that the
-		// mover will set the location and size, and the zoomer will will paint the image with
+		// mover will set the location and size, and the zoomer will paint the image with
 		// a transparency and a zoom level, which is affected by the movers bounds changing.
 		Image image = ZoomedImagePainter.createIconImage(icon);
 		final ZoomedImagePainter painter = new ZoomedImagePainter(startBounds, image);
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/logviewer/ui/FVTable.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/logviewer/ui/FVTable.java
index 38bd2d91b7..b9289e99cb 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/logviewer/ui/FVTable.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/main/logviewer/ui/FVTable.java
@@ -527,7 +527,7 @@ public class FVTable extends GTable
 		// selected end position if the shift key is down.
 		//
 		// However, if the user is selecting a row ABOVE the currently-selected one(s), then
-		// leave the the that row as the 'end' selection and reset the start.
+		// leave the that row as the 'end' selection and reset the start.
 		//
 		// Also, if the mouse is dragging, don't reset the start position as the user is selecting
 		// a range via the mouse.
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/DomainObjectListenerBuilder.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/DomainObjectListenerBuilder.java
index 6ba339a75d..6147fce8dd 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/DomainObjectListenerBuilder.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/DomainObjectListenerBuilder.java
@@ -66,7 +66,7 @@ import utility.function.Callback;
  * </PRE>
  * <P>
  * And finally, the third way is where you have to perform some processing on each record of a 
- * certain type. This can be done using the the {@link #each(EventType...)}, followed by the
+ * certain type. This can be done using the {@link #each(EventType...)}, followed by the
  * {@link EachBuilder#call(Consumer)} if you just want the record, or 
  * {@link EachBuilder#call(BiConsumer)} if you want the record and the event.
  * <P>
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/ProjectData.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/ProjectData.java
index 3cea690067..3aee9b2c7e 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/ProjectData.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/ProjectData.java
@@ -141,7 +141,7 @@ public interface ProjectData {
 
 	/**
 	 * Sync the Domain folder/file structure with the underlying file structure.
-	 * @param force if true all folders will be be visited and refreshed, if false
+	 * @param force if true all folders will be visited and refreshed, if false
 	 * only those folders previously visited will be refreshed.
 	 */
 	public void refresh(boolean force);
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/ProjectManager.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/ProjectManager.java
index ae2798ffc1..33c0bcc5c8 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/ProjectManager.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/model/ProjectManager.java
@@ -133,7 +133,7 @@ public interface ProjectManager {
 	 * Establish a connection to the given host and port number. 
 	 * @param host server name or IP address
 	 * @param portNumber server port or 0 for default
-	 * @param forceConnect if true and currently not connected, an attempt will be be to connect
+	 * @param forceConnect if true and currently not connected, an attempt will be made to connect
 	 * @return a handle to the remote server containing shared repositories
 	 */
 	public RepositoryServerAdapter getRepositoryServerAdapter(String host, int portNumber,
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/PluginManager.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/PluginManager.java
index ad8372af90..1fd0230800 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/PluginManager.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/PluginManager.java
@@ -631,7 +631,7 @@ class PluginManager {
 	 * @param usingPlugin the plugin whose used services should not be provided by any plugins in the list
 	 * @param serviceProvidingPlugins the list of plugins that is being tested to see if they provide any
 	 * services used by p;
-	 * @return true if no plugins in the the list provide any services used by p.
+	 * @return true if no plugins in the list provide any services used by p.
 	 */
 	private boolean checkServices(Plugin usingPlugin, List<Plugin> serviceProvidingPlugins) {
 		for (Class<?> usedService : usingPlugin.getServicesRequired()) {
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/PluginsConfiguration.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/PluginsConfiguration.java
index 5b7fe3a877..d56a047d35 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/PluginsConfiguration.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/PluginsConfiguration.java
@@ -166,7 +166,7 @@ public abstract class PluginsConfiguration {
 	 * packages and then adding <b>all</b> plugins in that package.  This has the effect of pulling
 	 * in more plugin classes than were originally specified in the tool xml.
 	 *
-	 * @param classNames the list of classNames from from the old XML file
+	 * @param classNames the list of classNames from the old XML file
 	 * @return the adjusted set of plugin class names
 	 */
 	public Set<String> getPluginNamesByCurrentPackage(List<String> classNames) {
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/mgr/DialogManager.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/mgr/DialogManager.java
index ebbaeeeea4..950171932c 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/mgr/DialogManager.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/mgr/DialogManager.java
@@ -72,7 +72,7 @@ public class DialogManager {
 			}
 		}
 		catch (Exception e) {
-			Msg.showError(this, null, "Error", "Error exporting tool tool", e);
+			Msg.showError(this, null, "Error", "Error exporting tool", e);
 		}
 	}
 }
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/mgr/EventManager.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/mgr/EventManager.java
index 00e5769685..9aa6aa0dfb 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/mgr/EventManager.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/plugintool/mgr/EventManager.java
@@ -114,7 +114,7 @@ public class EventManager {
 	}
 
 	/**
-	 * Add the given tool listener to be notified notified when tool events are generated
+	 * Add the given tool listener to be notified when tool events are generated
 	 * 
 	 * @param listener listener to add
 	 */
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/project/ProjectJarWriter.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/project/ProjectJarWriter.java
index 9186c8b6db..b6f52383a2 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/project/ProjectJarWriter.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/project/ProjectJarWriter.java
@@ -32,7 +32,7 @@ class ProjectJarWriter extends JarWriter {
 	private static final String ORIGINAL_PROPERTIES_FILE_NAME = "original"+PROPERTIES_FILE_NAME;
 
 	/**
-	 * @param jarOut the the jar file output stream the zip entries are
+	 * @param jarOut the jar file output stream the zip entries are
 	 * to be written to.
 	 */
 	ProjectJarWriter(JarOutputStream jarOut) {
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/protocol/ghidra/DefaultLocalGhidraProtocolConnector.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/protocol/ghidra/DefaultLocalGhidraProtocolConnector.java
index 218991b68a..a8fdf979de 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/protocol/ghidra/DefaultLocalGhidraProtocolConnector.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/protocol/ghidra/DefaultLocalGhidraProtocolConnector.java
@@ -86,7 +86,7 @@ public class DefaultLocalGhidraProtocolConnector extends GhidraProtocolConnector
 
 	/**
 	 * Get the ProjectLocator associated with a local project URL.
-	 * @return project locator object or null if URL supplies a a RepositoryAdapter and/or 
+	 * @return project locator object or null if URL supplies a RepositoryAdapter and/or
 	 * RepositoryServerAdapter.
 	 */
 	public ProjectLocator getLocalProjectLocator() {
@@ -119,7 +119,7 @@ public class DefaultLocalGhidraProtocolConnector extends GhidraProtocolConnector
 	}
 
 	/**
-	 * Connect and establish loca project project data instance.  Opening a project for
+	 * Connect and establish local project data instance.  Opening a project for
 	 * write access is subject to in-use lock restriction.
 	 * See {@link #getStatusCode()} if null is returned.
 	 * @param readOnlyAccess true if project data should be read-only
diff --git a/Ghidra/Framework/Project/src/main/java/ghidra/framework/task/GTaskManager.java b/Ghidra/Framework/Project/src/main/java/ghidra/framework/task/GTaskManager.java
index 76cb23ad0b..0e13f3f505 100644
--- a/Ghidra/Framework/Project/src/main/java/ghidra/framework/task/GTaskManager.java
+++ b/Ghidra/Framework/Project/src/main/java/ghidra/framework/task/GTaskManager.java
@@ -49,7 +49,7 @@ import ghidra.util.exception.CancelledException;
  * <P>
  * <U>Yielding to Other Tasks:</U><BR>
  * While running, a GTask can call the method {@link #waitForHigherPriorityTasks()} on the GTaskManager, 
- * which will cause the the GTaskManager to run scheduled tasks (within the same group) that are 
+ * which will cause the GTaskManager to run scheduled tasks (within the same group) that are
  * a higher priority than the running task, effectively allowing the running task to yield until all
  * higher priority tasks are executed.
  * 
diff --git a/Ghidra/Framework/Project/src/test.slow/java/ghidra/framework/task/gui/GTaskGUITest.java b/Ghidra/Framework/Project/src/test.slow/java/ghidra/framework/task/gui/GTaskGUITest.java
index b6a7c91ed1..c01dc4284d 100644
--- a/Ghidra/Framework/Project/src/test.slow/java/ghidra/framework/task/gui/GTaskGUITest.java
+++ b/Ghidra/Framework/Project/src/test.slow/java/ghidra/framework/task/gui/GTaskGUITest.java
@@ -590,7 +590,7 @@ public class GTaskGUITest extends AbstractDockingTest {
 			// to release that lock, be still be able to block the advance() method so that the
 			// test does not keep going until we let our 'higher priority task' get
 			// scheduled.   So, signal that our work is done, but then wait for the sub-work
-			// to be be scheduled.
+			// to be scheduled.
 			//
 			debug(getName() + ": release workFinished latch early");
 			workFinishedLatch.countDown();
diff --git a/Ghidra/Framework/Pty/src/main/java/ghidra/pty/PtyFactory.java b/Ghidra/Framework/Pty/src/main/java/ghidra/pty/PtyFactory.java
index b9d77e44e8..eeceb15117 100644
--- a/Ghidra/Framework/Pty/src/main/java/ghidra/pty/PtyFactory.java
+++ b/Ghidra/Framework/Pty/src/main/java/ghidra/pty/PtyFactory.java
@@ -52,7 +52,7 @@ public interface PtyFactory {
 	 * 
 	 * @param cols the initial width in characters, or 0 to let the system decide both dimensions
 	 * @param rows the initial height in characters, or 0 to let the system decide both dimensions
-	 * @return new new Pty
+	 * @return new Pty
 	 * @throws IOException for an I/O error, including cancellation
 	 */
 	Pty openpty(short cols, short rows) throws IOException;
@@ -61,7 +61,7 @@ public interface PtyFactory {
 	 * Open a new pseudo-terminal of the default size ({@value #DEFAULT_COLS} x
 	 * {@value #DEFAULT_ROWS})
 	 * 
-	 * @return new new Pty
+	 * @return new Pty
 	 * @throws IOException for an I/O error, including cancellation
 	 */
 	default Pty openpty() throws IOException {
@@ -73,7 +73,7 @@ public interface PtyFactory {
 	 * 
 	 * @param cols the initial width in characters, or 0 to let the system decide both dimensions
 	 * @param rows the initial height in characters, or 0 to let the system decide both dimensions
-	 * @return new new Pty
+	 * @return new Pty
 	 * @throws IOException for an I/O error, including cancellation
 	 */
 	default Pty openpty(int cols, int rows) throws IOException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/assembler/GenericAssembler.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/assembler/GenericAssembler.java
index 5296ee3f66..f1b0d292ba 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/assembler/GenericAssembler.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/assembler/GenericAssembler.java
@@ -76,7 +76,7 @@ public interface GenericAssembler<RP extends AssemblyResolvedPatterns> {
 	 * @param line the textual assembly code
 	 * @return the binary machine code, suitable for placement at the given address
 	 * @throws AssemblySyntaxException the textual instruction is not well-formed
-	 * @throws AssemblySemanticException the the well-formed instruction cannot be assembled
+	 * @throws AssemblySemanticException the well-formed instruction cannot be assembled
 	 */
 	public byte[] assembleLine(Address at, String line)
 			throws AssemblySyntaxException, AssemblySemanticException;
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/assembler/sleigh/symbol/AssemblyNumericTerminal.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/assembler/sleigh/symbol/AssemblyNumericTerminal.java
index 8b19b5f70d..91e95d4a58 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/assembler/sleigh/symbol/AssemblyNumericTerminal.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/assembler/sleigh/symbol/AssemblyNumericTerminal.java
@@ -150,7 +150,7 @@ public class AssemblyNumericTerminal extends AssemblyTerminal {
 	 * @param s buffer cursor where the literal is expected
 	 * @param buffer the input buffer
 	 * @param pos the start offset of the token parsed so far
-	 * @param neg true if the the optional {@code -} is present
+	 * @param neg true if the optional {@code -} is present
 	 * @param grammar the grammar containing this terminal
 	 * @return the parsed token, or null
 	 */
@@ -173,7 +173,7 @@ public class AssemblyNumericTerminal extends AssemblyTerminal {
 	 * @param str the string value of the token taken verbatim from the buffer
 	 * @param num portion of the token following the optional sign and prefix
 	 * @param radix the radix of {@code num}
-	 * @param neg true if the the optional {@code -} is present
+	 * @param neg true if the optional {@code -} is present
 	 * @param grammar the grammar containing this terminal
 	 * @return the parsed token, or null
 	 */
@@ -209,7 +209,7 @@ public class AssemblyNumericTerminal extends AssemblyTerminal {
 	 * @param s the buffer cursor where the hex portion starts
 	 * @param buffer the input buffer
 	 * @param pos the start offset of the token parsed so far
-	 * @param neg true if the the optional {@code -} is present
+	 * @param neg true if the optional {@code -} is present
 	 * @param grammar the grammar containing this terminal
 	 * @return the parsed token, or null
 	 */
@@ -233,7 +233,7 @@ public class AssemblyNumericTerminal extends AssemblyTerminal {
 	 * @param s the buffer cursor where the hex portion starts
 	 * @param buffer the input buffer
 	 * @param pos the start offset of the token parsed so far
-	 * @param neg true if the the optional {@code -} is present
+	 * @param neg true if the optional {@code -} is present
 	 * @param grammar the grammar containing this terminal
 	 * @return the parsed token, or null
 	 */
@@ -257,7 +257,7 @@ public class AssemblyNumericTerminal extends AssemblyTerminal {
 	 * @param s the buffer cursor where the hex portion starts
 	 * @param buffer the input buffer
 	 * @param pos the start offset of the token parsed so far
-	 * @param neg true if the the optional {@code -} is present
+	 * @param neg true if the optional {@code -} is present
 	 * @param grammar the grammar containing this terminal
 	 * @return the parsed token, or null
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/processors/generic/Operand.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/processors/generic/Operand.java
index bf90aedd55..8f231408fb 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/processors/generic/Operand.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/plugin/processors/generic/Operand.java
@@ -83,7 +83,7 @@ public class Operand implements Serializable {
 
 	/**
 	 * Returns previously computed handle for this operand.  Should not
-	 * be called before the full version of getHandle, where Position and and
+	 * be called before the full version of getHandle, where Position and
 	 * offset are specified.
 	 * @return Handle
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/util/pcode/Appender.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/util/pcode/Appender.java
index 9a0366264a..f433d6238c 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/util/pcode/Appender.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/app/util/pcode/Appender.java
@@ -68,7 +68,7 @@ interface Appender<T> {
 	void appendMnemonic(int opcode);
 
 	/**
-	 * Append the the given userop
+	 * Append the given userop
 	 * 
 	 * @param id the userop id
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/address/Address.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/address/Address.java
index 94963f27eb..3336a14358 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/address/Address.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/address/Address.java
@@ -27,7 +27,7 @@ import ghidra.pcodeCPort.utils.AddrSpaceToIdSymmetryMap;
 //cpui_mach_addr is expected to print itself and read itself. It can take
 //a size as a "suggestion" for how it should print itself
 
-//All addresses are absolute and there are are no registers in CPUI. However,
+//All addresses are absolute and there are no registers in CPUI. However,
 //all addresses are prefixed with an "immutable" pointer, which can
 //specify a separate RAM space, a register space, an i/o space etc. Thus
 //a translation from a real machine language will typically simulate registers
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/utils/WeakHashMap2.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/utils/WeakHashMap2.java
index dbc31accdf..06a9cbd508 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/utils/WeakHashMap2.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/pcodeCPort/utils/WeakHashMap2.java
@@ -213,7 +213,7 @@ public class WeakHashMap2<K, V> extends AbstractMap<K, V> {
 	 *                mapped
 	 *
 	 * @return  The previous value to which this key was mapped, or
-	 *          <code>null</code> if if there was no mapping for the key
+	 *          <code>null</code> if there was no mapping for the key
 	 */
 	@Override
 	public V put(K key, V value) {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/code/CodeManager.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/code/CodeManager.java
index 0278cf3dbf..e31b68ccc7 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/code/CodeManager.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/code/CodeManager.java
@@ -2094,7 +2094,7 @@ public class CodeManager implements ErrorHandler, ManagerDB {
 	 * for 0 or all f's.
 	 * @param data the data to add references for.
 	 * @param longSegmentAddressList used internally to make sure that, for 64 bit addresses, we
-	 * don't pollute the the addressMap segment table when creating arrays of pointers on arbitrary
+	 * don't pollute the addressMap segment table when creating arrays of pointers on arbitrary
 	 * data.
 	 */
 	private void addDataReferences(Data data, List<Address> longSegmentAddressList) {
@@ -3142,7 +3142,7 @@ public class CodeManager implements ErrorHandler, ManagerDB {
 // TODO: for now we will assume that all keys within defined memory blocks are known.
 // When a memory block is created, only its start address key is generated, if the
 // block spans a 32-bit boundary, null may be returned for all addresses beyond that
-// boundary.  A recent fix was added to the memory map to ensure ensure that we can
+// boundary.  A recent fix was added to the memory map to ensure that we can
 // handle blocks which are at least 32-bits in size by ensuring that the end address
 // key is also generated.
 			return null;
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/code/DataDBAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/code/DataDBAdapter.java
index da7ea63641..8cb0695d84 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/code/DataDBAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/code/DataDBAdapter.java
@@ -137,13 +137,13 @@ abstract class DataDBAdapter {
 	abstract DBRecord getRecord(long key) throws IOException;
 
 	/**
-	 * Get the record before the given address address.
+	 * Get the record before the given address.
 	 * @throws IOException if there was a problem accessing the database
 	 */
 	abstract DBRecord getRecordBefore(Address addr) throws IOException;
 
 	/**
-	 * Get a record iterator starting at the given address address.
+	 * Get a record iterator starting at the given address.
 	 * @throws IOException if there was a problem accessing the database
 	 */
 	abstract RecordIterator getRecords(Address addr, boolean forward) throws IOException;
@@ -176,7 +176,7 @@ abstract class DataDBAdapter {
 	abstract int getRecordCount() throws IOException;
 
 	/**
-	 * Get the record at or before the given address address.
+	 * Get the record at or before the given address.
 	 * @param addr
 	 * @throws IOException if there was a problem accessing the database
 	 * @return
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ArrayDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ArrayDBAdapterV0.java
index 478855b437..52b73186b0 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ArrayDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ArrayDBAdapterV0.java
@@ -44,7 +44,7 @@ class ArrayDBAdapterV0 extends ArrayDBAdapter {
 	/**
 	 * Gets a version 0 read-only adapter for the {@link ArrayDB} database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	public ArrayDBAdapterV0(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ArrayDBAdapterV1.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ArrayDBAdapterV1.java
index 8c02807eee..afe17238d1 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ArrayDBAdapterV1.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ArrayDBAdapterV1.java
@@ -50,7 +50,7 @@ class ArrayDBAdapterV1 extends ArrayDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create create table if true else acquire for read-only or update use
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException an IO error occured during table creation
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/BuiltinDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/BuiltinDBAdapterV0.java
index 5af676aeda..7e658e0c7b 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/BuiltinDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/BuiltinDBAdapterV0.java
@@ -43,7 +43,7 @@ class BuiltinDBAdapterV0 extends BuiltinDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create create table if true else acquire for read-only or update use
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if there is trouble accessing the database.
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CallingConventionDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CallingConventionDBAdapterV0.java
index 61759bcb06..848c048a82 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CallingConventionDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CallingConventionDBAdapterV0.java
@@ -58,7 +58,7 @@ class CallingConventionDBAdapterV0 extends CallingConventionDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if an IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CategoryDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CategoryDBAdapterV0.java
index 6c45bab1bb..21935170e6 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CategoryDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CategoryDBAdapterV0.java
@@ -39,7 +39,7 @@ class CategoryDBAdapterV0 extends CategoryDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if an IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ComponentDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ComponentDBAdapterV0.java
index 614ccfa3aa..f1577566b3 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ComponentDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ComponentDBAdapterV0.java
@@ -48,7 +48,7 @@ class ComponentDBAdapterV0 extends ComponentDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if an IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDB.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDB.java
index 74eefed2e9..e3589f09b7 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDB.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDB.java
@@ -530,7 +530,7 @@ abstract class CompositeDB extends DataTypeDB implements CompositeInternal {
 	 * NOTE: Currently a change in calculated alignment can not be provided since
 	 * this value is not stored.
 	 * 
-	 * @param isAutoChange true if changes are in response to another another datatype's change.
+	 * @param isAutoChange true if changes are in response to another datatype's change.
 	 * @param notify if true notification will be sent to parents if a size change
 	 * or component placement change is detected.
 	 * @return true if a layout change was detected.
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapter.java
index 4318cfa52f..a9d0ca585f 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapter.java
@@ -136,7 +136,7 @@ abstract class CompositeDBAdapter implements DBRecordAdapter {
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param monitor task monitor
 	 * @return the adapter for the new upgraded version of the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if the database can't be read or written.
 	 * @throws CancelledException user cancelled upgrade
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV0.java
index 646f3eb7c9..3a0035a7f9 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV0.java
@@ -47,7 +47,7 @@ class CompositeDBAdapterV0 extends CompositeDBAdapter implements RecordTranslato
 	/**
 	 * Gets a version 0 adapter for the Composite database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	CompositeDBAdapterV0(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV1.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV1.java
index 4a01f3628e..d2914d2229 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV1.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV1.java
@@ -52,7 +52,7 @@ class CompositeDBAdapterV1 extends CompositeDBAdapter implements RecordTranslato
 	/**
 	 * Gets a version 1 adapter for the Composite database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	CompositeDBAdapterV1(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV2V4.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV2V4.java
index 881dbb2bc9..38ea429ad5 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV2V4.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV2V4.java
@@ -66,7 +66,7 @@ class CompositeDBAdapterV2V4 extends CompositeDBAdapter implements RecordTransla
 	/**
 	 * Gets a read-only adapter for the Composite database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	CompositeDBAdapterV2V4(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV5V6.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV5V6.java
index cc4af23bc0..f1df47d1b5 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV5V6.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV5V6.java
@@ -71,7 +71,7 @@ class CompositeDBAdapterV5V6 extends CompositeDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param openMode the mode this adapter is to be opened for (CREATE, UPDATE, READ_ONLY, UPGRADE).
 	 * @param tablePrefix prefix to be used with default table name
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/DataTypeArchiveTransformer.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/DataTypeArchiveTransformer.java
index 8d6e3b670d..97586b8aa2 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/DataTypeArchiveTransformer.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/DataTypeArchiveTransformer.java
@@ -715,7 +715,7 @@ public class DataTypeArchiveTransformer implements GhidraLaunchable {
 		UniversalID universalID = newDataType.getUniversalID();
 		SourceArchive sourceArchive = newDataType.getSourceArchive();
 		if (sourceArchive == newFileArchive.getLocalSourceArchive()) {
-			// Use the the old file archive as the source archive since local.
+			// Use the old file archive as the source archive since local.
 			sourceArchive = oldFileArchive.getLocalSourceArchive();
 		}
 		DataType oldDataType;
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDB.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDB.java
index 56ff862ff6..e7a9d35470 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDB.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDB.java
@@ -917,7 +917,7 @@ class EnumDB extends DataTypeDB implements Enum {
 			boolean hasNegativeValues = minValue < 0;
 
 			// check the min and max values in this enum to see if they fit in 1 byte enum, then 
-			// 2 byte enum, then 4 byte enum. If the min min and max values fit, then all other values
+			// 2 byte enum, then 4 byte enum. If the min and max values fit, then all other values
 			// will fit as well
 			for (int size = 1; size < 8; size *= 2) {
 				long minPossible = getMinPossibleValue(size, hasNegativeValues);
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapter.java
index bb716d0723..ccb55167c6 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapter.java
@@ -97,7 +97,7 @@ abstract class EnumDBAdapter {
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param monitor task monitor
 	 * @return the adapter for the new upgraded version of the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if the database can't be read or written.
 	 * @throws CancelledException if task cancelled
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapterV0.java
index deefcf4bdd..7c7a5798ef 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapterV0.java
@@ -48,7 +48,7 @@ class EnumDBAdapterV0 extends EnumDBAdapter implements RecordTranslator {
 	/**
 	 * Gets a version 0 adapter for the Enumeration database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	public EnumDBAdapterV0(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapterV1.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapterV1.java
index 4d61ba0306..d73259fd1e 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapterV1.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumDBAdapterV1.java
@@ -54,7 +54,7 @@ class EnumDBAdapterV1 extends EnumDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException an IO error occured during table creation
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapter.java
index c318f8d620..1160b1970e 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapter.java
@@ -92,7 +92,7 @@ abstract class EnumValueDBAdapter implements RecordTranslator {
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param monitor task monitor
 	 * @return the adapter for the new upgraded version of the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if the database can't be read or written.
 	 * @throws CancelledException if task is cancelled
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapterV0.java
index 68226355e4..7c3d644bc4 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapterV0.java
@@ -36,7 +36,7 @@ class EnumValueDBAdapterV0 extends EnumValueDBAdapter {
 	/**
 	 * Gets a version 0 adapter for the Enumeration Data Type Values database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	EnumValueDBAdapterV0(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapterV1.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapterV1.java
index 33522350c3..f1dc7b90de 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapterV1.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/EnumValueDBAdapterV1.java
@@ -40,7 +40,7 @@ class EnumValueDBAdapterV1 extends EnumValueDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapter.java
index a5a4b0c761..ec078c410a 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapter.java
@@ -135,7 +135,7 @@ abstract class FunctionDefinitionDBAdapter implements DBRecordAdapter {
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param monitor task monitor
 	 * @return the adapter for the new upgraded version of the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if the database can't be read or written.
 	 * @throws CancelledException if task is cancelled
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV0.java
index 34ee8aec09..cc4943bdc5 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV0.java
@@ -52,7 +52,7 @@ class FunctionDefinitionDBAdapterV0 extends FunctionDefinitionDBAdapter
 	/**
 	 * Gets a version 0 adapter for the Function Definition database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	FunctionDefinitionDBAdapterV0(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV1.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV1.java
index 3c89118faa..1fa5819b7b 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV1.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV1.java
@@ -67,7 +67,7 @@ class FunctionDefinitionDBAdapterV1 extends FunctionDefinitionDBAdapter
 	 * (e.g., this adapter being used during upgrade operation).  Should be null if not performing
 	 * an upgrade in which case calling convention IDs will reflect generic convention ordinals.
 	 * 
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	public FunctionDefinitionDBAdapterV1(DBHandle handle, String tablePrefix,
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV2.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV2.java
index e57118173b..58d7a342ef 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV2.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionDefinitionDBAdapterV2.java
@@ -52,7 +52,7 @@ class FunctionDefinitionDBAdapterV2 extends FunctionDefinitionDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if an IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapter.java
index 857f5ff198..cdece4dc8b 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapter.java
@@ -99,7 +99,7 @@ abstract class FunctionParameterAdapter {
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param monitor task monitor
 	 * @return the adapter for the new upgraded version of the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if the database can't be read or written.
 	 * @throws CancelledException if task is cancelled
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterNoTable.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterNoTable.java
index 7a713fb8f9..b59584b1b8 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterNoTable.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterNoTable.java
@@ -30,7 +30,7 @@ class FunctionParameterAdapterNoTable extends FunctionParameterAdapter {
 	/**
 	 * Gets a pre-table version of the adapter for the Function Definition Parameters database table.
 	 * @param handle handle to the database which doesn't contain the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	public FunctionParameterAdapterNoTable(DBHandle handle) {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterV0.java
index fb0b4dfaee..9dbcbf4ebe 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterV0.java
@@ -44,7 +44,7 @@ class FunctionParameterAdapterV0 extends FunctionParameterAdapter implements Rec
 	/**
 	 * Gets a version 0 adapter for the Function Definition Parameter database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	public FunctionParameterAdapterV0(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterV1.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterV1.java
index 3a063a4550..2ab9041af9 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterV1.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/FunctionParameterAdapterV1.java
@@ -49,7 +49,7 @@ class FunctionParameterAdapterV1 extends FunctionParameterAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if an IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ParentChildDBAdapterNoTable.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ParentChildDBAdapterNoTable.java
index a612895a5e..28759d065e 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ParentChildDBAdapterNoTable.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ParentChildDBAdapterNoTable.java
@@ -26,7 +26,7 @@ class ParentChildDBAdapterNoTable extends ParentChildAdapter {
 	/**
 	 * Gets a pre-table version of the adapter for the Parent Child database table.
 	 * @param handle handle to the database which doesn't contain the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	ParentChildDBAdapterNoTable(DBHandle handle) {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ParentChildDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ParentChildDBAdapterV0.java
index e9f4a22984..3a1362ea4e 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ParentChildDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/ParentChildDBAdapterV0.java
@@ -45,7 +45,7 @@ class ParentChildDBAdapterV0 extends ParentChildAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if an IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/PointerDBAdapterV2.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/PointerDBAdapterV2.java
index 8fb52b5b2d..51cbd1d746 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/PointerDBAdapterV2.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/PointerDBAdapterV2.java
@@ -35,7 +35,7 @@ class PointerDBAdapterV2 extends PointerDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapter.java
index 57c52212b8..5f66693725 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapter.java
@@ -99,7 +99,7 @@ abstract class SourceArchiveAdapter {
 	 * @param handle handle to the database whose table is to be upgraded to a newer version.
 	 * @param oldAdapter the adapter for the existing table to be upgraded.
 	 * @return the adapter for the new upgraded version of the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if the database can't be read or written.
 	 * @throws CancelledException if task is cancelled
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapterNoTable.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapterNoTable.java
index 5acb2119c4..990ff204c0 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapterNoTable.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapterNoTable.java
@@ -46,7 +46,7 @@ class SourceArchiveAdapterNoTable extends SourceArchiveAdapter {
 	/**
 	 * Gets a pre-table version of the adapter for the data type archive ID database table.
 	 * @param handle handle to the database which doesn't contain the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	public SourceArchiveAdapterNoTable(DBHandle handle) {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapterV0.java
index 906fb60ad3..75e693b92f 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/SourceArchiveAdapterV0.java
@@ -49,7 +49,7 @@ class SourceArchiveAdapterV0 extends SourceArchiveAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if an IO errr occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapter.java
index ef3b462d4c..de08d63e61 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapter.java
@@ -100,7 +100,7 @@ abstract class TypedefDBAdapter {
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param monitor task monitor
 	 * @return the adapter for the new upgraded version of the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if the database can't be read or written.
 	 * @throws CancelledException if task is cancelled
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV0.java
index 5cc82a4675..01a032aa86 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV0.java
@@ -46,7 +46,7 @@ class TypedefDBAdapterV0 extends TypedefDBAdapter implements RecordTranslator {
 	/**
 	 * Gets a version 0 adapter for the Typedef database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	public TypedefDBAdapterV0(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV1.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV1.java
index dfafb6d81f..8487c69e51 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV1.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV1.java
@@ -48,7 +48,7 @@ class TypedefDBAdapterV1 extends TypedefDBAdapter implements RecordTranslator {
 	/**
 	 * Gets a version 1 adapter for the Typedef database table.
 	 * @param handle handle to the database containing the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 */
 	public TypedefDBAdapterV1(DBHandle handle) throws VersionException {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV2.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV2.java
index 495214d5a0..d4b9f9b313 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV2.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/TypedefDBAdapterV2.java
@@ -54,7 +54,7 @@ class TypedefDBAdapterV2 extends TypedefDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param tablePrefix prefix to be used with default table name
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/mem/MemoryMapDB.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/mem/MemoryMapDB.java
index 23bd060a3f..a58722a232 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/mem/MemoryMapDB.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/mem/MemoryMapDB.java
@@ -1968,7 +1968,7 @@ public class MemoryMapDB implements Memory, ManagerDB, LiveMemoryListener {
 	}
 
 	/**
-	 * Attempts to remove the the given overlay address space.  Removal will only succeed if no
+	 * Attempts to remove the given overlay address space.  Removal will only succeed if no
 	 * memory blocks currently reside within the space.
 	 * 
 	 * @param addressSpace overlay address space to be removed
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/FragmentDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/FragmentDBAdapterV0.java
index b3fe929f7a..022a3d87fa 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/FragmentDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/FragmentDBAdapterV0.java
@@ -39,7 +39,7 @@ class FragmentDBAdapterV0 extends FragmentDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param create true if this constructor should create the table.
 	 * @param treeID associated program tree ID
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if database IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ModuleDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ModuleDBAdapterV0.java
index e4fa1c6d42..85cce8cea6 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ModuleDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ModuleDBAdapterV0.java
@@ -42,7 +42,7 @@ class ModuleDBAdapterV0 extends ModuleDBAdapter implements RecordTranslator {
 	 * @param handle handle to the database containing the table.
 	 * @param treeID associated program tree ID
 	 * @param parentChildAdapter parent/child database adapter
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if database IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ModuleDBAdapterV1.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ModuleDBAdapterV1.java
index 167e6fe15f..0f9a9af427 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ModuleDBAdapterV1.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ModuleDBAdapterV1.java
@@ -41,7 +41,7 @@ class ModuleDBAdapterV1 extends ModuleDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param create true if this constructor should create the table.
 	 * @param treeID associated program tree ID
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if database IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ParentChildDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ParentChildDBAdapterV0.java
index 6c239a5344..82c203e19b 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ParentChildDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ParentChildDBAdapterV0.java
@@ -39,7 +39,7 @@ public class ParentChildDBAdapterV0 extends ParentChildDBAdapter {
 	 * @param handle handle to the database containing the table.
 	 * @param create true if this constructor should create the table.
 	 * @param treeID associated program tree ID
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if database IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ProgramTreeDBAdapterV0.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ProgramTreeDBAdapterV0.java
index bf479b8dc4..883595b64a 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ProgramTreeDBAdapterV0.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/module/ProgramTreeDBAdapterV0.java
@@ -38,7 +38,7 @@ public class ProgramTreeDBAdapterV0 extends ProgramTreeDBAdapter {
 	 * Gets a version 0 adapter for the program tree database table.
 	 * @param handle handle to the database containing the table.
 	 * @param create true if this constructor should create the table.
-	 * @throws VersionException if the the table's version does not match the expected version
+	 * @throws VersionException if the table's version does not match the expected version
 	 * for this adapter.
 	 * @throws IOException if database IO error occurs
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/util/AddressRangeMapDB.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/util/AddressRangeMapDB.java
index 7c76443f37..be793f636d 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/util/AddressRangeMapDB.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/util/AddressRangeMapDB.java
@@ -492,7 +492,7 @@ public class AddressRangeMapDB implements DBListener {
 	}
 
 	/**
-	 * Notification that that something may have changed (undo/redo/image base change) and we need
+	 * Notification that something may have changed (undo/redo/image base change) and we need
 	 * to invalidate our cache and possibly have a wrapping record again.
 	 */
 	public void invalidate() {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/util/AddressRangeMapIterator.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/util/AddressRangeMapIterator.java
index 1ae57bed66..c0b7980b6c 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/util/AddressRangeMapIterator.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/util/AddressRangeMapIterator.java
@@ -253,7 +253,7 @@ class AddressRangeMapIterator implements AddressRangeIterator {
 	/**
 	 * Make sure the range is within the iterator's given start and end range. This really only
 	 * matters for the first and last range returned by the iterator, but it hard to know when
-	 * the given range is the first or last, just just trim all returned ranges.
+	 * the given range is the first or last, just trim all returned ranges.
 	 * @param range the range to be trimmed
 	 * @return the trimmed address range
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/disassemble/Disassembler.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/disassemble/Disassembler.java
index a1f5e91ac3..589f2fd899 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/disassemble/Disassembler.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/disassemble/Disassembler.java
@@ -959,7 +959,7 @@ public class Disassembler implements DisassemblerConflictHandler {
 					language.parse(instrMemBuffer, disassemblerContext, false);
 
 				// if fall-through already exists in another block - check for conflict 
-				// and terminate terminate block
+				// and terminate block
 				if (!block.isEmpty() && instructionSet != null &&
 					instructionSet.containsBlockAt(addr)) {
 					existingBlockStartInstr = instructionSet.getInstructionAt(addr);
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSet.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSet.java
index 3218af2ab0..84180a5b72 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSet.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSet.java
@@ -1301,7 +1301,7 @@ public class AddressSet implements AddressSetView {
 			Address end = addressRange.getMaxAddress();
 			AddressIterator it = getAddresses(start, true);
 			if (!it.hasNext()) {
-				break; // end of this this set reached, so not possible match.
+				break; // end of this set reached, so not possible match.
 			}
 			Address addr = it.next();
 			if (addr.compareTo(end) <= 0) {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSetMapping.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSetMapping.java
index c3e0c67a96..fb3643af4d 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSetMapping.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSetMapping.java
@@ -77,7 +77,7 @@ public class AddressSetMapping {
 	 */
 	private void setCurrentRange(int index) {
 		// optimized for sequential access, so first just check if the index is one more
-		// than the the current range of indexes, if so just move to the next range.
+		// than the current range of indexes, if so just move to the next range.
 		if (index == currentRangeEnd + 1) {
 			currentRangeIndex++;
 			currentRange = ranges.get(currentRangeIndex);
@@ -98,7 +98,7 @@ public class AddressSetMapping {
 	}
 
 	/**
-	 * Check if the given index in in the "current range".
+	 * Check if the given index in the "current range".
 	 * @param index the index to check
 	 */
 	private boolean indexInCurrentRange(int index) {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSetView.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSetView.java
index 218ae9ed91..ad849df994 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSetView.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSetView.java
@@ -95,10 +95,10 @@ public interface AddressSetView extends Iterable<AddressRange> {
 
 	/**
 	 * Returns an iterator of address ranges starting with the range that contains the given address.
-	 * If there is no range containing the start address, then the the first range will be
+	 * If there is no range containing the start address, then the first range will be
 	 * the next range greater than the start address if going forward, otherwise the range less than
 	 * the start address
-	 * @param start the address the the first range should contain.
+	 * @param start the address the first range should contain.
 	 * @param forward true iterators forward, false backwards
 	 * @return the AddressRange iterator
 	 */
@@ -120,10 +120,10 @@ public interface AddressSetView extends Iterable<AddressRange> {
 
 	/**
 	 * Returns an iterator of address ranges starting with the range that contains the given address.
-	 * If there is no range containing the start address, then the the first range will be
+	 * If there is no range containing the start address, then the first range will be
 	 * the next range greater than the start address if going forward, otherwise the range less than
 	 * the start address
-	 * @param start the address the the first range should contain.
+	 * @param start the address the first range should contain.
 	 * @param forward true iterators forward, false backwards
 	 * @return the AddressRange iterator
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSpace.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSpace.java
index f79bbc9cec..f5e69ffebe 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSpace.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/address/AddressSpace.java
@@ -438,13 +438,13 @@ public interface AddressSpace extends Comparable<AddressSpace> {
 	public boolean isMemorySpace();
 
 	/**
-	 * Returns true if this space represents represents a Loaded Memory
+	 * Returns true if this space represents a Loaded Memory
 	 * region (e.g., processor RAM).
 	 */
 	public boolean isLoadedMemorySpace();
 
 	/**
-	 * Returns true if this space represents represents a Non-Loaded storage region
+	 * Returns true if this space represents a Non-Loaded storage region
 	 * for retaining non-loaded file data (e.g., OTHER)
 	 */
 	public boolean isNonLoadedMemorySpace();
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/ArrayDataType.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/ArrayDataType.java
index 9bed952ae6..51a53e01cc 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/ArrayDataType.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/ArrayDataType.java
@@ -52,7 +52,7 @@ public class ArrayDataType extends DataTypeImpl implements Array {
 	 * Constructs a new Array dataType.  The specified datatype's {@link DataTypeManager} will 
 	 * be used for its data organization.
 	 * @param dataType the dataType of the elements in the array. {@link FactoryDataType} and
-	 * {@link Dynamic}, where {@link Dynamic#canSpecifyLength()} is false, are not not permitted.
+	 * {@link Dynamic}, where {@link Dynamic#canSpecifyLength()} is false, are not permitted.
 	 * @param numElements the number of elements in the array (0 is permitted).
 	 * @param elementLength the length of an individual element in the array.  This value
 	 * is only used for {@link Dynamic} dataType where {@link Dynamic#canSpecifyLength()} 
@@ -67,7 +67,7 @@ public class ArrayDataType extends DataTypeImpl implements Array {
 	/**
 	 * Constructs a new Array dataType.
 	 * @param dataType the dataType of the elements in the array. {@link FactoryDataType} and
-	 * {@link Dynamic}, where {@link Dynamic#canSpecifyLength()} is false, are not not permitted.
+	 * {@link Dynamic}, where {@link Dynamic#canSpecifyLength()} is false, are not permitted.
 	 * @param numElements the number of elements in the array (0 is permitted).
 	 * @param elementLength the length of an individual element in the array.  This value
 	 * is only used for {@link Dynamic} dataType where {@link Dynamic#canSpecifyLength()} 
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/Composite.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/Composite.java
index 320a5cadaf..a9bbdf2019 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/Composite.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/Composite.java
@@ -119,7 +119,7 @@ public interface Composite extends DataType {
 	/**
 	 * Adds a new bitfield to the end of this composite.  This method is intended
 	 * to be used with packed structures/unions only where the bitfield will be
-	 * appropriately packed.  The minimum storage storage byte size will be applied.
+	 * appropriately packed.  The minimum storage byte size will be applied.
 	 * It will not provide useful results for composites with packing disabled.
 	 * @param baseDataType the bitfield base datatype (certain restrictions apply).
 	 * @param bitSize the bitfield size in bits
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataOrganizationImpl.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataOrganizationImpl.java
index 3cd8147f02..6b11da7179 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataOrganizationImpl.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataOrganizationImpl.java
@@ -905,7 +905,7 @@ public class DataOrganizationImpl implements DataOrganization {
 	 * Restore settings from an XML stream. This expects to see parser positioned on the
 	 * &lt;data_organization&gt; start tag.  The XML is designed to override existing language-specific
 	 * default settings which are pre-populated with {@link #getDefaultOrganization(Language)}.  This
-	 * will will ensure that the endianness setting is properly established since it is not included
+	 * will ensure that the endianness setting is properly established since it is not included
 	 * in the XML.
 	 * @param parser is the XML stream
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataType.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataType.java
index 6bdb237c39..eb4e78623d 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataType.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataType.java
@@ -402,7 +402,7 @@ public interface DataType {
 	/**
 	 * Returns the prefix to use for this datatype when an abbreviated prefix is desired.
 	 * <p>
-	 * For example, some datatypes will built a large default label, at which is is more desirable
+	 * For example, some datatypes will built a large default label, at which is more desirable
 	 * to have a shortened prefix.
 	 *
 	 * @return the prefix to use for this datatype when an abbreviated prefix is desired. May return
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataTypeManager.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataTypeManager.java
index 395ece69da..390a30b437 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataTypeManager.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DataTypeManager.java
@@ -41,12 +41,12 @@ public interface DataTypeManager {
 	public static long DEFAULT_DATATYPE_ID = 0;
 
 	/**
-	 * ID if data type type is not known in this data type manager.
+	 * ID if data type is not known in this data type manager.
 	 */
 	public static long NULL_DATATYPE_ID = -1;
 
 	/**
-	 * ID if data type type is BAD.
+	 * ID if data type is BAD.
 	 */
 	public static long BAD_DATATYPE_ID = -2;
 
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DoubleComplexDataType.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DoubleComplexDataType.java
index c486ea1be2..632cdab895 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DoubleComplexDataType.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/DoubleComplexDataType.java
@@ -19,7 +19,7 @@ package ghidra.program.model.data;
  * Provides a definition of a {@code complex} built-in data type consisting of two double point
  * numbers in the IEEE 754 double precision format.
  * <P>
- * The size of the double point numbers is determined the the program's data organization as defined
+ * The size of the double point numbers is determined the program's data organization as defined
  * by the language/compiler spec
  */
 public class DoubleComplexDataType extends AbstractComplexDataType {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/Enum.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/Enum.java
index 239737e92e..2d7316f5e1 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/Enum.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/Enum.java
@@ -154,7 +154,7 @@ public interface Enum extends DataType {
 
 	/**
 	 * Returns the smallest length (size in bytes) this enum can be and still represent all of
-	 * it's current values. Note that that this will only return powers of 2 (1,2,4, or 8)
+	 * it's current values. Note that this will only return powers of 2 (1,2,4, or 8)
 	 * @return the smallest length (size in bytes) this enum can be and still represent all of
 	 * it's current values
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/EnumDataType.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/EnumDataType.java
index e92f17018b..cc8146e0b8 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/EnumDataType.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/EnumDataType.java
@@ -311,7 +311,7 @@ public class EnumDataType extends GenericDataType implements Enum {
 		boolean hasNegativeValues = minValue < 0;
 
 		// check the min and max values in this enum to see if they fit in 1 byte enum, then 
-		// 2 byte enum, then 4 byte enum. If the min min and max values fit, then all other values
+		// 2 byte enum, then 4 byte enum. If the min and max values fit, then all other values
 		// will fit as well
 		for (int size = 1; size < 8; size *= 2) {
 			long minPossible = getMinPossibleValue(size, hasNegativeValues);
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/FloatComplexDataType.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/FloatComplexDataType.java
index 2067a4e2ec..35c7a0e151 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/FloatComplexDataType.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/FloatComplexDataType.java
@@ -19,7 +19,7 @@ package ghidra.program.model.data;
  * Provides a definition of a {@code complex} built-in data type consisting of two floating point
  * numbers in the IEEE 754 double precision format.
  * <P>
- * The size of the floating point numbers is determined the the program's data organization as defined
+ * The size of the floating point numbers is determined the program's data organization as defined
  * by the language/compiler spec
  */
 public class FloatComplexDataType extends AbstractComplexDataType {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/LongDoubleComplexDataType.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/LongDoubleComplexDataType.java
index 0da8dde876..7d1c09bd6a 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/LongDoubleComplexDataType.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/data/LongDoubleComplexDataType.java
@@ -19,7 +19,7 @@ package ghidra.program.model.data;
  * Provides a definition of a {@code complex} built-in data type consisting of two LongDouble
  * numbers in the IEEE 754 double precision format.
  * <P>
- * The size of the LongDouble floating point numbers is determined the the program's data organization as defined
+ * The size of the LongDouble floating point numbers is determined the program's data organization as defined
  * by the language/compiler spec
  */
 public class LongDoubleComplexDataType extends AbstractComplexDataType {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/CodeUnitIterator.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/CodeUnitIterator.java
index 686f0b00a6..d87a669b6d 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/CodeUnitIterator.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/CodeUnitIterator.java
@@ -20,7 +20,7 @@ import java.util.Iterator;
 import util.CollectionUtils;
 
 /**
- * Interface to define an iterator over over some set of  code units.
+ * Interface to define an iterator over some set of  code units.
  * 
  * @see CollectionUtils#asIterable
  */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Data.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Data.java
index 44e6faf9d7..ed98fd6097 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Data.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Data.java
@@ -138,7 +138,7 @@ public interface Data extends CodeUnit, Settings {
 	public String getComponentPathName();
 
 	/**
-	 * Returns true if this is a pointer, implies getValue() will will return an Object that is an
+	 * Returns true if this is a pointer, implies getValue() will return an Object that is an
 	 * Address.
 	 * @return true if a pointer
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/DataIterator.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/DataIterator.java
index 6a7176d577..09c8b15124 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/DataIterator.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/DataIterator.java
@@ -21,7 +21,7 @@ import java.util.Iterator;
 import util.CollectionUtils;
 
 /**
- * Interface to define an iterator over over some set of Data.
+ * Interface to define an iterator over some set of Data.
  *
  * @see CollectionUtils#asIterable
  */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/InstructionIterator.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/InstructionIterator.java
index 275f14c072..e84c41a831 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/InstructionIterator.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/InstructionIterator.java
@@ -20,7 +20,7 @@ import java.util.Iterator;
 import util.CollectionUtils;
 
 /**
- * Interface to define an iterator over over some set of instructions.
+ * Interface to define an iterator over some set of instructions.
  * 
  * @see CollectionUtils#asIterable
  */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Listing.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Listing.java
index ac5407e6a8..3d12a658d4 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Listing.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/Listing.java
@@ -62,7 +62,7 @@ public interface Listing {
 	public CodeUnit getCodeUnitContaining(Address addr);
 
 	/**
-	 * get the next code unit that starts an an address that is greater than the
+	 * get the next code unit that starts an address that is greater than the
 	 * given address. The search will include instructions, defined data, and
 	 * undefined data.
 	 *
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/ProgramContext.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/ProgramContext.java
index effd7d8e60..ae25ab6802 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/ProgramContext.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/ProgramContext.java
@@ -144,7 +144,7 @@ public interface ProgramContext {
 			Address end);
 
 	/**
-	 * Returns the bounding address-range containing addr and the the same RegisterValue throughout.
+	 * Returns the bounding address-range containing addr and the same RegisterValue throughout.
 	 * The range returned may be limited by other value changes associated with register's base-register.
 	 * @param register program register
 	 * @param addr program address
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/ProgramUserData.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/ProgramUserData.java
index 920296ef29..8628f52cf3 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/ProgramUserData.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/listing/ProgramUserData.java
@@ -131,7 +131,7 @@ public interface ProgramUserData extends UserData {
 
 	/**
 	 * Get the Options for the given optionsName
-	 * @param optionsName the name of the options options to retrieve
+	 * @param optionsName the name of the options to retrieve
 	 * @return The options for the given name
 	 */
 	public Options getOptions(String optionsName);
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/mem/MemBuffer.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/mem/MemBuffer.java
index 61cb948474..f46a635d38 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/mem/MemBuffer.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/mem/MemBuffer.java
@@ -228,7 +228,7 @@ public interface MemBuffer {
 	 * Returns a stream that supplies the bytes of this buffer, starting at offset 0.
 	 * <p>
 	 * Note: the default implementation will produce invalid results if the underlying
-	 * MemBuffer instance is is mutated to point to different memory.
+	 * MemBuffer instance is mutated to point to different memory.
 	 * 
 	 * @return an InputStream that returns the bytes of this mem buffer
 	 */
@@ -240,7 +240,7 @@ public interface MemBuffer {
 	 * Returns a stream that supplies the bytes of this buffer, starting at the specified offset.
 	 * <p>
 	 * Note: the default implementation will produce invalid results if the underlying
-	 * MemBuffer instance is is mutated to point to different memory.
+	 * MemBuffer instance is mutated to point to different memory.
 	 * 
 	 * @param initialPosition location in membuffer where the stream should start
 	 * @param length number of bytes to limit the stream to 
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/symbol/SymbolTableListener.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/symbol/SymbolTableListener.java
index 4d07ac51c9..0ba5ee2217 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/symbol/SymbolTableListener.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/symbol/SymbolTableListener.java
@@ -46,7 +46,7 @@ public interface SymbolTableListener {
 	public void symbolRenamed(SourceType symbol, String oldName);
 
 	/**
-	 * Notification the the given symbol was set as the primary symbol.
+	 * Notification the given symbol was set as the primary symbol.
 	 * @param symbol the symbol that is now primary.
 	 */
 	public void primarySymbolSet(SourceType symbol);
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/BytesFieldLocation.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/BytesFieldLocation.java
index 25b5859992..5ccc20b0ab 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/BytesFieldLocation.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/BytesFieldLocation.java
@@ -32,7 +32,7 @@ public class BytesFieldLocation extends CodeUnitLocation {
 	 * @param componentPath the data component path which is specified as an array of indexes
 	 * where each index indicates the index into nested structures. For instructions or
 	 * simple data, this should be null.
-	 * @param columnInByte the character position in the the bytes
+	 * @param columnInByte the character position in the bytes
 	 */
 	public BytesFieldLocation(Program program, Address addr, Address byteAddress,
 			int[] componentPath, int columnInByte) {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/FunctionSignatureFieldLocation.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/FunctionSignatureFieldLocation.java
index b7ed094968..ad76e108ed 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/FunctionSignatureFieldLocation.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/FunctionSignatureFieldLocation.java
@@ -33,7 +33,7 @@ public class FunctionSignatureFieldLocation extends FunctionLocation {
 	/** 
 	 * When true the <tt>charOffset</tt> is not used to represent character position, but 
 	 * rather the character position is based upon the location of the subfield within the 
-	 * signature.  For example, the start of the function name location may be the the character
+	 * signature.  For example, the start of the function name location may be the character
 	 * position when this flag is <tt>true</tt>. 
 	 */
 	private boolean isFieldBasedPoisitioning;
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/RangeMapAdapter.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/RangeMapAdapter.java
index 53e4408616..4965c6a927 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/RangeMapAdapter.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/RangeMapAdapter.java
@@ -96,7 +96,7 @@ public interface RangeMapAdapter {
 			throws CancelledException;
 
 	/**
-	 * Returns the bounding address-range containing addr and the the same value throughout.
+	 * Returns the bounding address-range containing addr and the same value throughout.
 	 * This range will be limited by any value change associated with the base register.
 	 * @param addr the containing address
 	 * @return single value address-range containing addr
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/RegisterValueStore.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/RegisterValueStore.java
index a38510a3af..f935f8fa2e 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/RegisterValueStore.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/RegisterValueStore.java
@@ -317,7 +317,7 @@ public class RegisterValueStore {
 	}
 
 	/**
-	 * Returns the bounding address-range containing addr and the the same value throughout.
+	 * Returns the bounding address-range containing addr and the same value throughout.
 	 * This range will be limited by any value change associated with the base register.
 	 * @param addr the contained address
 	 * @return single value address-range containing addr
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/service/graph/GraphDisplay.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/service/graph/GraphDisplay.java
index a654c1a10a..b03e2e8a60 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/service/graph/GraphDisplay.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/service/graph/GraphDisplay.java
@@ -47,7 +47,7 @@ public interface GraphDisplay {
 	 * @param eventTrigger Provides a hint to the GraphDisplay as to why we are updating the
 	 * graph location so that the GraphDisplay can decide if it should send out a notification via
 	 * the {@link GraphDisplayListener#locationFocusChanged(AttributedVertex)}. For example, if we
-	 * are updating the the location due to an event from the main application, we don't want to
+	 * are updating the location due to an event from the main application, we don't want to
 	 * notify the application the graph changed to avoid event cycles. See {@link EventTrigger} for
 	 * more information.
 	 */
@@ -73,7 +73,7 @@ public interface GraphDisplay {
 	 * @param eventTrigger Provides a hint to the GraphDisplay as to why we are updating the
 	 * graph location so that the GraphDisplay can decide if it should send out a notification via
 	 * the {@link GraphDisplayListener#selectionChanged(Set)}. For example, if we are updating
-	 * the the location due to an event from the main application, we don't want to notify the
+	 * the location due to an event from the main application, we don't want to notify the
 	 * application the graph changed to avoid event cycles. See {@link EventTrigger} for more
 	 * information.
 	 */
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/service/graph/GraphDisplayListener.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/service/graph/GraphDisplayListener.java
index ef35f67a5b..5436cce649 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/service/graph/GraphDisplayListener.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/service/graph/GraphDisplayListener.java
@@ -40,7 +40,7 @@ public interface GraphDisplayListener {
 	 * instance of this GraphDisplayListener
 	 *
 	 * @param graphDisplay the new {@link GraphDisplay} the new listener will support
-	 * @return A new instance of a GraphDisplayListener that is the same type as as the instance
+	 * @return A new instance of a GraphDisplayListener that is the same type as the instance
 	 * on which it is called
 	 */
 	public GraphDisplayListener cloneWith(GraphDisplay graphDisplay);
diff --git a/Ghidra/Framework/Utility/src/main/java/ghidra/GhidraLauncher.java b/Ghidra/Framework/Utility/src/main/java/ghidra/GhidraLauncher.java
index d792b2c1ab..a0888b8f9d 100644
--- a/Ghidra/Framework/Utility/src/main/java/ghidra/GhidraLauncher.java
+++ b/Ghidra/Framework/Utility/src/main/java/ghidra/GhidraLauncher.java
@@ -162,7 +162,7 @@ public class GhidraLauncher {
 			boolean gradleDevMode = classpathList.isEmpty();
 			if (gradleDevMode) {
 				// Add the module jars Gradle built.
-				// Note: this finds Extensions' jar files so there is no need to to call
+				// Note: this finds Extensions' jar files so there is no need to call
 				// addExtensionJarPaths()
 				addModuleJarPaths(classpathList, modules);
 			}
diff --git a/Ghidra/Framework/Utility/src/main/java/ghidra/util/Location.java b/Ghidra/Framework/Utility/src/main/java/ghidra/util/Location.java
index 52dcd78673..3d744275c4 100644
--- a/Ghidra/Framework/Utility/src/main/java/ghidra/util/Location.java
+++ b/Ghidra/Framework/Utility/src/main/java/ghidra/util/Location.java
@@ -38,7 +38,7 @@ public interface Location {
 
 	/**
 	 * Will attempt to navigate to the location as appropriate.  For example, it may use the goto service
-	 * to navigate the code browser to a progam and and address.  Or it could launch a browser and
+	 * to navigate the code browser to a progam and address.  Or it could launch a browser and
 	 * display a web page.
 	 * @param provider a service provider that this location can use to find a service to help with
 	 * navigation.
diff --git a/Ghidra/Framework/Utility/src/main/java/ghidra/util/task/TaskMonitor.java b/Ghidra/Framework/Utility/src/main/java/ghidra/util/task/TaskMonitor.java
index 75d947e38b..69da93643b 100644
--- a/Ghidra/Framework/Utility/src/main/java/ghidra/util/task/TaskMonitor.java
+++ b/Ghidra/Framework/Utility/src/main/java/ghidra/util/task/TaskMonitor.java
@@ -103,7 +103,7 @@ public interface TaskMonitor {
 	 * Set the progress maximum value
 	 * <p><b>
 	 * Note: setting this value will reset the progress to be the max if the progress is currently
-	 * greater than the new new max value.</b>
+	 * greater than the new max value.</b>
 	 * @param max maximum value for progress
 	 */
 	public void setMaximum(long max);
diff --git a/Ghidra/Framework/Utility/src/main/java/utility/module/ModuleUtilities.java b/Ghidra/Framework/Utility/src/main/java/utility/module/ModuleUtilities.java
index 4092cbfe0a..331fea6567 100644
--- a/Ghidra/Framework/Utility/src/main/java/utility/module/ModuleUtilities.java
+++ b/Ghidra/Framework/Utility/src/main/java/utility/module/ModuleUtilities.java
@@ -165,7 +165,7 @@ public class ModuleUtilities {
 	/**
 	 * Searches for modules in a given collection of module root directories.
 	 *
-	 * @param appRootDirs The collection of application root directories associated with the the given
+	 * @param appRootDirs The collection of application root directories associated with the given
 	 *   list of module root directories.
 	 * @param moduleRootDirs A collection of module root directories to search for modules in.
 	 * @return The discovered modules as a map (mapping module name to module for convenience).
@@ -180,7 +180,7 @@ public class ModuleUtilities {
 	/**
 	 * Searches for modules in a given collection of module root directories.
 	 *
-	 * @param appRootDirs The collection of application root directories associated with the the given
+	 * @param appRootDirs The collection of application root directories associated with the given
 	 *   list of module root directories.
 	 * @param moduleRootDirs A collection of module root directories to search for modules in.
 	 * @param moduleFilter a predicate used to filter modules; a given module will not be included
diff --git a/Ghidra/Processors/AARCH64/data/languages/AARCH64neon.sinc b/Ghidra/Processors/AARCH64/data/languages/AARCH64neon.sinc
index 7a69a19a19..49bd49a2eb 100644
--- a/Ghidra/Processors/AARCH64/data/languages/AARCH64neon.sinc
+++ b/Ghidra/Processors/AARCH64/data/languages/AARCH64neon.sinc
@@ -18352,7 +18352,7 @@ is b_31=0 & Q=1 & b_2429=0b111110 & b_2223=0b11 & b_1021=0b100000011110 & Rd_FPR
 # SMACRO ARG1 ARG2 =$2comp@1
 # SMACRO(pseudo) ARG1 ARG2 =NEON_sqneg/1@1
 # AUNIT --inst x2e207800/mask=xfffffc00 --status fail --comment "nointsat"
-# Vector variant when when size = 00 , Q = 0 aa=0 esize=1 suf=VPR64.8B
+# Vector variant when size = 00 , Q = 0 aa=0 esize=1 suf=VPR64.8B
 
 :sqneg Rd_VPR64.8B, Rn_VPR64.8B
 is b_31=0 & Q=0 & b_2429=0b101110 & b_2223=0b00 & b_1021=0b100000011110 & Rd_VPR64.8B & Rn_VPR64.8B & Zd
@@ -18374,7 +18374,7 @@ is b_31=0 & Q=0 & b_2429=0b101110 & b_2223=0b00 & b_1021=0b100000011110 & Rd_VPR
 # SMACRO ARG1 ARG2 =$2comp@1
 # SMACRO(pseudo) ARG1 ARG2 =NEON_sqneg/1@1
 # AUNIT --inst x6e207800/mask=xfffffc00 --status fail --comment "nointsat"
-# Vector variant when when size = 00 , Q = 1 aa=0 esize=1 suf=VPR128.16B
+# Vector variant when size = 00 , Q = 1 aa=0 esize=1 suf=VPR128.16B
 
 :sqneg Rd_VPR128.16B, Rn_VPR128.16B
 is b_31=0 & Q=1 & b_2429=0b101110 & b_2223=0b00 & b_1021=0b100000011110 & Rd_VPR128.16B & Rn_VPR128.16B & Zd
@@ -18404,7 +18404,7 @@ is b_31=0 & Q=1 & b_2429=0b101110 & b_2223=0b00 & b_1021=0b100000011110 & Rd_VPR
 # SMACRO ARG1 ARG2 =$2comp@2
 # SMACRO(pseudo) ARG1 ARG2 =NEON_sqneg/1@2
 # AUNIT --inst x2e607800/mask=xfffffc00 --status pass --comment "nointsat"
-# Vector variant when when size = 01 , Q = 0 aa=0 esize=2 suf=VPR64.4H
+# Vector variant when size = 01 , Q = 0 aa=0 esize=2 suf=VPR64.4H
 
 :sqneg Rd_VPR64.4H, Rn_VPR64.4H
 is b_31=0 & Q=0 & b_2429=0b101110 & b_2223=0b01 & b_1021=0b100000011110 & Rd_VPR64.4H & Rn_VPR64.4H & Zd
@@ -18422,7 +18422,7 @@ is b_31=0 & Q=0 & b_2429=0b101110 & b_2223=0b01 & b_1021=0b100000011110 & Rd_VPR
 # SMACRO ARG1 ARG2 =$2comp@2
 # SMACRO(pseudo) ARG1 ARG2 =NEON_sqneg/1@2
 # AUNIT --inst x6e607800/mask=xfffffc00 --status pass --comment "nointsat"
-# Vector variant when when size = 01 , Q = 1 aa=0 esize=2 suf=VPR128.8H
+# Vector variant when size = 01 , Q = 1 aa=0 esize=2 suf=VPR128.8H
 
 :sqneg Rd_VPR128.8H, Rn_VPR128.8H
 is b_31=0 & Q=1 & b_2429=0b101110 & b_2223=0b01 & b_1021=0b100000011110 & Rd_VPR128.8H & Rn_VPR128.8H & Zd
@@ -18444,7 +18444,7 @@ is b_31=0 & Q=1 & b_2429=0b101110 & b_2223=0b01 & b_1021=0b100000011110 & Rd_VPR
 # SMACRO ARG1 ARG2 =$2comp@4
 # SMACRO(pseudo) ARG1 ARG2 =NEON_sqneg/1@4
 # AUNIT --inst x2ea07800/mask=xfffffc00 --status pass --comment "nointsat"
-# Vector variant when when size = 10 , Q = 0 aa=0 esize=4 suf=VPR64.2S
+# Vector variant when size = 10 , Q = 0 aa=0 esize=4 suf=VPR64.2S
 
 :sqneg Rd_VPR64.2S, Rn_VPR64.2S
 is b_31=0 & Q=0 & b_2429=0b101110 & b_2223=0b10 & b_1021=0b100000011110 & Rd_VPR64.2S & Rn_VPR64.2S & Zd
@@ -18460,7 +18460,7 @@ is b_31=0 & Q=0 & b_2429=0b101110 & b_2223=0b10 & b_1021=0b100000011110 & Rd_VPR
 # SMACRO ARG1 ARG2 =$2comp@4
 # SMACRO(pseudo) ARG1 ARG2 =NEON_sqneg/1@4
 # AUNIT --inst x6ea07800/mask=xfffffc00 --status pass --comment "nointsat"
-# Vector variant when when size = 10 , Q = 1 aa=0 esize=4 suf=VPR128.4S
+# Vector variant when size = 10 , Q = 1 aa=0 esize=4 suf=VPR128.4S
 
 :sqneg Rd_VPR128.4S, Rn_VPR128.4S
 is b_31=0 & Q=1 & b_2429=0b101110 & b_2223=0b10 & b_1021=0b100000011110 & Rd_VPR128.4S & Rn_VPR128.4S & Zd
@@ -18478,7 +18478,7 @@ is b_31=0 & Q=1 & b_2429=0b101110 & b_2223=0b10 & b_1021=0b100000011110 & Rd_VPR
 # SMACRO ARG1 ARG2 =$2comp@8
 # SMACRO(pseudo) ARG1 ARG2 =NEON_sqneg/1@8
 # AUNIT --inst x6ee07800/mask=xfffffc00 --status pass --comment "nointsat"
-# Vector variant when when size = 11 , Q = 1 aa=0 esize=8 suf=VPR128.2D
+# Vector variant when size = 11 , Q = 1 aa=0 esize=8 suf=VPR128.2D
 
 :sqneg Rd_VPR128.2D, Rn_VPR128.2D
 is b_31=0 & Q=1 & b_2429=0b101110 & b_2223=0b11 & b_1021=0b100000011110 & Rd_VPR128.2D & Rn_VPR128.2D & Zd
diff --git a/Ghidra/Processors/Atmel/ghidra_scripts/CreateAVR8GDTArchiveScript.java b/Ghidra/Processors/Atmel/ghidra_scripts/CreateAVR8GDTArchiveScript.java
index a6e58f445b..39c672c025 100644
--- a/Ghidra/Processors/Atmel/ghidra_scripts/CreateAVR8GDTArchiveScript.java
+++ b/Ghidra/Processors/Atmel/ghidra_scripts/CreateAVR8GDTArchiveScript.java
@@ -208,7 +208,7 @@ public class CreateAVR8GDTArchiveScript extends GhidraScript {
 					continue;
 				}
 
-				// look at string and see if if the definition of an SFR, register
+				// look at string and see if the definition of an SFR, register
 				String PTR_PREFIX_16 = "(*(volatile uint16_t *)";
 				String PTR_PREFIX_8 = "(*(volatile uint8_t *)";
 
diff --git a/Ghidra/Processors/Dalvik/src/main/java/ghidra/dalvik/dex/inject/ConstantPoolDex.java b/Ghidra/Processors/Dalvik/src/main/java/ghidra/dalvik/dex/inject/ConstantPoolDex.java
index 942527c795..17313fb0f5 100644
--- a/Ghidra/Processors/Dalvik/src/main/java/ghidra/dalvik/dex/inject/ConstantPoolDex.java
+++ b/Ghidra/Processors/Dalvik/src/main/java/ghidra/dalvik/dex/inject/ConstantPoolDex.java
@@ -119,7 +119,7 @@ public class ConstantPoolDex extends ConstantPool {
 		}
 		res.tag = ConstantPool.POINTER_METHOD;
 		// The FunctionDefinition is constructed on the fly, essentially as an anonymous type
-		// We use an internal naming scheme involding the the methodID to avoid name collisions
+		// We use an internal naming scheme involding the methodID to avoid name collisions
 		String defName = res.token + '_' + Integer.toHexString(methodID);
 		FunctionDefinitionDataType funcDef = new FunctionDefinitionDataType(defName, dtManager);
 		res.type = new PointerDataType(funcDef);
diff --git a/Ghidra/Processors/JVM/src/main/java/ghidra/javaclass/format/DescriptorDecoder.java b/Ghidra/Processors/JVM/src/main/java/ghidra/javaclass/format/DescriptorDecoder.java
index 0683eafd27..61815e3b62 100644
--- a/Ghidra/Processors/JVM/src/main/java/ghidra/javaclass/format/DescriptorDecoder.java
+++ b/Ghidra/Processors/JVM/src/main/java/ghidra/javaclass/format/DescriptorDecoder.java
@@ -198,7 +198,7 @@ public class DescriptorDecoder {
 
 		}
 
-		//now add the the name of the return type
+		//now add the name of the return type
 		String returnType =
 			methodDescriptor.substring(closeParenIndex + 1, methodDescriptor.length());
 		typeNames.add(getTypeNameFromDescriptor(returnType, fullyQualifiedName, replaceSlash));
@@ -469,7 +469,7 @@ public class DescriptorDecoder {
 	}
 
 	/**
-	 * Given an invocation type and an element in the constant pool, follows references in the the constant
+	 * Given an invocation type and an element in the constant pool, follows references in the constant
 	 * pool and returns the appropriate method descriptor.
 	 * @param offset
 	 * @param constantPool
diff --git a/Ghidra/Processors/JVM/src/main/java/ghidra/javaclass/format/attributes/RuntimeParameterAnnotationsAttribute.java b/Ghidra/Processors/JVM/src/main/java/ghidra/javaclass/format/attributes/RuntimeParameterAnnotationsAttribute.java
index bafa1028ef..e0ad29fb6f 100644
--- a/Ghidra/Processors/JVM/src/main/java/ghidra/javaclass/format/attributes/RuntimeParameterAnnotationsAttribute.java
+++ b/Ghidra/Processors/JVM/src/main/java/ghidra/javaclass/format/attributes/RuntimeParameterAnnotationsAttribute.java
@@ -36,7 +36,7 @@ import ghidra.util.exception.DuplicateNameException;
  * The RuntimeInvisibleParameterAnnotations attribute is similar to the
  * RuntimeVisibleParameterAnnotations attribute, except that the annotations
  * represented by a RuntimeInvisibleParameterAnnotations attribute must not
- * be made available for return by reflective APIs, unless the the Java virtual
+ * be made available for return by reflective APIs, unless the Java virtual
  * machine has specifically been instructed to retain these annotations via some
  * implementation-specific mechanism such as a command line flag. In the absence
  * of such instructions, the Java virtual machine ignores this attribute.
diff --git a/Ghidra/Processors/RISCV/src/main/java/ghidra/app/util/bin/format/elf/relocation/RISCV_ElfRelocationContext.java b/Ghidra/Processors/RISCV/src/main/java/ghidra/app/util/bin/format/elf/relocation/RISCV_ElfRelocationContext.java
index 090ceab974..a27ca8cff6 100644
--- a/Ghidra/Processors/RISCV/src/main/java/ghidra/app/util/bin/format/elf/relocation/RISCV_ElfRelocationContext.java
+++ b/Ghidra/Processors/RISCV/src/main/java/ghidra/app/util/bin/format/elf/relocation/RISCV_ElfRelocationContext.java
@@ -52,7 +52,7 @@ class RISCV_ElfRelocationContext extends ElfRelocationContext<RISCV_ElfRelocatio
 	}
 
 	/**
-	 * Find the HI20 relocation whose offset matches the value of of the specified symbol.
+	 * Find the HI20 relocation whose offset matches the value of the specified symbol.
 	 * @param hi20Symbol ELF symbol which corresponds to HI20 relocation
 	 * @return matching relocation or null if not found
 	 */
diff --git a/Ghidra/RuntimeScripts/Common/support/analyzeHeadlessREADME.html b/Ghidra/RuntimeScripts/Common/support/analyzeHeadlessREADME.html
index 963a5f2161..59893cbd20 100644
--- a/Ghidra/RuntimeScripts/Common/support/analyzeHeadlessREADME.html
+++ b/Ghidra/RuntimeScripts/Common/support/analyzeHeadlessREADME.html
@@ -364,7 +364,7 @@ The Headless Analyzer uses the command-line parameters discussed below. See <a h
     path to a script log file is not set, script logs are written to <typewriter>script.log</typewriter> 
     in the user directory, by default.
     <br><br>
-    Note: Only the built-in scripting print methods will print to the the
+    Note: Only the built-in scripting print methods will print to the
     script log file (<typewriter>print</typewriter>,
     <typewriter>println</typewriter>, <typewriter>printf</typewriter>,
     <typewriter>printerr</typewriter>).
@@ -805,7 +805,7 @@ analyzeHeadless /Users/user/ghidra/Projects Project1/folderOne -scriptPath /usr/
     
     <br><br>
     
-    <LI>Import and run scripts that take their own own arguments.</LI>
+    <LI>Import and run scripts that take their own arguments.</LI>
     <PRE>analyzeHeadless /Users/user/ghidra/projects MyProject -import hello.exe -preScript Script.java arg1 arg2 arg3 -preScript AnotherScript.java "arg1 with spaces" arg2 </PRE>
     
     <br><br>
@@ -894,7 +894,7 @@ the following methods can be run in both modes:
 <i>Further details for each specific <typewriter>askXxx()</typewriter> method can be found in the 
 method&apos;s JavaDoc.</i>
 <br><br>
-When running headlessly, the <typewriter>askXxx()</typewriter> methods allow users to to &quot;pre-set&quot; 
+When running headlessly, the <typewriter>askXxx()</typewriter> methods allow users to &quot;pre-set&quot;
 or &quot;pass in&quot; one or more values for use in scripts. Use the appropriate method to pass in
 values of certain types (i.e., file, directory, int, long).
 <br><br>
diff --git a/Ghidra/Test/IntegrationTest/src/test.slow/java/ghidra/program/model/pcode/PcodeEmitContextTest.java b/Ghidra/Test/IntegrationTest/src/test.slow/java/ghidra/program/model/pcode/PcodeEmitContextTest.java
index 282ed53c78..a71fff81ea 100644
--- a/Ghidra/Test/IntegrationTest/src/test.slow/java/ghidra/program/model/pcode/PcodeEmitContextTest.java
+++ b/Ghidra/Test/IntegrationTest/src/test.slow/java/ghidra/program/model/pcode/PcodeEmitContextTest.java
@@ -865,7 +865,7 @@ public class PcodeEmitContextTest extends AbstractGhidraHeadlessIntegrationTest
 		refManager.setPrimary(callotherOverrideRef1, true);
 		program.endTransaction(id, true);
 
-		//nothing should change without requesting overrides overrides
+		//nothing should change without requesting overrides
 		assertTrue(equalPcodeOpArrays(unmodified, userTwo.getPcode()));
 		assertTrue(equalPcodeOpArrays(unmodified, userTwo.getPcode(false)));
 
diff --git a/GhidraBuild/EclipsePlugins/GhidraSleighEditor/ghidra.xtext.sleigh/GhidraSleighEditor_README.html b/GhidraBuild/EclipsePlugins/GhidraSleighEditor/ghidra.xtext.sleigh/GhidraSleighEditor_README.html
index b8ba8ea9e5..1c1a258381 100644
--- a/GhidraBuild/EclipsePlugins/GhidraSleighEditor/ghidra.xtext.sleigh/GhidraSleighEditor_README.html
+++ b/GhidraBuild/EclipsePlugins/GhidraSleighEditor/ghidra.xtext.sleigh/GhidraSleighEditor_README.html
@@ -128,7 +128,7 @@ Once installed, any .sinc or .slaspec file that is edited will be brought up in
     <p>The editor validates the definition of variables including locals.
     Though legal in the sleigh compiler, it has been found that not declaring local variables leads to
     errors that are not be caught by the sleigh compiler.  For example, assigning to a variable 'ro' when the actual register name is 'r0' may go
-    unnoticed.  All local variables must be defined with with the 'local' keyword or with an initial ':size'.</p>
+    unnoticed.  All local variables must be defined with the 'local' keyword or with an initial ':size'.</p>
     <p>Warnings on duplicate names of tokens is marked in yellow.  Complex matching patterns such as <i>'!='&nbsp&nbsp'&lt'&nbsp&nbsp'&gt'</i> are warnings as well.  Using
     comparison matching operators can cause the generated .sla file to be much larger than necessary.  Comparison matching should really never be used on any
     tokens that are bigger than a few bits as the number of match cases generated will be large.  Their use is unavoidable in some cases.<p>
diff --git a/GhidraBuild/LaunchSupport/src/main/java/LaunchSupport.java b/GhidraBuild/LaunchSupport/src/main/java/LaunchSupport.java
index b0e72f23af..5f1c78f2bb 100644
--- a/GhidraBuild/LaunchSupport/src/main/java/LaunchSupport.java
+++ b/GhidraBuild/LaunchSupport/src/main/java/LaunchSupport.java
@@ -196,7 +196,7 @@ public class LaunchSupport {
 
 	/**
 	 * Handles interacting with the user to choose a Java home directory to use for the launch.  
-	 * If a valid Java home directory was successfully determined, it is saved to the the user's
+	 * If a valid Java home directory was successfully determined, it is saved to the user's
 	 * Java home save file, and an exit code that indicates success is returned.
 	 * 
 	 * @param javaConfig The Java configuration that defines what we support.  
diff --git a/GhidraDocs/GhidraClass/BSim/BSimTutorial_Overview_Queries.html b/GhidraDocs/GhidraClass/BSim/BSimTutorial_Overview_Queries.html
index 167d54c324..c4d6ffd297 100755
--- a/GhidraDocs/GhidraClass/BSim/BSimTutorial_Overview_Queries.html
+++ b/GhidraDocs/GhidraClass/BSim/BSimTutorial_Overview_Queries.html
@@ -13,7 +13,7 @@ Similarity and Confidence thresholds can be set for an Overview Query, but there
 You should see the following result:
 <img src="images/overview_window.png" alt="overview window" /></li>
   <li>Sort the table by the “Hit Count” column in ascending order.  Typically, the functions with the largest hit counts will have low self-significance.
-Verify that that is the case for this table.</li>
+Verify that is the case for this table.</li>
   <li>Q: Examine the functions with the highest hit count. Why are there so many matches for these functions?
     <details><summary>Answer:</summary> These are all instances of PostgreSQL statistics-reporting functions.  Their bodies are quite similar and they have identical BSim signatures.</details>
   </li>
diff --git a/GhidraDocs/GhidraClass/BSim/BSimTutorial_Overview_Queries.md b/GhidraDocs/GhidraClass/BSim/BSimTutorial_Overview_Queries.md
index b2034c01bc..272f2815d6 100644
--- a/GhidraDocs/GhidraClass/BSim/BSimTutorial_Overview_Queries.md
+++ b/GhidraDocs/GhidraClass/BSim/BSimTutorial_Overview_Queries.md
@@ -12,7 +12,7 @@ To perform an Overview Query, select **BSim -> Perform Overview...** from the Co
 You should see the following result:
 ![overview window](images/overview_window.png)
 1. Sort the table by the "Hit Count" column in ascending order.  Typically, the functions with the largest hit counts will have low self-significance.
-Verify that that is the case for this table. 
+Verify that is the case for this table.
 1. Q: Examine the functions with the highest hit count. Why are there so many matches for these functions?
    <details><summary>Answer:</summary> These are all instances of PostgreSQL statistics-reporting functions.  Their bodies are quite similar and they have identical BSim signatures.</details>
 
diff --git a/GhidraDocs/GhidraClass/BSim/BSimTutorial_Scripting.html b/GhidraDocs/GhidraClass/BSim/BSimTutorial_Scripting.html
index c2d3c4c2d1..02042e14ba 100755
--- a/GhidraDocs/GhidraClass/BSim/BSimTutorial_Scripting.html
+++ b/GhidraDocs/GhidraClass/BSim/BSimTutorial_Scripting.html
@@ -4,7 +4,7 @@
 
 <h2 id="scripting-bsim">Scripting BSim</h2>
 
-<p>There are are number of example scripts in the <code>BSim</code> script category, which demonstrate how to interact with BSim programmatically.</p>
+<p>There are a number of example scripts in the <code>BSim</code> script category, which demonstrate how to interact with BSim programmatically.</p>
 
 <p><img src="images/script_manager.png" alt="script manager" /></p>
 
diff --git a/GhidraDocs/GhidraClass/BSim/BSimTutorial_Scripting.md b/GhidraDocs/GhidraClass/BSim/BSimTutorial_Scripting.md
index 37f52720f7..3028971200 100644
--- a/GhidraDocs/GhidraClass/BSim/BSimTutorial_Scripting.md
+++ b/GhidraDocs/GhidraClass/BSim/BSimTutorial_Scripting.md
@@ -4,7 +4,7 @@ Finally, we briefly mention a few other topics related to BSim.
 
 ## Scripting BSim
 
-There are are number of example scripts in the ``BSim`` script category, which demonstrate how to interact with BSim programmatically.
+There are a number of example scripts in the ``BSim`` script category, which demonstrate how to interact with BSim programmatically.
 
 ![script manager](images/script_manager.png)
 
diff --git a/GhidraDocs/GhidraClass/Debugger/A4-MachineState.html b/GhidraDocs/GhidraClass/Debugger/A4-MachineState.html
index 1b19ac86be..31bd698081 100644
--- a/GhidraDocs/GhidraClass/Debugger/A4-MachineState.html
+++ b/GhidraDocs/GhidraClass/Debugger/A4-MachineState.html
@@ -536,7 +536,7 @@ size:</p>
 <li><strong>Truncation</strong>: <code>RAX:4</code> — Equivalent to
 <code>EAX</code></li>
 <li><strong>Truncation</strong>: <code>AL + RBX(4)</code> — AL added to
-the the 5th byte of RBX</li>
+the 5th byte of RBX</li>
 <li><strong>Bit Extraction</strong>: <code>RAX[7,8]</code> — Equivalent
 to <code>AL</code></li>
 </ul>
diff --git a/GhidraDocs/GhidraClass/Debugger/A4-MachineState.md b/GhidraDocs/GhidraClass/Debugger/A4-MachineState.md
index 3e15263666..05341d1a11 100644
--- a/GhidraDocs/GhidraClass/Debugger/A4-MachineState.md
+++ b/GhidraDocs/GhidraClass/Debugger/A4-MachineState.md
@@ -311,7 +311,7 @@ To manipulate variable size:
 * **Zero Extension**: `RAX + zext(EBX)`
 * **Sign Extension**: `RAX + sext(EBX)`
 * **Truncation**: `RAX:4` &mdash; Equivalent to `EAX`
-* **Truncation**: `AL + RBX(4)` &mdash; AL added to the the 5th byte of RBX
+* **Truncation**: `AL + RBX(4)` &mdash; AL added to the 5th byte of RBX
 * **Bit Extraction**: `RAX[7,8]` &mdash; Equivalent to `AL`
 
 **NOTE**: The second form of truncation drops the least-significant 4 bytes of RBX and takes as many of the remaining bytes (1 in this case) as necessary to match size with AL.
diff --git a/GhidraDocs/InstallationGuide.html b/GhidraDocs/InstallationGuide.html
index b6ef324e20..410a438669 100644
--- a/GhidraDocs/InstallationGuide.html
+++ b/GhidraDocs/InstallationGuide.html
@@ -201,7 +201,7 @@ destination using any unzip program (built-in OS utilities, 7-Zip, WinZip, WinRA
             <ol>
               <li>Under <b>System variables</b>, highlight <i>Path</i> and click <b>Edit...</b></li>
               <li>
-                At the end of the the <i>Variable value</i> field, add a semicolon followed by 
+                At the end of the <i>Variable value</i> field, add a semicolon followed by
                 <i>&lt;path of extracted JDK dir&gt;\bin</i>, or use the <b>New</b> button in the
                 <i>Edit environment variable</i> window to add a new entry to the <i>Path</i>.
               </li>
diff --git a/GhidraDocs/languages/html/sleigh_context.html b/GhidraDocs/languages/html/sleigh_context.html
index 6f1bd3b915..19c74443dc 100644
--- a/GhidraDocs/languages/html/sleigh_context.html
+++ b/GhidraDocs/languages/html/sleigh_context.html
@@ -278,7 +278,7 @@ select <span class="emphasis"><em>s</em></span> registers. As is described in
 <a class="xref" href="sleigh_context.html#sleigh_local_change" title="8.2. Local Context Change">Section 8.2, “Local Context Change”</a>, these assignments by themselves
 cause only a local context change.  However, the
 subsequent <span class="bold"><strong>globalset</strong></span> directives make
-the change persist outside of the the instructions
+the change persist outside of the instructions
 themselves. The <span class="bold"><strong>globalset</strong></span> directive
 takes two parameters, the second being the particular context variable
 being changed. The first parameter indicates the first address where
diff --git a/gradle/processorProject.gradle b/gradle/processorProject.gradle
index 3c2ecbd012..8589fb7a63 100644
--- a/gradle/processorProject.gradle
+++ b/gradle/processorProject.gradle
@@ -24,7 +24,7 @@
 
 /*****************************************************************************************
  *
- *  Create a configuration so the a dependency can be declared on the the software modeling
+ *  Create a configuration so the a dependency can be declared on the software modeling
  *  project which is where the sleigh compiler java code lives.  This will be used to
  *  form the classpath of the sleighCompile task that follows.
  *
diff --git a/gradle/root/usage.gradle b/gradle/root/usage.gradle
index b82158a7dd..0c00bc8b87 100644
--- a/gradle/root/usage.gradle
+++ b/gradle/root/usage.gradle
@@ -23,7 +23,7 @@ task usage {
 			
 GHIDRA GRADLE
 
-    Note: Most tasks can can be used to affect all modules or can
+    Note: Most tasks can be used to affect all modules or can
           be run against a specific module. For example:
 
 	from root project, "gradle buildHelp"  builds help for all modules.
-- 
2.45.1

