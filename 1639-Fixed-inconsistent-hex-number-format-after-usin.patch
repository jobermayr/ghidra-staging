From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: snemes <snemes@users.noreply.github.com>
Date: Sat, 14 Mar 2020 16:29:27 +0100
Subject: [PATCH] 1639: Fixed inconsistent hex number format after using
 Convert

---
 .../app/plugin/core/equate/ConvertToSignedHexAction.java      | 2 +-
 .../app/plugin/core/equate/ConvertToUnsignedHexAction.java    | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/ConvertToSignedHexAction.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/ConvertToSignedHexAction.java
index 0154fd9030..3c04d9b38d 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/ConvertToSignedHexAction.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/ConvertToSignedHexAction.java
@@ -37,7 +37,7 @@ public class ConvertToSignedHexAction extends AbstractConvertAction {
 			return null; // unsupported
 		}
 		long v = scalar.getSignedValue();
-		String valueStr = Long.toString(v, 16).toUpperCase();
+		String valueStr = Long.toString(v, 16);
 		if (v < 0) {
 			// use of substring removes '-' prefix for negative value
 			return "-0x" + valueStr.substring(1);
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/ConvertToUnsignedHexAction.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/ConvertToUnsignedHexAction.java
index 2a8b4f0eae..8d51073877 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/ConvertToUnsignedHexAction.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/ConvertToUnsignedHexAction.java
@@ -33,10 +33,10 @@ public class ConvertToUnsignedHexAction extends AbstractConvertAction {
 
 	@Override
 	protected String convertToString(Program program, Scalar scalar, boolean isData) {
-		String valueStr = Long.toHexString(scalar.getUnsignedValue()).toUpperCase();
+		String valueStr = Long.toHexString(scalar.getUnsignedValue());
 		if (isData) {
 			// Data relies on data format settings which uses "h" suffix
-			return valueStr + "h";
+			return valueStr.toUpperCase() + "h";
 		}
 		// Instructions rely on equate which uses 0x prefix (consistent with default scalar formatting)
 		return "0x" + valueStr;
-- 
2.44.0

