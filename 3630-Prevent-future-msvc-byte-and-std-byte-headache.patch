From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andrew Strelsky <ajs222@njit.edu>
Date: Sun, 14 Nov 2021 09:02:04 -0500
Subject: [PATCH] 3630: Prevent future msvc byte and std::byte headache

---
 .../Features/Decompiler/buildNatives.gradle   | 29 ++++++++++---------
 1 file changed, 15 insertions(+), 14 deletions(-)

diff --git a/Ghidra/Features/Decompiler/buildNatives.gradle b/Ghidra/Features/Decompiler/buildNatives.gradle
index e649948a2f..d74f1fd54b 100644
--- a/Ghidra/Features/Decompiler/buildNatives.gradle
+++ b/Ghidra/Features/Decompiler/buildNatives.gradle
@@ -4,16 +4,16 @@
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
- * 
+ *
  *      http://www.apache.org/licenses/LICENSE-2.0
- * 
+ *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
- 
+
 // Native build files are already applied in development mode (indicated by presence of the
 // Generic project).  Only need to apply them if we are in a distribution.
 if (findProject(':Generic') == null) {
@@ -31,11 +31,11 @@ model {
 	// the same directory with other files that are not used by the decompiler.
 	// That is why we have to list every cpp file that makes up the decomplier.
 	components {
-			
+
 		decompile(NativeExecutableSpec) {
-		
+
 			baseName "decompile"
-									
+
 			// these tell gradle for which platforms to build a decompiler executable.
 			targetPlatform "win_x86_64"
 			targetPlatform "linux_x86_64"
@@ -131,19 +131,19 @@ model {
 		         //       include "ifacedecomp.cc"			// uncomment for debug
 		         //       include "ifaceterm.cc"			// uncomment for debug
 		         //       include "interface.cc"			// uncomment for debug
-		         
+
 		         		// generated source files
-		         		
+
 		         	 	include "xml.cc"
 		         // 	  include "grammar.cc"				// used by diagnostic console mode
 		            }
 					exportedHeaders {
 						srcDir "src/decompile/cpp"
 					}
-				} // end cpp				
+				} // end cpp
 			} // end sources
 		} // end decompile
-		
+
 		sleigh(NativeExecutableSpec) {
 			targetPlatform "win_x86_64"
 			targetPlatform "linux_x86_64"
@@ -180,9 +180,9 @@ model {
 						include "compression.cc"
 						include "filemanage.cc"
 						include "slgh_compile.cc"
-						
+
 						// generated source files
-						
+
 						include "xml.cc"
 						include "pcodeparse.cc"
 						include "slghparse.cc"
@@ -208,9 +208,9 @@ model {
 				}
 			} // end binaries.all (sleigh)
 		} // end sleigh
-		
+
 	}  // end components
-	
+
 	binaries {
 		all{ b ->
 			if (b.toolChain in Gcc) {
@@ -229,6 +229,7 @@ model {
 				b.cppCompiler.args "/EHsc"
 				b.cppCompiler.define "_SECURE_SCL=0"
 				b.cppCompiler.define "_HAS_ITERATOR_DEBUGGING=0"
+				b.cppCompiler.define "_HAS_STD_BYTE=0"  // msvc has a byte typedef that conflicts with c++17 std::byte
 				// b.cppCompiler.args "/Zi"		// for DEBUG, uncomment this line
 				// b.cppCompiler.args "/FS"		// for DEBUG, uncomment this line
 				// b.linker.args "/DEBUG"		// for DEBUG, uncomment this line
-- 
2.45.0

