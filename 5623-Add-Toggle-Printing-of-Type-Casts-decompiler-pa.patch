From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Washi <washi1337@protonmail.com>
Date: Tue, 1 Aug 2023 17:30:17 +0200
Subject: [PATCH] 5623: Add 'Toggle Printing of Type Casts' decompiler pane
 menu item.

---
 .../Decompiler/certification.manifest         |  1 +
 .../core/decompile/DecompilerProvider.java    |  4 +++
 .../actions/ToggleTypeCastsAction.java        | 36 +++++++++++++++++++
 3 files changed, 41 insertions(+)
 create mode 100644 Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/actions/ToggleTypeCastsAction.java

diff --git a/Ghidra/Features/Decompiler/certification.manifest b/Ghidra/Features/Decompiler/certification.manifest
index b26052d871..3a2888ec9c 100644
--- a/Ghidra/Features/Decompiler/certification.manifest
+++ b/Ghidra/Features/Decompiler/certification.manifest
@@ -104,6 +104,7 @@ src/main/help/help/topics/DecompilePlugin/images/Defuse.png||GHIDRA||||END|
 src/main/help/help/topics/DecompilePlugin/images/EditFunctionSignature.png||GHIDRA||||END|
 src/main/help/help/topics/DecompilePlugin/images/ForwardSlice.png||GHIDRA||||END|
 src/main/help/help/topics/DecompilePlugin/images/Undefined.png||GHIDRA||||END|
+src/main/java/ghidra/app/plugin/core/decompile/actions/ToggleTypeCastsAction.java||GHIDRA||||END|
 src/main/resources/images/decompileFunction.gif||GHIDRA||reviewed||END|
 src/main/resources/images/eliminateUnreachable.png||GHIDRA||||END|
 src/main/resources/images/readOnly.png||GHIDRA||||END|
diff --git a/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/DecompilerProvider.java b/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/DecompilerProvider.java
index e151370219..2bb3a1a97a 100644
--- a/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/DecompilerProvider.java
+++ b/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/DecompilerProvider.java
@@ -1112,6 +1112,9 @@ public class DecompilerProvider extends NavigatableComponentProviderAdapter
 		String optionsGroup = "comment6 - Options Group";
 		subGroupPosition = 0; // reset for the next group
 
+		ToggleTypeCastsAction toggleTypeCastsAction = new ToggleTypeCastsAction(owner, tool);
+		setGroupInfo(toggleTypeCastsAction, optionsGroup, subGroupPosition++);
+
 		EditPropertiesAction propertiesAction = new EditPropertiesAction(owner, tool);
 		setGroupInfo(propertiesAction, optionsGroup, subGroupPosition++);
 
@@ -1172,6 +1175,7 @@ public class DecompilerProvider extends NavigatableComponentProviderAdapter
 		addLocalAction(convertAction);
 		addLocalAction(findAction);
 		addLocalAction(findReferencesAction);
+		addLocalAction(toggleTypeCastsAction);
 		addLocalAction(propertiesAction);
 		addLocalAction(cloneDecompilerAction);
 		addLocalAction(goToNextBraceAction);
diff --git a/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/actions/ToggleTypeCastsAction.java b/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/actions/ToggleTypeCastsAction.java
new file mode 100644
index 0000000000..8553894789
--- /dev/null
+++ b/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/actions/ToggleTypeCastsAction.java
@@ -0,0 +1,36 @@
+package ghidra.app.plugin.core.decompile.actions;
+
+import docking.ActionContext;
+import docking.action.DockingAction;
+import docking.action.MenuData;
+import docking.options.OptionsService;
+import ghidra.framework.options.ToolOptions;
+import ghidra.framework.plugintool.PluginTool;
+
+public class ToggleTypeCastsAction extends DockingAction  {
+	private final static String OPTIONS_TITLE = "Decompiler";
+	private final static String OPTION_PRINT_TYPE_CASTS = "Display.Disable printing of type casts";
+
+	private final PluginTool tool;
+
+	public ToggleTypeCastsAction(String owner, PluginTool tool) {
+		super("Toggle Printing of Type Casts", owner);
+
+		this.tool = tool;
+		setPopupMenuData(new MenuData( new String[]{ "Toggle Printing of Type Casts" }, "ZED" ));
+	}
+
+	@Override
+	public boolean isEnabledForContext(ActionContext context) {
+		return tool.getService(OptionsService.class) != null;
+	}
+
+	@Override
+	public void actionPerformed(ActionContext context) {
+		final OptionsService service = tool.getService(OptionsService.class);
+		final ToolOptions options = service.getOptions(OPTIONS_TITLE);
+		final boolean b = options.getBoolean(OPTION_PRINT_TYPE_CASTS, false);
+		options.setBoolean(OPTION_PRINT_TYPE_CASTS, !b);
+	}
+
+}
-- 
2.43.0

