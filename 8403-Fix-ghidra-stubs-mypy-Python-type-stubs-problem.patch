From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: widberg <jared.widberg@zetier.com>
Date: Thu, 31 Jul 2025 14:08:47 -0400
Subject: [PATCH] 8403: Fix ghidra-stubs mypy Python type stubs problems

[ghidra-stubs] Handle void return type

[ghidra-stubs] Auto convert more parameter types

[ghidra-stubs] Replace illegal characters in identifiers

[ghidra-stubs] Add this to ghidra_builtins
---
 .../typestubs/GhidraBuiltinsBuilder.java      |  3 +++
 .../typestubs/PythonTypeStubElement.java      |  2 +-
 .../typestubs/PythonTypeStubMethod.java       | 27 +++++++++++--------
 3 files changed, 20 insertions(+), 12 deletions(-)

diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/GhidraBuiltinsBuilder.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/GhidraBuiltinsBuilder.java
index 0a82e6e732..01eaab3463 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/GhidraBuiltinsBuilder.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/GhidraBuiltinsBuilder.java
@@ -133,6 +133,9 @@ class GhidraBuiltinsBuilder {
 			script.printField(field, printer, INDENT, false);
 			exports.add('"' + field.getSimpleName().toString() + '"');
 		}
+		printer.print(INDENT);
+		printer.println("this: GhidraScript");
+		exports.add("\"this\"");
 	}
 
 	/**
diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubElement.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubElement.java
index 283b454291..a98a2d8a7b 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubElement.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubElement.java
@@ -168,7 +168,7 @@ abstract class PythonTypeStubElement<T extends Element> {
 		if (PY_KEYWORDS.contains(value)) {
 			return value + "_";
 		}
-		return value;
+		return value.replace('$', '_');
 	}
 
 	/**
diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubMethod.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubMethod.java
index 62b6a08828..fbbd4b82f7 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubMethod.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubMethod.java
@@ -65,7 +65,10 @@ final class PythonTypeStubMethod extends PythonTypeStubElement<ExecutableElement
 			Map.entry("java.sql.Time", "datetime.time"),
 			Map.entry("java.sql.Date", "datetime.date"),
 			Map.entry("java.sql.Timestamp", "datetime.datetime"),
-			Map.entry("java.math.BigDecimal", "decimal.Decimal")));
+			Map.entry("java.math.BigDecimal", "decimal.Decimal"),
+			Map.entry("utility.function.ExceptionalCallback", "typing.Union[utility.function.ExceptionalCallback[E], typing.Callable[[], None]]"),
+			Map.entry("utility.function.ExceptionalSupplier", "typing.Union[utility.function.ExceptionalSupplier[T, E], typing.Callable[[], T]]"),
+			Map.entry("ghidra.program.util.string.FoundStringCallback", "typing.Union[ghidra.program.util.string.FoundStringCallback, typing.Callable[[ghidra.program.util.string.FoundString], None]]")));
 
 	// FIXME: list and set aren't automatically converted to java.util.List and java.util.Set :(
 	// if wanted they could be setup to be converted automatically by PyGhidra
@@ -225,6 +228,10 @@ final class PythonTypeStubMethod extends PythonTypeStubElement<ExecutableElement
 			};
 		}
 
+		if (type.getKind() == TypeKind.VOID) {
+			return "None";
+		}
+
 		if (type instanceof DeclaredType dt) {
 			Element element = dt.asElement();
 			if (element instanceof QualifiedNameable nameable) {
@@ -314,16 +321,14 @@ final class PythonTypeStubMethod extends PythonTypeStubElement<ExecutableElement
 		printer.print(")");
 
 		TypeMirror res = el.getReturnType();
-		if (res.getKind() != TypeKind.VOID) {
-			printer.print(" -> ");
-			String convertedType = convertResultType(res);
-			if (convertedType != null) {
-				printer.print(convertedType);
-			}
-			else {
-				printer.print(sanitizeQualifiedName(res));
-			}
-		}
+        printer.print(" -> ");
+        String convertedType = convertResultType(res);
+        if (convertedType != null) {
+            printer.print(convertedType);
+        }
+        else {
+            printer.print(sanitizeQualifiedName(res));
+        }
 	}
 
 	/**
-- 
2.45.1

