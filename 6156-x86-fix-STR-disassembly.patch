From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Grouzy <riegls.123@gmail.com>
Date: Thu, 25 Jan 2024 19:01:16 +0200
Subject: [PATCH] 6156: x86 fix STR disassembly

fix STR

wrap required STR in ifdef

fix pcode generated for STR
---
 Ghidra/Processors/x86/data/languages/ia.sinc | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/Ghidra/Processors/x86/data/languages/ia.sinc b/Ghidra/Processors/x86/data/languages/ia.sinc
index c87bed346a..4db30ddadb 100644
--- a/Ghidra/Processors/x86/data/languages/ia.sinc
+++ b/Ghidra/Processors/x86/data/languages/ia.sinc
@@ -3857,6 +3857,17 @@ define pcodeop stac;
 @endif
 
 :STR rm16       is vexMode=0 & byte=0xf; byte=0x0; rm16 & reg_opcode=1 ... { rm16 = TaskRegister(); }
+:STR Rmr32      is vexMode=0 & opsize=1 & byte=0xf; byte=0x0; Rmr32 & mod=3 & reg_opcode=1 & check_Rmr32_dest {
+	local tmp:2 = TaskRegister();
+	Rmr32 = zext(tmp);
+	build check_Rmr32_dest;
+}
+@ifdef IA64
+:STR Rmr64       is $(LONGMODE_ON) & vexMode=0 & opsize=2 & byte=0xf; byte=0x0; Rmr64 & mod=3 & reg_opcode=1 {
+	local tmp:2 = TaskRegister();
+	Rmr64 = zext(tmp);
+}
+@endif
 
 # See 'lockable.sinc' for memory destination, lockable variants
 :SUB  AL,imm8      is vexMode=0 & byte=0x2c; AL & imm8                          { subflags(   AL,imm8 );    AL =    AL -  imm8; resultflags(   AL); }
-- 
2.44.0

