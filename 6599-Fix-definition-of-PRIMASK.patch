From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Daniel Lehmann <danlehmannmuc@gmail.com>
Date: Wed, 29 May 2024 23:32:09 -0700
Subject: [PATCH] 6599: Fix definition of PRIMASK

PRIMASK is handled incorrectly in Sleigh. From the armv6m manual:
* Executing the instruction CPSID i sets PRIMASK.PM to 1.
* Executing the instruction CPSIE i sets PRIMASK.PM to 0.

So interrupts are enabled if the lowest bit is 0.

This patch swaps the meaning of 0 and 1, bringing the definition in line with
the reference documentation.
---
 .../Processors/ARM/data/languages/ARMTHUMBinstructions.sinc   | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/Ghidra/Processors/ARM/data/languages/ARMTHUMBinstructions.sinc b/Ghidra/Processors/ARM/data/languages/ARMTHUMBinstructions.sinc
index 6203ce58bd..fa0353020e 100644
--- a/Ghidra/Processors/ARM/data/languages/ARMTHUMBinstructions.sinc
+++ b/Ghidra/Processors/ARM/data/languages/ARMTHUMBinstructions.sinc
@@ -8837,7 +8837,7 @@ primask: "primask"			is epsilon {}
   Rd0811 = 0;
   b:1 = isCurrentModePrivileged();
   if (!b) goto inst_next; 
-  Rd0811 = isIRQinterruptsEnabled(); # should reflect primask register/bit
+  Rd0811 = isIRQinterruptsEnabled() ^ 1; # should reflect primask register/bit
 }
 
 basepri: "basepri"			is epsilon {}
@@ -8953,7 +8953,7 @@ define pcodeop setBasePriority;
   build ItCond;
   b:1 = isCurrentModePrivileged();
   if (!b) goto inst_next;
-  enableIRQinterrupts((Rn0003 & 1) == 1); # should set/clear primask register/bit
+  enableIRQinterrupts((Rn0003 & 1) == 0); # should set/clear primask register/bit
 }
 
 :msr^ItCond basepri,Rn0003 		is TMode=1 & ItCond & op4=0xf38 & Rn0003; op12=0x8 & th_psrmask=8 & sysm=17 & basepri
-- 
2.45.1

