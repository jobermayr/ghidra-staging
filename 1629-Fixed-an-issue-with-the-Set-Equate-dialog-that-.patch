From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: snemes <snemes@users.noreply.github.com>
Date: Fri, 13 Mar 2020 12:33:48 +0100
Subject: [PATCH] 1629: Fixed an issue with the Set Equate dialog, that caused
 unsigned Enum members not being displayed when a signed immediate operand was
 selected

---
 .../app/plugin/core/equate/CreateEquateCmd.java      | 10 ++++++++--
 .../ghidra/app/plugin/core/equate/EquatePlugin.java  |  9 ++++++++-
 .../java/ghidra/app/util/bean/SetEquateDialog.java   | 12 +++++++-----
 .../ghidra/program/model/listing/CodeUnitFormat.java |  2 +-
 .../ghidra/program/database/symbol/EquateDB.java     |  2 +-
 .../program/database/symbol/EquateManager.java       |  3 ++-
 6 files changed, 27 insertions(+), 11 deletions(-)

diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/CreateEquateCmd.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/CreateEquateCmd.java
index 7fee66677f..5c181500e7 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/CreateEquateCmd.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/CreateEquateCmd.java
@@ -76,7 +76,13 @@ public class CreateEquateCmd extends BackgroundCommand {
 			boolean overwriteExisting, ListingActionContext context) {
 		super("Create New Equate", true /* has progress */, true /* can cancel */,
 			false /* is modal */);
-		this.targetScalarValue = scalar.getValue();
+		this.targetScalarValue = 0;
+		for (long value : new long[] { scalar.getUnsignedValue(), scalar.getSignedValue() }) {
+			if (enoom.getName(value) != null) {
+				this.targetScalarValue = value;
+				break;
+			}
+		}
 		this.iterator = iter;
 		this.overwriteExisting = overwriteExisting;
 		this.context = context;
@@ -130,7 +136,7 @@ public class CreateEquateCmd extends BackgroundCommand {
 				}
 
 				Scalar scalar = (Scalar) opObject;
-				if (scalar.getValue() != targetScalarValue) {
+				if (scalar.getUnsignedValue() != targetScalarValue && scalar.getSignedValue() != targetScalarValue) {
 					continue;
 				}
 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/EquatePlugin.java b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/EquatePlugin.java
index 22451a8552..24857facec 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/EquatePlugin.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/equate/EquatePlugin.java
@@ -283,7 +283,14 @@ public class EquatePlugin extends Plugin {
 		if (s == null) {
 			return null;
 		}
-		return equateTable.getEquate(context.getAddress(), getOperandIndex(context), s.getValue());
+		Equate equate = null;
+		for (long value : new long[] { s.getUnsignedValue(), s.getSignedValue() }) {
+			equate = equateTable.getEquate(context.getAddress(), getOperandIndex(context), value);
+			if (equate != null) {
+				break;
+			}
+		}
+		return equate;
 	}
 
 	private void renameEquate(ListingActionContext context, Enum enoom, Equate oldEquate,
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bean/SetEquateDialog.java b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bean/SetEquateDialog.java
index 7058d1fb16..1b44f5adc4 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/app/util/bean/SetEquateDialog.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/app/util/bean/SetEquateDialog.java
@@ -597,7 +597,6 @@ public class SetEquateDialog extends DialogComponentProvider {
 		private Enum enoom;
 
 		EquateRowObject(String name, Enum enoom) {// Equate based off enum
-			long value = scalar.getValue();
 			if (enoom == null) {
 				return;
 			}
@@ -606,10 +605,13 @@ public class SetEquateDialog extends DialogComponentProvider {
 			this.entryName = name;
 			this.dataTypeUUID = enoom.getUniversalID();
 			this.path = getFullPath(enoom);
-			String formattedEquateName = EquateManager.formatNameForEquate(dataTypeUUID, value);
-			this.equate = equateTable.getEquate(formattedEquateName);
-			if (equate != null) {
-				this.refCount = equate.getReferenceCount();
+			this.refCount = 0;
+			for (long value : new long[] { scalar.getUnsignedValue(), scalar.getSignedValue() }) {
+				String formattedEquateName = EquateManager.formatNameForEquate(dataTypeUUID, value);
+				this.equate = equateTable.getEquate(formattedEquateName);
+				if (equate != null) {
+					this.refCount += equate.getReferenceCount();
+				}
 			}
 		}
 
diff --git a/Ghidra/Features/Base/src/main/java/ghidra/program/model/listing/CodeUnitFormat.java b/Ghidra/Features/Base/src/main/java/ghidra/program/model/listing/CodeUnitFormat.java
index ccb95ca197..f91fc128d0 100644
--- a/Ghidra/Features/Base/src/main/java/ghidra/program/model/listing/CodeUnitFormat.java
+++ b/Ghidra/Features/Base/src/main/java/ghidra/program/model/listing/CodeUnitFormat.java
@@ -1006,7 +1006,7 @@ public class CodeUnitFormat {
 	private Equate findEquate(Scalar scalar, List<Equate> equates) {
 		for (Equate equate : equates) {
 			if (equate.getValue() == scalar.getSignedValue() ||
-				equate.getValue() == scalar.getValue()) {
+				equate.getValue() == scalar.getUnsignedValue()) {
 				return equate;
 			}
 		}
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/EquateDB.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/EquateDB.java
index fdf823a467..3106bb7421 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/EquateDB.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/EquateDB.java
@@ -126,7 +126,7 @@ public class EquateDB extends DatabaseObject implements Equate {
 		for (short i = 0; i < numOperands; i++) {
 			for (Object obj : instr.getOpObjects(i)) {
 				if (obj instanceof Scalar) {
-					if (((Scalar) obj).getValue() != value) {
+					if (((Scalar) obj).getUnsignedValue() != value && ((Scalar) obj).getSignedValue() != value) {
 						continue;
 					}
 					if (opIndex >= 0) {
diff --git a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/EquateManager.java b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/EquateManager.java
index b70ca77d7f..6508c9ccf4 100644
--- a/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/EquateManager.java
+++ b/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/symbol/EquateManager.java
@@ -645,7 +645,8 @@ public class EquateManager implements EquateTable, ErrorHandler, ManagerDB {
 	 * @return The error formatted equate name
 	 */
 	public static String formatNameForEquateError(long equateValue) {
-		return "0x" + Long.toString(equateValue, 16) + " " + EquateManager.ERROR_TAG;
+		return (equateValue < 0 ? "-" : "") + "0x" + Long.toHexString(Math.abs(equateValue)) +
+			" " + EquateManager.ERROR_TAG;
 	}
 
 	/**
-- 
2.43.0

