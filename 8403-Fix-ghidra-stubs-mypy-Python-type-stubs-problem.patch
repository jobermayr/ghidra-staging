From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: widberg <jared.widberg@zetier.com>
Date: Thu, 31 Jul 2025 14:08:47 -0400
Subject: [PATCH] 8403: Fix ghidra-stubs mypy Python type stubs problems

Handle void return type

Auto convert more parameter types

Replace illegal characters in identifiers

Add this to ghidra_builtins

Re-export submodules

Handle overloading of super class methods
---
 .../typestubs/GhidraBuiltinsBuilder.java      |  4 +++
 .../typestubs/PythonTypeStubDoclet.java       | 25 +++++++++++++++++
 .../typestubs/PythonTypeStubElement.java      |  2 +-
 .../typestubs/PythonTypeStubMethod.java       | 27 +++++++++++--------
 .../typestubs/PythonTypeStubPackage.java      |  2 ++
 .../doclets/typestubs/PythonTypeStubType.java |  1 +
 6 files changed, 49 insertions(+), 12 deletions(-)

diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/GhidraBuiltinsBuilder.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/GhidraBuiltinsBuilder.java
index 0a82e6e732..692670478f 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/GhidraBuiltinsBuilder.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/GhidraBuiltinsBuilder.java
@@ -133,6 +133,9 @@ class GhidraBuiltinsBuilder {
 			script.printField(field, printer, INDENT, false);
 			exports.add('"' + field.getSimpleName().toString() + '"');
 		}
+		printer.print(INDENT);
+		printer.println("this: JythonScript");
+		exports.add("\"this\"");
 	}
 
 	/**
@@ -200,6 +203,7 @@ class GhidraBuiltinsBuilder {
 		printer.println();
 		printer.println();
 		printer.println("from ghidra.app.script import *");
+		printer.println("from ghidra.jython import *");
 		printer.println();
 		printer.println();
 	}
diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubDoclet.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubDoclet.java
index 66dd8fb2aa..804160d12f 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubDoclet.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubDoclet.java
@@ -260,6 +260,31 @@ public class PythonTypeStubDoclet implements Doclet {
 		}
 	}
 
+	void printReExports(PrintWriter printer, PackageElement el) {
+		String baseName = PythonTypeStubElement.sanitizeQualifiedName(el);
+		String basePrefix = baseName + ".";
+		Set<String> subpackage_names = new LinkedHashSet<>();
+
+		for (Element e : docEnv.getIncludedElements()) {
+			if (!(e instanceof PackageElement)) continue;
+			PackageElement pkg = (PackageElement)e;
+			String fullName = PythonTypeStubElement.sanitizeQualifiedName(pkg);
+
+			if (fullName.contentEquals(baseName)) continue;
+			if (!fullName.startsWith(basePrefix)) continue;
+
+			String remainder = fullName.substring((basePrefix.length()));
+			int dotIndex = remainder.indexOf('.');
+			if (dotIndex == -1) {
+				subpackage_names.add(remainder);
+			}
+		}
+
+		for (String subpackage_name : subpackage_names) {
+			printer.printf("from . import %1$s as %1$s\n", subpackage_name);
+		}
+	}
+
 	/**
 	 * Checks if the provided element is deprecated
 	 *
diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubElement.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubElement.java
index 283b454291..a98a2d8a7b 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubElement.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubElement.java
@@ -168,7 +168,7 @@ abstract class PythonTypeStubElement<T extends Element> {
 		if (PY_KEYWORDS.contains(value)) {
 			return value + "_";
 		}
-		return value;
+		return value.replace('$', '_');
 	}
 
 	/**
diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubMethod.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubMethod.java
index 62b6a08828..fbbd4b82f7 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubMethod.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubMethod.java
@@ -65,7 +65,10 @@ final class PythonTypeStubMethod extends PythonTypeStubElement<ExecutableElement
 			Map.entry("java.sql.Time", "datetime.time"),
 			Map.entry("java.sql.Date", "datetime.date"),
 			Map.entry("java.sql.Timestamp", "datetime.datetime"),
-			Map.entry("java.math.BigDecimal", "decimal.Decimal")));
+			Map.entry("java.math.BigDecimal", "decimal.Decimal"),
+			Map.entry("utility.function.ExceptionalCallback", "typing.Union[utility.function.ExceptionalCallback[E], typing.Callable[[], None]]"),
+			Map.entry("utility.function.ExceptionalSupplier", "typing.Union[utility.function.ExceptionalSupplier[T, E], typing.Callable[[], T]]"),
+			Map.entry("ghidra.program.util.string.FoundStringCallback", "typing.Union[ghidra.program.util.string.FoundStringCallback, typing.Callable[[ghidra.program.util.string.FoundString], None]]")));
 
 	// FIXME: list and set aren't automatically converted to java.util.List and java.util.Set :(
 	// if wanted they could be setup to be converted automatically by PyGhidra
@@ -225,6 +228,10 @@ final class PythonTypeStubMethod extends PythonTypeStubElement<ExecutableElement
 			};
 		}
 
+		if (type.getKind() == TypeKind.VOID) {
+			return "None";
+		}
+
 		if (type instanceof DeclaredType dt) {
 			Element element = dt.asElement();
 			if (element instanceof QualifiedNameable nameable) {
@@ -314,16 +321,14 @@ final class PythonTypeStubMethod extends PythonTypeStubElement<ExecutableElement
 		printer.print(")");
 
 		TypeMirror res = el.getReturnType();
-		if (res.getKind() != TypeKind.VOID) {
-			printer.print(" -> ");
-			String convertedType = convertResultType(res);
-			if (convertedType != null) {
-				printer.print(convertedType);
-			}
-			else {
-				printer.print(sanitizeQualifiedName(res));
-			}
-		}
+        printer.print(" -> ");
+        String convertedType = convertResultType(res);
+        if (convertedType != null) {
+            printer.print(convertedType);
+        }
+        else {
+            printer.print(sanitizeQualifiedName(res));
+        }
 	}
 
 	/**
diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubPackage.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubPackage.java
index 18e9766666..c9a984edc1 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubPackage.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubPackage.java
@@ -156,6 +156,8 @@ final class PythonTypeStubPackage extends PythonTypeStubElement<PackageElement>
 		printer.println("import jpype # type: ignore");
 		printer.println("import jpype.protocol # type: ignore");
 		printer.println();
+		doclet.printReExports(printer, el);
+		printer.println();
 		doclet.printImports(printer, getImportedPackages());
 		printer.println();
 		printer.println();
diff --git a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubType.java b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubType.java
index 056767d8ea..fcd06d9fe8 100644
--- a/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubType.java
+++ b/GhidraBuild/BuildFiles/Doclets/src/main/java/ghidra/doclets/typestubs/PythonTypeStubType.java
@@ -220,6 +220,7 @@ class PythonTypeStubType extends PythonTypeStubElement<TypeElement> {
 			}
 
 		}
+		// TODO: Incorporate super class overloads
 		// apparently overloads must come one after another
 		// therefore this must be sorted
 		methods.sort(null);
-- 
2.45.1

