From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: srichmo1 <srichmond2486@gmail.com>
Date: Tue, 29 Aug 2023 09:24:37 -0400
Subject: [PATCH] 5718: Update avr32a_instruction_flow.sinc

The specification for avr32 says the LR register should be reserved for using return addresses, but in reality older compilers seem to use it to hold addresses for ICALL. When they do so without this fix the value in LR is immediately overwritten and during analysis only appears to be a function call to the opcode immediately after ICALL.

tmp assigned rd0 instead of LR
---
 .../Atmel/data/languages/avr32a_instruction_flow.sinc          | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/Ghidra/Processors/Atmel/data/languages/avr32a_instruction_flow.sinc b/Ghidra/Processors/Atmel/data/languages/avr32a_instruction_flow.sinc
index 2397036592..bcfa9a2479 100644
--- a/Ghidra/Processors/Atmel/data/languages/avr32a_instruction_flow.sinc
+++ b/Ghidra/Processors/Atmel/data/languages/avr32a_instruction_flow.sinc
@@ -154,8 +154,9 @@ RJMPdisp: disp is disp4_8 & sdisp0_2
 # 0101 1101 0001 dddd
 
 :ICALL rd0 is op4_12=0x5d1 & rd0 {
+        tmp:4 = rd0;
         LR = inst_next;
-        call [rd0];
+        call [tmp];
 }
 
 #---------------------------------------------------------------------
-- 
2.43.0

