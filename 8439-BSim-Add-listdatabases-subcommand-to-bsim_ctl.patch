From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andras Gemes <gemesa@protonmail.com>
Date: Thu, 14 Aug 2025 21:55:44 +0200
Subject: [PATCH] 8439: BSim: Add listdatabases subcommand to bsim_ctl

---
 .../topics/BSim/CommandLineReference.html     |  8 ++
 .../bsim/query/BSimControlLaunchable.java     | 83 ++++++++++++++-----
 2 files changed, 71 insertions(+), 20 deletions(-)

diff --git a/Ghidra/Features/BSim/src/main/help/help/topics/BSim/CommandLineReference.html b/Ghidra/Features/BSim/src/main/help/help/topics/BSim/CommandLineReference.html
index 601d5e29f9..37c4604b0c 100644
--- a/Ghidra/Features/BSim/src/main/help/help/topics/BSim/CommandLineReference.html
+++ b/Ghidra/Features/BSim/src/main/help/help/topics/BSim/CommandLineReference.html
@@ -46,6 +46,7 @@
     bsim_ctl dropuser        &lt;/datadir-path&gt; &lt;username&gt;
     bsim_ctl resetpassword   &lt;username&gt;
     bsim_ctl changeauth      &lt;/datadir-path&gt; [--auth|-a&nbsp;pki|password|trust] [--noLocalAuth] [--cafile&nbsp;&lt;/cacert-path&gt;] [--dn&nbsp;"&lt;distinguished-name&gt;"]
+    bsim_ctl listdatabases   &lt;/datadir-path&gt;
     bsim_ctl changeprivilege &lt;username&gt; admin|user
     bsim_ctl dumpall         &lt;/dumpfile-path&gt;
     bsim_ctl restore         &lt;/dumpfile-path&gt;
@@ -207,6 +208,13 @@
                 user and is required for <SPAN class="command"><STRONG>--auth&nbsp;pki</STRONG></SPAN>.</P>
               </DD>
 
+              <DT><SPAN class="term"><SPAN class="bold"><STRONG>listdatabases</STRONG></SPAN></SPAN></DT>
+
+              <DD>
+                <P>Retrieves the databases of a PostgreSQL server. The path to the server's
+                data directory must be specified. The server must be running.</P>
+              </DD>
+
               <DT><SPAN class="term"><SPAN class=
               "bold"><STRONG>resetpassword</STRONG></SPAN></SPAN></DT>
 
diff --git a/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/BSimControlLaunchable.java b/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/BSimControlLaunchable.java
index d004834a73..6892619511 100644
--- a/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/BSimControlLaunchable.java
+++ b/Ghidra/Features/BSim/src/main/java/ghidra/features/bsim/query/BSimControlLaunchable.java
@@ -60,6 +60,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 	public final static String COMMAND_CHANGEAUTH = "changeauth";
 	public final static String COMMAND_DUMPALL = "dumpall";
 	public final static String COMMAND_RESTORE = "restore";
+	public final static String COMMAND_LISTDATABASES = "listdatabases";
 
 	// Options that require a value argument
 	public static final String CAFILE_OPTION = "--cafile";
@@ -104,6 +105,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		AUTH_OPTION, DN_OPTION, NO_LOCAL_AUTH_OPTION, CAFILE_OPTION);
 	private static final Set<String> DUMPALL_OPTIONS = Set.of();
 	private static final Set<String> RESTORE_OPTIONS = Set.of();
+	private static final Set<String> LISTDATABASES_OPTIONS = Set.of();
 
 	//@formatter:on
 	private static final Map<String, Set<String>> ALLOWED_OPTION_MAP = new HashMap<>();
@@ -118,6 +120,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		ALLOWED_OPTION_MAP.put(COMMAND_CHANGEAUTH, CHANGEAUTH_OPTIONS);
 		ALLOWED_OPTION_MAP.put(COMMAND_DUMPALL, DUMPALL_OPTIONS);
 		ALLOWED_OPTION_MAP.put(COMMAND_RESTORE, RESTORE_OPTIONS);
+		ALLOWED_OPTION_MAP.put(COMMAND_LISTDATABASES, LISTDATABASES_OPTIONS);
 	}
 
 	private final static String POSTGRES = "postgresql";
@@ -239,6 +242,9 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 			case COMMAND_RESTORE:
 				scanDumpFile(params, slot++);
 				break;
+			case COMMAND_LISTDATABASES:
+				scanDataDirectory(params, slot++);
+				break;
 			case COMMAND_CHANGE_PRIVILEGE:
 				scanUsername(params, slot++);
 				scanPrivilege(params, slot++);
@@ -460,7 +466,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 			command.add("-p");
 			command.add(Integer.toString(port));
 		}
-		int ret = runCommand(null, command, loadLibraryVar, loadLibraryValue);
+		int ret = runCommand(null, command, loadLibraryVar, loadLibraryValue, false);
 		return (ret == 0);
 	}
 
@@ -696,15 +702,17 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 	/**
 	 * Invoke an external executable/command, display the output and error streams on the console,
 	 * and return the exit value of the command.  
-	 * @param directory	 is the working directory for the command
-	 * @param command    is the command-line (including arguments)
-	 * @param envvar     if non-null, is an environment variable to set for the command
-	 * @param value      is the corresponding environment variable value
+	 * @param directory	    is the working directory for the command
+	 * @param command       is the command-line (including arguments)
+	 * @param envvar        if non-null, is an environment variable to set for the command
+	 * @param value         is the corresponding environment variable value
+	 * @param stdoutEnabled if true, stdout is displayed on console
 	 * @return the exit status of the command (0=no error)
 	 * @throws IOException if the process cannot be started
 	 * @throws InterruptedException if there is a problem waiting for the process to finish
 	 */
-	private int runCommand(File directory, List<String> command, String envvar, String value)
+	private int runCommand(File directory, List<String> command, String envvar, String value,
+			boolean stdoutEnabled)
 			throws IOException, InterruptedException {
 		ProcessBuilder processBuilder = new ProcessBuilder(command);
 		processBuilder.directory(directory);		// Set the working directory
@@ -714,7 +722,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		}
 		Process process = processBuilder.start();
 
-		new IOThread(process.getInputStream(), true).start();
+		new IOThread(process.getInputStream(), !stdoutEnabled).start();
 		IOThread errThread = new IOThread(process.getErrorStream(), false);
 		errThread.start();
 		errThread.join(); // Ensure all stderr output is processed to avoid mixed-up console output
@@ -929,7 +937,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		}
 		command.add("-D");
 		command.add(dataDirectory.getAbsolutePath());
-		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue);
+		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue, false);
 		if (res != 0) {
 			throw new IOException("Error initializing postgres database");
 		}
@@ -1058,7 +1066,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		command.add(dataDirectory.getAbsolutePath());
 		command.add("-l");
 		command.add(logFile.getAbsolutePath());
-		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue);
+		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue, false);
 		if (res != 0) {
 			throw new IOException("Could not start postgres server process");
 		}
@@ -1110,7 +1118,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 			command.add("-p");
 			command.add(Integer.toString(port));
 		}
-		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue);
+		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue, false);
 		if (res != 0) {
 			throw new IOException("Could not dump databases");
 		}
@@ -1148,7 +1156,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 			command.add("-p");
 			command.add(Integer.toString(port));
 		}
-		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue);
+		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue, false);
 		if (res != 0) {
 			throw new IOException("Could not restore databases");
 		}
@@ -1172,7 +1180,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 			command.add("-m");
 			command.add("fast");		// Does not wait for clients to disconnect, all active transactions rolled back
 		}
-		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue);
+		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue, false);
 		if (res != 0) {
 			throw new IOException("Error shutting down postgres server process");
 		}
@@ -1191,7 +1199,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		command.add("status");
 		command.add("-D");
 		command.add(dataDirectory.getAbsolutePath());
-		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue);
+		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue, false);
 		if (res == 0) {
 			System.out.println("Server running");
 		}
@@ -1203,6 +1211,37 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		}
 	}
 
+	/**
+	 * Retrieve the list of the databases on a PostgreSQL server.
+	 * @throws IOException if database list can not be retrieved
+	 * @throws InterruptedException if the list databases command is interrupted
+	 */
+	private void listDatabasesCommand()
+			throws IOException, InterruptedException, GeneralSecurityException {
+		discoverPostgresInstall();
+
+		if (localAuthentication == AUTHENTICATION_PKI && certParameter == null) {
+			throw new GeneralSecurityException(
+				"Path to certificate necessary to list databases (--cert /path/to/cert)");
+		}
+
+		List<String> command = new ArrayList<String>();
+		command.add(postgresPsql.getAbsolutePath());
+		command.add("-l");
+		command.add("-U");
+		command.add(connectingUserName);
+		command.add("-h");
+		command.add("localhost");
+		if ((port != -1) && (port != 5432)) {	// Non-default port
+			command.add("-p");
+			command.add(Integer.toString(port));
+		}
+		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue, true);
+		if (res != 0) {
+			throw new IOException("Could not list databases");
+		}
+	}
+
 	/**
 	 * Trigger a server running on the local host to rescan its identity file to pickup
 	 * any changes to the user mapping
@@ -1216,7 +1255,7 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		command.add("-D");
 		command.add(dataDirectory.getAbsolutePath());
 		command.add("-s");
-		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue);
+		int res = runCommand(null, command, loadLibraryVar, loadLibraryValue, false);
 		if (res != 0) {
 			throw new IOException("Error creating new user");
 		}
@@ -1559,6 +1598,9 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 				case COMMAND_RESTORE:
 					restoreCommand();
 					break;
+				case COMMAND_LISTDATABASES:
+					listDatabasesCommand();
+					break;
 				case COMMAND_RESET_PASSWORD:
 					passwordCommand();
 					break;
@@ -1583,12 +1625,13 @@ public class BSimControlLaunchable implements GhidraLaunchable {
 		//@formatter:off
 		System.err.println("\n" + 
 			"USAGE: bsim_ctl [command]  required-args... [OPTIONS...}\n\n" +
-			"                start      </datadir-path> [--auth|-a pki|password|trust] [--noLocalAuth] [--cafile \"</cacert-path>\"] [--dn \"<distinguished-name>\"]\n" +
-			"                stop       </datadir-path> [--force]\n" +
-			"                status     </datadir-path>\n" +
-			"                adduser    </datadir-path> <username> [--dn \"<distinguished-name>\"]\n" +
-			"                dropuser   </datadir-path> <username>\n" +
-			"                changeauth </datadir-path> [--auth|-a pki|password|trust] [--noLocalAuth] [--cafile \"</cacert-path>\"] [--dn \"<distinguished-name>\"]\n" +
+			"                start         </datadir-path> [--auth|-a pki|password|trust] [--noLocalAuth] [--cafile \"</cacert-path>\"] [--dn \"<distinguished-name>\"]\n" +
+			"                stop          </datadir-path> [--force]\n" +
+			"                status        </datadir-path>\n" +
+			"                adduser       </datadir-path> <username> [--dn \"<distinguished-name>\"]\n" +
+			"                dropuser      </datadir-path> <username>\n" +
+			"                changeauth    </datadir-path> [--auth|-a pki|password|trust] [--noLocalAuth] [--cafile \"</cacert-path>\"] [--dn \"<distinguished-name>\"]\n" +
+			"                listdatabases </datadir-path>\n" +
 			"                resetpassword   <username>\n" +
 			"                changeprivilege <username> admin|user\n" + 
 			"                dumpall    </dumpfile-path>\n" +
-- 
2.45.1

